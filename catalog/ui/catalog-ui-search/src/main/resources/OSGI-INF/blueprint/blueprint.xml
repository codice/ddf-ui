<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
-->

<blueprint xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <reference id="webBranding" interface="org.codice.ddf.branding.BrandingPlugin"/>

    <camelContext xmlns="http://camel.apache.org/schema/blueprint" id="uiCamelContext"/>

    <bean id="servlet" class="org.codice.proxy.http.HttpProxyCamelHttpTransportServlet">
        <argument ref="uiCamelContext"/>
    </bean>

    <service interface="javax.servlet.Servlet">
        <service-properties>
            <entry key="alias" value="/search/catalog/proxy"/>
            <entry key="servlet-name" value="uiProxyServlet"/>
        </service-properties>
        <ref component-id="servlet"/>
    </service>

    <bean id="httpProxyService" class="org.codice.proxy.http.HttpProxyServiceImpl"
          destroy-method="destroy">
        <argument ref="uiCamelContext"/>
    </bean>

    <bean id="configurationStore"
          class="org.codice.ddf.ui.searchui.standard.endpoints.ConfigurationStore"
          destroy-method="destroy">
        <cm:managed-properties
                persistent-id="org.codice.ddf.ui.searchui.standard.endpoints.ConfigurationStore"
                update-strategy="container-managed"/>
        <property name="branding" ref="webBranding"/>
        <property name="httpProxy" ref="httpProxyService"/>
        <property name="imageryProviders"
                  value='[{"type":"OSM","url":"http://otile1.mqcdn.com/tiles/1.0.0/map","fileExtension":"jpg","alpha":1},{"type":"OSM","url":"http://otile1.mqcdn.com/tiles/1.0.0/sat","fileExtension":"jpg","alpha":0.5}]'/>
        <property name="terrainProvider"
                  value='{"type": "CT", "url": "http://assets.agi.com/stk-terrain/tilesets/world/tiles"}'/>
    </bean>

    <service interface="ddf.catalog.data.MetacardType">
        <bean class="org.codice.ddf.catalog.ui.metacard.workspace.WorkspaceMetacardTypeImpl"/>
    </service>

    <service interface="ddf.catalog.data.MetacardType">
        <bean class="org.codice.ddf.catalog.ui.metacard.workspace.QueryMetacardTypeImpl"/>
    </service>

    <service interface="ddf.catalog.plugin.PreIngestPlugin">
        <bean class="org.codice.ddf.ui.searchui.standard.endpoints.WorkspacePreIngestPlugin"/>
    </service>

    <bean id="workspacePolicyExtension" class="org.codice.ddf.ui.searchui.standard.endpoints.WorkspacePolicyExtension">
        <cm:managed-properties persistent-id="org.codice.ddf.ui.searchui.standard.endpoints"
                               update-strategy="container-managed"/>
    </bean>

    <service interface="ddf.security.policy.extension.PolicyExtension">
        <ref component-id="workspacePolicyExtension"/>
    </service>

    <reference id="catalogFramework" interface="ddf.catalog.CatalogFramework"/>
    <reference id="filterBuilder" interface="ddf.catalog.filter.FilterBuilder"/>
    <reference id="filterAdapter" interface="ddf.catalog.filter.FilterAdapter"/>
    <reference id="inputTransformer" interface="ddf.catalog.transform.InputTransformer"
               filter="(|(mime-type=application/xml)(mime-type=text/xml))"/>

    <reference-list id="metacardActionProviders" interface="ddf.action.ActionProvider"
                    filter="(id=catalog.data.metacard.*)"/>

    <reference-list id="metacardMultiActionProviders" interface="ddf.action.MultiActionProvider"
                    filter="(id=catalog.data.metacard.*)"/>

    <bean id="metacardActionRegistry" class="org.codice.ddf.catalog.ui.MetacardActionRegistry">
        <argument ref="metacardActionProviders"/>
        <argument ref="metacardMultiActionProviders"/>
    </bean>

    <bean id="workspaceTransformer"
          class="org.codice.ddf.catalog.ui.metacard.workspace.WorkspaceTransformer">
        <argument ref="catalogFramework"/>
        <argument ref="inputTransformer"/>
    </bean>

    <bean id="endpointUtil" class="org.codice.ddf.catalog.ui.util.EndpointUtil">
        <argument ref="catalogFramework"/>
        <argument ref="filterBuilder"/>
        <argument>
            <reference-list interface="ddf.catalog.data.MetacardType"/>
        </argument>
    </bean>

    <bean id="validator" class="org.codice.ddf.catalog.ui.metacard.validation.Validator">
        <argument>
            <reference-list interface="ddf.catalog.validation.ReportingMetacardValidator"/>
        </argument>
        <argument>
            <reference-list interface="ddf.catalog.validation.AttributeValidatorRegistry"/>
        </argument>
    </bean>

    <jaxrs:server id="workspaceService" address="/search/catalog">
        <jaxrs:serviceBeans>
            <!-- config store -->
            <ref component-id="configurationStore"/>
            <bean class="org.codice.ddf.ui.searchui.standard.endpoints.MetacardEditEndpoint">
                <argument ref="catalogFramework"/>
                <argument>
                    <reference interface="ddf.catalog.data.AttributeRegistry"/>
                </argument>
                <argument ref="endpointUtil"/>
            </bean>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="org.codice.ddf.ui.searchui.standard.endpoints.WorkspaceBodyReader"/>
            <bean class="org.codice.ddf.ui.searchui.standard.endpoints.WorkspaceBodyWriter"/>
        </jaxrs:providers>
    </jaxrs:server>

    <bean id="metacardApplication" class="org.codice.ddf.catalog.ui.metacard.MetacardApplication">
        <argument ref="catalogFramework"/>
        <argument ref="filterBuilder"/>
        <argument ref="endpointUtil"/>
        <argument ref="validator"/>
        <argument ref="workspaceTransformer"/>
    </bean>

    <bean id="queryApplication" class="org.codice.ddf.catalog.ui.query.QueryApplication">
        <property name="catalogFramework" ref="catalogFramework"/>
        <property name="filterBuilder" ref="filterBuilder"/>
        <property name="filterAdapter" ref="filterAdapter"/>
        <property name="actionRegistry" ref="metacardActionRegistry"/>
    </bean>

    <bean id="querySparkServlet" class="org.codice.ddf.catalog.ui.SparkServlet">
        <argument>
            <list>
                <ref component-id="queryApplication" />
                <ref component-id="metacardApplication" />
            </list>
        </argument>
    </bean>

    <service ref="querySparkServlet" interface="javax.servlet.Servlet">
        <service-properties>
            <entry key="urlPatterns" value="/search/catalog/internal/*"/>
        </service-properties>
    </service>


</blueprint>
