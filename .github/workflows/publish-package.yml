name: publish-package

on:
  pull_request:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: "ddf-ui"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Install dependencies
        run: |
          cd ./ddf-ui/ui-frontend/packages/catalog-ui-search
          yarn install

      - name: Build project
        run: |
          cd ./ddf-ui/ui-frontend/packages/catalog-ui-search
          yarn run build

      - name: Check if tag exists
        id: check_tag
        uses: actions/github-script@v4
        with:
          script: |
            const { Octokit } = require('@octokit/core');
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            const tag = `pr-${github.event.pull_request.number}`;
            const { data: releases } = await octokit.request('GET /repos/{owner}/{repo}/releases', {
              owner: github.repository_owner,
              repo: github.repository,
            });
            const release = releases.find((r) => r.tag_name === tag);
            console.log(JSON.stringify({ release }));
            if (release) {
              console.log(`Release already exists for tag ${tag}, updating...`);
              const { data } = await octokit.repos.updateRelease({
                owner: github.repository_owner,
                repo: github.repository,
                release_id: release.id,
                tag_name: tag,
                body: `This is an updated release for PR ${github.event.pull_request.number}`,
              });
              console.log(JSON.stringify({ data }));
            }

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: pr-${{ github.event.pull_request.number }}
          release_name: Release ${{ github.event.pull_request.number }}
          draft: false
          prerelease: false
          commitish: ${{ github.event.pull_request.head.sha }}

      - name: Upload Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ddf-ui/ui-frontend/packages/catalog-ui-search/dist/catalog-ui-search.tgz
          asset_name: catalog-ui-search-pr-${{ github.event.pull_request.number }}.tgz
          asset_content_type: application/gzip
