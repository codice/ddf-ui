import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import PermanentSearchSort from '../../react-component/query-sort-selection/permanent-search-sort';
import SourceSelector from './source-selector';
import SourcesInfo from './sources-info';
import Phonetics from './phonetics';
import Spellcheck from './spellcheck';
import { Memo } from '../memo/memo';
import { useConfiguration } from '../../js/model/Startup/configuration.hooks';
/**
 * This is expensive to rerender, so we memo.  However, if the inner components aren't listening to the query,
 * this will not work.
 */
var QuerySettings = function (_a) {
    var model = _a.model, Extensions = _a.Extensions;
    var config = useConfiguration().config;
    return (_jsx(Memo, { dependencies: [model], children: _jsxs("div", { children: [Extensions ? _jsx(Extensions, { model: model }) : null, (config === null || config === void 0 ? void 0 : config.isSpellcheckEnabled) ? (_jsx("div", { className: "pb-2", children: _jsx(Spellcheck, { model: model }) })) : null, (config === null || config === void 0 ? void 0 : config.isPhoneticsEnabled) ? (_jsx("div", { className: "pb-2", children: _jsx(Phonetics, { model: model }) })) : null, _jsx("div", { className: "pb-2", children: _jsx(PermanentSearchSort, { model: model }) }), _jsx("div", { className: "pb-2", children: _jsx(SourceSelector, { search: model }) }), _jsx("div", { children: _jsx(SourcesInfo, {}) })] }) }));
};
export default QuerySettings;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnktc2V0dGluZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWFpbi93ZWJhcHAvY29tcG9uZW50L3F1ZXJ5LXNldHRpbmdzL3F1ZXJ5LXNldHRpbmdzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7SUFhSTtBQUVKLE9BQU8sbUJBQW1CLE1BQU0sa0VBQWtFLENBQUE7QUFHbEcsT0FBTyxjQUFjLE1BQU0sbUJBQW1CLENBQUE7QUFDOUMsT0FBTyxXQUFXLE1BQU0sZ0JBQWdCLENBQUE7QUFDeEMsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFBO0FBQ25DLE9BQU8sVUFBVSxNQUFNLGNBQWMsQ0FBQTtBQUVyQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFBO0FBRW5DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFBO0FBTzdFOzs7R0FHRztBQUNILElBQU0sYUFBYSxHQUFHLFVBQUMsRUFBNEI7UUFBMUIsS0FBSyxXQUFBLEVBQUUsVUFBVSxnQkFBQTtJQUNoQyxJQUFBLE1BQU0sR0FBSyxnQkFBZ0IsRUFBRSxPQUF2QixDQUF1QjtJQUNyQyxPQUFPLENBQ0wsS0FBQyxJQUFJLElBQUMsWUFBWSxFQUFFLENBQUMsS0FBSyxDQUFDLFlBQ3pCLDBCQUNHLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBQyxVQUFVLElBQU8sS0FBSyxFQUFFLEtBQUssR0FBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQ3hELENBQUEsTUFBTSxhQUFOLE1BQU0sdUJBQU4sTUFBTSxDQUFFLG1CQUFtQixFQUFDLENBQUMsQ0FBQyxDQUM3QixjQUFLLFNBQVMsRUFBQyxNQUFNLFlBQ25CLEtBQUMsVUFBVSxJQUFDLEtBQUssRUFBRSxLQUFLLEdBQUksR0FDeEIsQ0FDUCxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQ1AsQ0FBQSxNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUUsa0JBQWtCLEVBQUMsQ0FBQyxDQUFDLENBQzVCLGNBQUssU0FBUyxFQUFDLE1BQU0sWUFDbkIsS0FBQyxTQUFTLElBQUMsS0FBSyxFQUFFLEtBQUssR0FBSSxHQUN2QixDQUNQLENBQUMsQ0FBQyxDQUFDLElBQUksRUFDUixjQUFLLFNBQVMsRUFBQyxNQUFNLFlBQ25CLEtBQUMsbUJBQW1CLElBQUMsS0FBSyxFQUFFLEtBQUssR0FBSSxHQUNqQyxFQUVOLGNBQUssU0FBUyxFQUFDLE1BQU0sWUFDbkIsS0FBQyxjQUFjLElBQUMsTUFBTSxFQUFFLEtBQUssR0FBSSxHQUM3QixFQUNOLHdCQUNFLEtBQUMsV0FBVyxLQUFHLEdBQ1gsSUFDRixHQUNELENBQ1IsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELGVBQWUsYUFBYSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5cbmltcG9ydCBQZXJtYW5lbnRTZWFyY2hTb3J0IGZyb20gJy4uLy4uL3JlYWN0LWNvbXBvbmVudC9xdWVyeS1zb3J0LXNlbGVjdGlvbi9wZXJtYW5lbnQtc2VhcmNoLXNvcnQnXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFNvdXJjZVNlbGVjdG9yIGZyb20gJy4vc291cmNlLXNlbGVjdG9yJ1xuaW1wb3J0IFNvdXJjZXNJbmZvIGZyb20gJy4vc291cmNlcy1pbmZvJ1xuaW1wb3J0IFBob25ldGljcyBmcm9tICcuL3Bob25ldGljcydcbmltcG9ydCBTcGVsbGNoZWNrIGZyb20gJy4vc3BlbGxjaGVjaydcblxuaW1wb3J0IHsgTWVtbyB9IGZyb20gJy4uL21lbW8vbWVtbydcbmltcG9ydCB7IFF1ZXJ5VHlwZSB9IGZyb20gJy4uLy4uL2pzL21vZGVsL1F1ZXJ5J1xuaW1wb3J0IHsgdXNlQ29uZmlndXJhdGlvbiB9IGZyb20gJy4uLy4uL2pzL21vZGVsL1N0YXJ0dXAvY29uZmlndXJhdGlvbi5ob29rcydcblxudHlwZSBQcm9wcyA9IHtcbiAgbW9kZWw6IFF1ZXJ5VHlwZVxuICBFeHRlbnNpb25zPzogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8YW55PlxufVxuXG4vKipcbiAqIFRoaXMgaXMgZXhwZW5zaXZlIHRvIHJlcmVuZGVyLCBzbyB3ZSBtZW1vLiAgSG93ZXZlciwgaWYgdGhlIGlubmVyIGNvbXBvbmVudHMgYXJlbid0IGxpc3RlbmluZyB0byB0aGUgcXVlcnksXG4gKiB0aGlzIHdpbGwgbm90IHdvcmsuXG4gKi9cbmNvbnN0IFF1ZXJ5U2V0dGluZ3MgPSAoeyBtb2RlbCwgRXh0ZW5zaW9ucyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCB7IGNvbmZpZyB9ID0gdXNlQ29uZmlndXJhdGlvbigpXG4gIHJldHVybiAoXG4gICAgPE1lbW8gZGVwZW5kZW5jaWVzPXtbbW9kZWxdfT5cbiAgICAgIDxkaXY+XG4gICAgICAgIHtFeHRlbnNpb25zID8gPEV4dGVuc2lvbnMgey4uLnsgbW9kZWw6IG1vZGVsIH19IC8+IDogbnVsbH1cbiAgICAgICAge2NvbmZpZz8uaXNTcGVsbGNoZWNrRW5hYmxlZCA/IChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBiLTJcIj5cbiAgICAgICAgICAgIDxTcGVsbGNoZWNrIG1vZGVsPXttb2RlbH0gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIHtjb25maWc/LmlzUGhvbmV0aWNzRW5hYmxlZCA/IChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBiLTJcIj5cbiAgICAgICAgICAgIDxQaG9uZXRpY3MgbW9kZWw9e21vZGVsfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogbnVsbH1cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYi0yXCI+XG4gICAgICAgICAgPFBlcm1hbmVudFNlYXJjaFNvcnQgbW9kZWw9e21vZGVsfSAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBiLTJcIj5cbiAgICAgICAgICA8U291cmNlU2VsZWN0b3Igc2VhcmNoPXttb2RlbH0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPFNvdXJjZXNJbmZvIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9NZW1vPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFF1ZXJ5U2V0dGluZ3NcbiJdfQ==