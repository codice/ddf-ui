import Button from '@mui/material/Button';
import Grid from '@mui/material/Grid';
import Paper from '@mui/material/Paper';
import Popover from '@mui/material/Popover';
import StorageIcon from '@mui/icons-material/Storage';
import * as React from 'react';
import { hot } from 'react-hot-loader';
import ExtensionPoints from '../../extension-points';
import SourcesPage from '../../react-component/sources/presentation';
import { Elevations } from '../theme/theme';
import { useMenuState } from '../menu-state/menu-state';
var SourcesInfo = function () {
    var _a = useMenuState(), anchorRef = _a.anchorRef, handleClick = _a.handleClick, handleClose = _a.handleClose, open = _a.open;
    var popoverActions = React.useRef(null);
    var onChange = function () {
        if (popoverActions.current) {
            popoverActions.current.updatePosition();
        }
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(Button, { component: "div", "data-id": "sources-button", fullWidth: true, variant: "text", color: "primary", onClick: handleClick, ref: anchorRef },
            React.createElement(Grid, { container: true, direction: "row", alignItems: "center", wrap: "nowrap" },
                React.createElement(Grid, { item: true, className: "pr-1" },
                    React.createElement(StorageIcon, { className: "Mui-text-text-primary" })),
                React.createElement(Grid, { item: true }, "Sources"))),
        React.createElement(Popover, { action: popoverActions, open: open, anchorEl: anchorRef.current, onClose: handleClose, anchorOrigin: {
                vertical: 'bottom',
                horizontal: 'center',
            }, transformOrigin: {
                vertical: 'top',
                horizontal: 'center',
            }, className: "max-h-screen-1/2" },
            React.createElement(Paper, { elevation: Elevations.overlays, className: "min-w-120" }, ExtensionPoints.customSourcesPage ? (React.createElement(ExtensionPoints.customSourcesPage, { onChange: onChange })) : (React.createElement(SourcesPage, null))))));
};
export default hot(module)(SourcesInfo);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlcy1pbmZvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL2NvbXBvbmVudC9xdWVyeS1zZXR0aW5ncy9zb3VyY2VzLWluZm8udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sTUFBTSxNQUFNLHNCQUFzQixDQUFBO0FBQ3pDLE9BQU8sSUFBSSxNQUFNLG9CQUFvQixDQUFBO0FBQ3JDLE9BQU8sS0FBSyxNQUFNLHFCQUFxQixDQUFBO0FBQ3ZDLE9BQU8sT0FBMkIsTUFBTSx1QkFBdUIsQ0FBQTtBQUMvRCxPQUFPLFdBQVcsTUFBTSw2QkFBNkIsQ0FBQTtBQUNyRCxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQTtBQUM5QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFDdEMsT0FBTyxlQUFlLE1BQU0sd0JBQXdCLENBQUE7QUFDcEQsT0FBTyxXQUFXLE1BQU0sNENBQTRDLENBQUE7QUFDcEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFBO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQTtBQUV2RCxJQUFNLFdBQVcsR0FBRztJQUNaLElBQUEsS0FBZ0QsWUFBWSxFQUFFLEVBQTVELFNBQVMsZUFBQSxFQUFFLFdBQVcsaUJBQUEsRUFBRSxXQUFXLGlCQUFBLEVBQUUsSUFBSSxVQUFtQixDQUFBO0lBQ3BFLElBQU0sY0FBYyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQWlCLElBQUksQ0FBQyxDQUFBO0lBRXpELElBQU0sUUFBUSxHQUFHO1FBQ2YsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFO1lBQzFCLGNBQWMsQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFLENBQUE7U0FDeEM7SUFDSCxDQUFDLENBQUE7SUFFRCxPQUFPLENBQ0wsb0JBQUMsS0FBSyxDQUFDLFFBQVE7UUFDYixvQkFBQyxNQUFNLElBQ0wsU0FBUyxFQUFDLEtBQUssYUFDUCxnQkFBZ0IsRUFDeEIsU0FBUyxRQUNULE9BQU8sRUFBQyxNQUFNLEVBQ2QsS0FBSyxFQUFDLFNBQVMsRUFDZixPQUFPLEVBQUUsV0FBVyxFQUNwQixHQUFHLEVBQUUsU0FBUztZQUVkLG9CQUFDLElBQUksSUFBQyxTQUFTLFFBQUMsU0FBUyxFQUFDLEtBQUssRUFBQyxVQUFVLEVBQUMsUUFBUSxFQUFDLElBQUksRUFBQyxRQUFRO2dCQUMvRCxvQkFBQyxJQUFJLElBQUMsSUFBSSxRQUFDLFNBQVMsRUFBQyxNQUFNO29CQUN6QixvQkFBQyxXQUFXLElBQUMsU0FBUyxFQUFDLHVCQUF1QixHQUFHLENBQzVDO2dCQUNQLG9CQUFDLElBQUksSUFBQyxJQUFJLG9CQUFlLENBQ3BCLENBQ0E7UUFDVCxvQkFBQyxPQUFPLElBQ04sTUFBTSxFQUFFLGNBQWMsRUFDdEIsSUFBSSxFQUFFLElBQUksRUFDVixRQUFRLEVBQUUsU0FBUyxDQUFDLE9BQU8sRUFDM0IsT0FBTyxFQUFFLFdBQVcsRUFDcEIsWUFBWSxFQUFFO2dCQUNaLFFBQVEsRUFBRSxRQUFRO2dCQUNsQixVQUFVLEVBQUUsUUFBUTthQUNyQixFQUNELGVBQWUsRUFBRTtnQkFDZixRQUFRLEVBQUUsS0FBSztnQkFDZixVQUFVLEVBQUUsUUFBUTthQUNyQixFQUNELFNBQVMsRUFBQyxrQkFBa0I7WUFFNUIsb0JBQUMsS0FBSyxJQUFDLFNBQVMsRUFBRSxVQUFVLENBQUMsUUFBUSxFQUFFLFNBQVMsRUFBQyxXQUFXLElBQ3pELGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FDbkMsb0JBQUMsZUFBZSxDQUFDLGlCQUFpQixJQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUksQ0FDMUQsQ0FBQyxDQUFDLENBQUMsQ0FDRixvQkFBQyxXQUFXLE9BQUcsQ0FDaEIsQ0FDSyxDQUNBLENBQ0ssQ0FDbEIsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELGVBQWUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1dHRvbiBmcm9tICdAbXVpL21hdGVyaWFsL0J1dHRvbidcbmltcG9ydCBHcmlkIGZyb20gJ0BtdWkvbWF0ZXJpYWwvR3JpZCdcbmltcG9ydCBQYXBlciBmcm9tICdAbXVpL21hdGVyaWFsL1BhcGVyJ1xuaW1wb3J0IFBvcG92ZXIsIHsgUG9wb3ZlckFjdGlvbnMgfSBmcm9tICdAbXVpL21hdGVyaWFsL1BvcG92ZXInXG5pbXBvcnQgU3RvcmFnZUljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9TdG9yYWdlJ1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBob3QgfSBmcm9tICdyZWFjdC1ob3QtbG9hZGVyJ1xuaW1wb3J0IEV4dGVuc2lvblBvaW50cyBmcm9tICcuLi8uLi9leHRlbnNpb24tcG9pbnRzJ1xuaW1wb3J0IFNvdXJjZXNQYWdlIGZyb20gJy4uLy4uL3JlYWN0LWNvbXBvbmVudC9zb3VyY2VzL3ByZXNlbnRhdGlvbidcbmltcG9ydCB7IEVsZXZhdGlvbnMgfSBmcm9tICcuLi90aGVtZS90aGVtZSdcbmltcG9ydCB7IHVzZU1lbnVTdGF0ZSB9IGZyb20gJy4uL21lbnUtc3RhdGUvbWVudS1zdGF0ZSdcblxuY29uc3QgU291cmNlc0luZm8gPSAoKSA9PiB7XG4gIGNvbnN0IHsgYW5jaG9yUmVmLCBoYW5kbGVDbGljaywgaGFuZGxlQ2xvc2UsIG9wZW4gfSA9IHVzZU1lbnVTdGF0ZSgpXG4gIGNvbnN0IHBvcG92ZXJBY3Rpb25zID0gUmVhY3QudXNlUmVmPFBvcG92ZXJBY3Rpb25zPihudWxsKVxuXG4gIGNvbnN0IG9uQ2hhbmdlID0gKCkgPT4ge1xuICAgIGlmIChwb3BvdmVyQWN0aW9ucy5jdXJyZW50KSB7XG4gICAgICBwb3BvdmVyQWN0aW9ucy5jdXJyZW50LnVwZGF0ZVBvc2l0aW9uKClcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxCdXR0b25cbiAgICAgICAgY29tcG9uZW50PVwiZGl2XCJcbiAgICAgICAgZGF0YS1pZD1cInNvdXJjZXMtYnV0dG9uXCJcbiAgICAgICAgZnVsbFdpZHRoXG4gICAgICAgIHZhcmlhbnQ9XCJ0ZXh0XCJcbiAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgICAgb25DbGljaz17aGFuZGxlQ2xpY2t9XG4gICAgICAgIHJlZj17YW5jaG9yUmVmfVxuICAgICAgPlxuICAgICAgICA8R3JpZCBjb250YWluZXIgZGlyZWN0aW9uPVwicm93XCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIHdyYXA9XCJub3dyYXBcIj5cbiAgICAgICAgICA8R3JpZCBpdGVtIGNsYXNzTmFtZT1cInByLTFcIj5cbiAgICAgICAgICAgIDxTdG9yYWdlSWNvbiBjbGFzc05hbWU9XCJNdWktdGV4dC10ZXh0LXByaW1hcnlcIiAvPlxuICAgICAgICAgIDwvR3JpZD5cbiAgICAgICAgICA8R3JpZCBpdGVtPlNvdXJjZXM8L0dyaWQ+XG4gICAgICAgIDwvR3JpZD5cbiAgICAgIDwvQnV0dG9uPlxuICAgICAgPFBvcG92ZXJcbiAgICAgICAgYWN0aW9uPXtwb3BvdmVyQWN0aW9uc31cbiAgICAgICAgb3Blbj17b3Blbn1cbiAgICAgICAgYW5jaG9yRWw9e2FuY2hvclJlZi5jdXJyZW50fVxuICAgICAgICBvbkNsb3NlPXtoYW5kbGVDbG9zZX1cbiAgICAgICAgYW5jaG9yT3JpZ2luPXt7XG4gICAgICAgICAgdmVydGljYWw6ICdib3R0b20nLFxuICAgICAgICAgIGhvcml6b250YWw6ICdjZW50ZXInLFxuICAgICAgICB9fVxuICAgICAgICB0cmFuc2Zvcm1PcmlnaW49e3tcbiAgICAgICAgICB2ZXJ0aWNhbDogJ3RvcCcsXG4gICAgICAgICAgaG9yaXpvbnRhbDogJ2NlbnRlcicsXG4gICAgICAgIH19XG4gICAgICAgIGNsYXNzTmFtZT1cIm1heC1oLXNjcmVlbi0xLzJcIlxuICAgICAgPlxuICAgICAgICA8UGFwZXIgZWxldmF0aW9uPXtFbGV2YXRpb25zLm92ZXJsYXlzfSBjbGFzc05hbWU9XCJtaW4tdy0xMjBcIj5cbiAgICAgICAgICB7RXh0ZW5zaW9uUG9pbnRzLmN1c3RvbVNvdXJjZXNQYWdlID8gKFxuICAgICAgICAgICAgPEV4dGVuc2lvblBvaW50cy5jdXN0b21Tb3VyY2VzUGFnZSBvbkNoYW5nZT17b25DaGFuZ2V9IC8+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxTb3VyY2VzUGFnZSAvPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUGFwZXI+XG4gICAgICA8L1BvcG92ZXI+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBob3QobW9kdWxlKShTb3VyY2VzSW5mbylcbiJdfQ==