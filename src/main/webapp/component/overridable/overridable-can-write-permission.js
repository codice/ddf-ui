/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import { Overridable } from '../../js/model/Base/base-classes';
import { useOverridable } from '../../js/model/Base/base-classes.hooks';
// export this as a fallback for downstream to use
export var BaseCanWritePermission = function (props) {
    var attribute = props.attribute, lazyResult = props.lazyResult, typedUserInstance = props.typedUserInstance, configuration = props.configuration;
    var canWrite = !lazyResult.isRemote() &&
        typedUserInstance.canWrite(lazyResult) &&
        !configuration.isReadOnly(attribute);
    return canWrite;
};
export var OverridableCanWritePermission = new Overridable(BaseCanWritePermission);
export var useCanWritePermission = function () {
    return useOverridable(OverridableCanWritePermission);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcnJpZGFibGUtY2FuLXdyaXRlLXBlcm1pc3Npb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWFpbi93ZWJhcHAvY29tcG9uZW50L292ZXJyaWRhYmxlL292ZXJyaWRhYmxlLWNhbi13cml0ZS1wZXJtaXNzaW9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztJQWFJO0FBQ0osT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtDQUFrQyxDQUFBO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQTtBQWN2RSxrREFBa0Q7QUFDbEQsTUFBTSxDQUFDLElBQU0sc0JBQXNCLEdBQTJCLFVBQUMsS0FBSztJQUMxRCxJQUFBLFNBQVMsR0FBbUQsS0FBSyxVQUF4RCxFQUFFLFVBQVUsR0FBdUMsS0FBSyxXQUE1QyxFQUFFLGlCQUFpQixHQUFvQixLQUFLLGtCQUF6QixFQUFFLGFBQWEsR0FBSyxLQUFLLGNBQVYsQ0FBVTtJQUN6RSxJQUFNLFFBQVEsR0FDWixDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUU7UUFDdEIsaUJBQWlCLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQztRQUN0QyxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDdEMsT0FBTyxRQUFRLENBQUE7QUFDakIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLElBQU0sNkJBQTZCLEdBQUcsSUFBSSxXQUFXLENBQzFELHNCQUFzQixDQUN2QixDQUFBO0FBRUQsTUFBTSxDQUFDLElBQU0scUJBQXFCLEdBQUc7SUFDbkMsT0FBTyxjQUFjLENBQUMsNkJBQTZCLENBQUMsQ0FBQTtBQUN0RCxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgQ29kaWNlIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyXG4gKiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZVxuICogTGljZW5zZSwgb3IgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dFxuICogZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VXG4gKiBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiBBIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogaXMgZGlzdHJpYnV0ZWQgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0gYW5kIGNhbiBiZSBmb3VuZCBhdFxuICogPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9sZ3BsLmh0bWw+LlxuICpcbiAqKi9cbmltcG9ydCB7IE92ZXJyaWRhYmxlIH0gZnJvbSAnLi4vLi4vanMvbW9kZWwvQmFzZS9iYXNlLWNsYXNzZXMnXG5pbXBvcnQgeyB1c2VPdmVycmlkYWJsZSB9IGZyb20gJy4uLy4uL2pzL21vZGVsL0Jhc2UvYmFzZS1jbGFzc2VzLmhvb2tzJ1xuaW1wb3J0IHR5cGUgeyBMYXp5UXVlcnlSZXN1bHQgfSBmcm9tICcuLi8uLi9qcy9tb2RlbC9MYXp5UXVlcnlSZXN1bHQvTGF6eVF1ZXJ5UmVzdWx0J1xuaW1wb3J0IHR5cGUgeyBUeXBlZFVzZXJJbnN0YW5jZVR5cGUgfSBmcm9tICcuLi9zaW5nbGV0b25zL1R5cGVkVXNlcidcbmltcG9ydCB0eXBlIHsgdXNlQ29uZmlndXJhdGlvblR5cGUgfSBmcm9tICcuLi8uLi9qcy9tb2RlbC9TdGFydHVwL2NvbmZpZ3VyYXRpb24uaG9va3MnXG5cbmV4cG9ydCB0eXBlIENhbldyaXRlUGVybWlzc2lvblR5cGUgPSAocHJvcHM6IHtcbiAgYXR0cmlidXRlOiBzdHJpbmdcbiAgbGF6eVJlc3VsdDogTGF6eVF1ZXJ5UmVzdWx0XG4gIHVzZXI6IGFueVxuICBlZGl0YWJsZUF0dHJpYnV0ZXM6IHN0cmluZ1tdXG4gIHR5cGVkVXNlckluc3RhbmNlOiBUeXBlZFVzZXJJbnN0YW5jZVR5cGVcbiAgY29uZmlndXJhdGlvbjogUmV0dXJuVHlwZTx1c2VDb25maWd1cmF0aW9uVHlwZT5cbn0pID0+IGJvb2xlYW5cblxuLy8gZXhwb3J0IHRoaXMgYXMgYSBmYWxsYmFjayBmb3IgZG93bnN0cmVhbSB0byB1c2VcbmV4cG9ydCBjb25zdCBCYXNlQ2FuV3JpdGVQZXJtaXNzaW9uOiBDYW5Xcml0ZVBlcm1pc3Npb25UeXBlID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgYXR0cmlidXRlLCBsYXp5UmVzdWx0LCB0eXBlZFVzZXJJbnN0YW5jZSwgY29uZmlndXJhdGlvbiB9ID0gcHJvcHNcbiAgY29uc3QgY2FuV3JpdGUgPVxuICAgICFsYXp5UmVzdWx0LmlzUmVtb3RlKCkgJiZcbiAgICB0eXBlZFVzZXJJbnN0YW5jZS5jYW5Xcml0ZShsYXp5UmVzdWx0KSAmJlxuICAgICFjb25maWd1cmF0aW9uLmlzUmVhZE9ubHkoYXR0cmlidXRlKVxuICByZXR1cm4gY2FuV3JpdGVcbn1cblxuZXhwb3J0IGNvbnN0IE92ZXJyaWRhYmxlQ2FuV3JpdGVQZXJtaXNzaW9uID0gbmV3IE92ZXJyaWRhYmxlKFxuICBCYXNlQ2FuV3JpdGVQZXJtaXNzaW9uXG4pXG5cbmV4cG9ydCBjb25zdCB1c2VDYW5Xcml0ZVBlcm1pc3Npb24gPSAoKSA9PiB7XG4gIHJldHVybiB1c2VPdmVycmlkYWJsZShPdmVycmlkYWJsZUNhbldyaXRlUGVybWlzc2lvbilcbn1cbiJdfQ==