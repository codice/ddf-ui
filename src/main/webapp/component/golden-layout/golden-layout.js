import { __read } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from 'react';
import { useResizableGridContext } from '../resizable-grid/resizable-grid';
import { GoldenLayoutViewReact } from './golden-layout.view';
import Grid from '@mui/material/Grid';
import Paper from '@mui/material/Paper';
import ResultSelector from '../result-selector/result-selector';
import { Elevations } from '../theme/theme';
var useUpdateGoldenLayoutSize = function (_a) {
    var goldenLayout = _a.goldenLayout, closed = _a.closed;
    React.useEffect(function () {
        setTimeout(function () {
            if (goldenLayout && goldenLayout.isInitialised)
                goldenLayout.updateSize();
        }, 100);
    }, [closed, goldenLayout]);
};
export var GoldenLayout = function (_a) {
    var selectionInterface = _a.selectionInterface;
    var _b = __read(React.useState(null), 2), goldenLayout = _b[0], setGoldenLayout = _b[1];
    var closed = useResizableGridContext().closed;
    useUpdateGoldenLayoutSize({ goldenLayout: goldenLayout, closed: closed });
    return (_jsxs(Grid, { "data-id": "results-container", container: true, direction: "column", className: "w-full h-full", wrap: "nowrap", children: [_jsx(Grid, { item: true, className: "w-full relative z-1 pb-2 pt-2 pr-2 shrink-0", children: _jsx(Paper, { elevation: Elevations.panels, className: "w-full py-1 px-2 overflow-hidden", children: goldenLayout ? (_jsx(ResultSelector, { selectionInterface: selectionInterface, model: selectionInterface.getCurrentQuery(), goldenLayout: goldenLayout })) : null }) }), _jsx(Grid, { item: true, className: "w-full h-full overflow-hidden shrink-1 pb-2 pr-2", children: _jsx(GoldenLayoutViewReact, { selectionInterface: selectionInterface, configName: "goldenLayout", setGoldenLayout: setGoldenLayout }) })] }));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29sZGVuLWxheW91dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3dlYmFwcC9jb21wb25lbnQvZ29sZGVuLWxheW91dC9nb2xkZW4tbGF5b3V0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQzlCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFBO0FBQzFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNCQUFzQixDQUFBO0FBQzVELE9BQU8sSUFBSSxNQUFNLG9CQUFvQixDQUFBO0FBQ3JDLE9BQU8sS0FBSyxNQUFNLHFCQUFxQixDQUFBO0FBQ3ZDLE9BQU8sY0FBYyxNQUFNLG9DQUFvQyxDQUFBO0FBQy9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQTtBQU0zQyxJQUFNLHlCQUF5QixHQUFHLFVBQUMsRUFNbEM7UUFMQyxZQUFZLGtCQUFBLEVBQ1osTUFBTSxZQUFBO0lBS04sS0FBSyxDQUFDLFNBQVMsQ0FBQztRQUNkLFVBQVUsQ0FBQztZQUNULElBQUksWUFBWSxJQUFJLFlBQVksQ0FBQyxhQUFhO2dCQUFFLFlBQVksQ0FBQyxVQUFVLEVBQUUsQ0FBQTtRQUMzRSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUE7SUFDVCxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQTtBQUM1QixDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsSUFBTSxZQUFZLEdBQUcsVUFBQyxFQUE2QjtRQUEzQixrQkFBa0Isd0JBQUE7SUFDekMsSUFBQSxLQUFBLE9BQWtDLEtBQUssQ0FBQyxRQUFRLENBQU0sSUFBSSxDQUFDLElBQUEsRUFBMUQsWUFBWSxRQUFBLEVBQUUsZUFBZSxRQUE2QixDQUFBO0lBQ3pELElBQUEsTUFBTSxHQUFLLHVCQUF1QixFQUFFLE9BQTlCLENBQThCO0lBRTVDLHlCQUF5QixDQUFDLEVBQUUsWUFBWSxjQUFBLEVBQUUsTUFBTSxRQUFBLEVBQUUsQ0FBQyxDQUFBO0lBQ25ELE9BQU8sQ0FDTCxNQUFDLElBQUksZUFDSyxtQkFBbUIsRUFDM0IsU0FBUyxRQUNULFNBQVMsRUFBQyxRQUFRLEVBQ2xCLFNBQVMsRUFBQyxlQUFlLEVBQ3pCLElBQUksRUFBQyxRQUFRLGFBRWIsS0FBQyxJQUFJLElBQUMsSUFBSSxRQUFDLFNBQVMsRUFBQyw2Q0FBNkMsWUFDaEUsS0FBQyxLQUFLLElBQ0osU0FBUyxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQzVCLFNBQVMsRUFBQyxrQ0FBa0MsWUFFM0MsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUNkLEtBQUMsY0FBYyxJQUNiLGtCQUFrQixFQUFFLGtCQUFrQixFQUN0QyxLQUFLLEVBQUUsa0JBQWtCLENBQUMsZUFBZSxFQUFFLEVBQzNDLFlBQVksRUFBRSxZQUFZLEdBQzFCLENBQ0gsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUNGLEdBQ0gsRUFFUCxLQUFDLElBQUksSUFBQyxJQUFJLFFBQUMsU0FBUyxFQUFDLGtEQUFrRCxZQUNyRSxLQUFDLHFCQUFxQixJQUNwQixrQkFBa0IsRUFBRSxrQkFBa0IsRUFDdEMsVUFBVSxFQUFDLGNBQWMsRUFDekIsZUFBZSxFQUFFLGVBQWUsR0FDaEMsR0FDRyxJQUNGLENBQ1IsQ0FBQTtBQUNILENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlUmVzaXphYmxlR3JpZENvbnRleHQgfSBmcm9tICcuLi9yZXNpemFibGUtZ3JpZC9yZXNpemFibGUtZ3JpZCdcbmltcG9ydCB7IEdvbGRlbkxheW91dFZpZXdSZWFjdCB9IGZyb20gJy4vZ29sZGVuLWxheW91dC52aWV3J1xuaW1wb3J0IEdyaWQgZnJvbSAnQG11aS9tYXRlcmlhbC9HcmlkJ1xuaW1wb3J0IFBhcGVyIGZyb20gJ0BtdWkvbWF0ZXJpYWwvUGFwZXInXG5pbXBvcnQgUmVzdWx0U2VsZWN0b3IgZnJvbSAnLi4vcmVzdWx0LXNlbGVjdG9yL3Jlc3VsdC1zZWxlY3RvcidcbmltcG9ydCB7IEVsZXZhdGlvbnMgfSBmcm9tICcuLi90aGVtZS90aGVtZSdcblxudHlwZSBQcm9wcyA9IHtcbiAgc2VsZWN0aW9uSW50ZXJmYWNlOiBhbnlcbn1cblxuY29uc3QgdXNlVXBkYXRlR29sZGVuTGF5b3V0U2l6ZSA9ICh7XG4gIGdvbGRlbkxheW91dCxcbiAgY2xvc2VkLFxufToge1xuICBjbG9zZWQ6IGJvb2xlYW5cbiAgZ29sZGVuTGF5b3V0OiBhbnlcbn0pID0+IHtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmIChnb2xkZW5MYXlvdXQgJiYgZ29sZGVuTGF5b3V0LmlzSW5pdGlhbGlzZWQpIGdvbGRlbkxheW91dC51cGRhdGVTaXplKClcbiAgICB9LCAxMDApXG4gIH0sIFtjbG9zZWQsIGdvbGRlbkxheW91dF0pXG59XG5cbmV4cG9ydCBjb25zdCBHb2xkZW5MYXlvdXQgPSAoeyBzZWxlY3Rpb25JbnRlcmZhY2UgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgW2dvbGRlbkxheW91dCwgc2V0R29sZGVuTGF5b3V0XSA9IFJlYWN0LnVzZVN0YXRlPGFueT4obnVsbClcbiAgY29uc3QgeyBjbG9zZWQgfSA9IHVzZVJlc2l6YWJsZUdyaWRDb250ZXh0KClcblxuICB1c2VVcGRhdGVHb2xkZW5MYXlvdXRTaXplKHsgZ29sZGVuTGF5b3V0LCBjbG9zZWQgfSlcbiAgcmV0dXJuIChcbiAgICA8R3JpZFxuICAgICAgZGF0YS1pZD1cInJlc3VsdHMtY29udGFpbmVyXCJcbiAgICAgIGNvbnRhaW5lclxuICAgICAgZGlyZWN0aW9uPVwiY29sdW1uXCJcbiAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBoLWZ1bGxcIlxuICAgICAgd3JhcD1cIm5vd3JhcFwiXG4gICAgPlxuICAgICAgPEdyaWQgaXRlbSBjbGFzc05hbWU9XCJ3LWZ1bGwgcmVsYXRpdmUgei0xIHBiLTIgcHQtMiBwci0yIHNocmluay0wXCI+XG4gICAgICAgIDxQYXBlclxuICAgICAgICAgIGVsZXZhdGlvbj17RWxldmF0aW9ucy5wYW5lbHN9XG4gICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHB5LTEgcHgtMiBvdmVyZmxvdy1oaWRkZW5cIlxuICAgICAgICA+XG4gICAgICAgICAge2dvbGRlbkxheW91dCA/IChcbiAgICAgICAgICAgIDxSZXN1bHRTZWxlY3RvclxuICAgICAgICAgICAgICBzZWxlY3Rpb25JbnRlcmZhY2U9e3NlbGVjdGlvbkludGVyZmFjZX1cbiAgICAgICAgICAgICAgbW9kZWw9e3NlbGVjdGlvbkludGVyZmFjZS5nZXRDdXJyZW50UXVlcnkoKX1cbiAgICAgICAgICAgICAgZ29sZGVuTGF5b3V0PXtnb2xkZW5MYXlvdXR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICA8L1BhcGVyPlxuICAgICAgPC9HcmlkPlxuXG4gICAgICA8R3JpZCBpdGVtIGNsYXNzTmFtZT1cInctZnVsbCBoLWZ1bGwgb3ZlcmZsb3ctaGlkZGVuIHNocmluay0xIHBiLTIgcHItMlwiPlxuICAgICAgICA8R29sZGVuTGF5b3V0Vmlld1JlYWN0XG4gICAgICAgICAgc2VsZWN0aW9uSW50ZXJmYWNlPXtzZWxlY3Rpb25JbnRlcmZhY2V9XG4gICAgICAgICAgY29uZmlnTmFtZT1cImdvbGRlbkxheW91dFwiXG4gICAgICAgICAgc2V0R29sZGVuTGF5b3V0PXtzZXRHb2xkZW5MYXlvdXR9XG4gICAgICAgIC8+XG4gICAgICA8L0dyaWQ+XG4gICAgPC9HcmlkPlxuICApXG59XG4iXX0=