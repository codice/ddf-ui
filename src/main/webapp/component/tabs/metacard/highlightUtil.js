import * as React from 'react';
import Typography from '@mui/material/Typography';
var comparator = function (a, b) {
    var aIndex = parseInt(a.startIndex);
    var bIndex = parseInt(b.startIndex);
    if (aIndex < bIndex) {
        return -1;
    }
    else if (aIndex === bIndex) {
        return 0;
    }
    else if (aIndex > bIndex) {
        return 1;
    }
    return 0;
};
export var displayHighlightedAttrInFull = function (highlights, text, index) {
    //sort these in the order in which they appear
    highlights.sort(comparator);
    // only use the highlights from this value if multivalued
    var filteredHighlights = highlights.filter(function (highlight) { return parseInt(highlight.valueIndex) === index; });
    var textArray = [];
    var currentIndex = 0;
    filteredHighlights.forEach(function (highlight, index) {
        var highlightStart = parseInt(highlight.startIndex);
        var highlightEnd = parseInt(highlight.endIndex);
        var beforeText = (React.createElement("span", { dangerouslySetInnerHTML: {
                __html: text.substring(currentIndex, highlightStart),
            } }));
        var highlightText = (React.createElement("span", { className: "highlight", "data-id": index }, text.substring(highlightStart, highlightEnd)));
        currentIndex = highlightEnd;
        textArray.push(beforeText);
        textArray.push(highlightText);
    });
    var afterText = (React.createElement("span", { dangerouslySetInnerHTML: {
            __html: text.substring(currentIndex),
        } }));
    textArray.push(afterText);
    return React.createElement(Typography, null, textArray);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGxpZ2h0VXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3dlYmFwcC9jb21wb25lbnQvdGFicy9tZXRhY2FyZC9oaWdobGlnaHRVdGlsLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQTtBQUM5QixPQUFPLFVBQVUsTUFBTSwwQkFBMEIsQ0FBQTtBQUdqRCxJQUFNLFVBQVUsR0FBRyxVQUFDLENBQXFCLEVBQUUsQ0FBcUI7SUFDOUQsSUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUNyQyxJQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ3JDLElBQUksTUFBTSxHQUFHLE1BQU0sRUFBRTtRQUNuQixPQUFPLENBQUMsQ0FBQyxDQUFBO0tBQ1Y7U0FBTSxJQUFJLE1BQU0sS0FBSyxNQUFNLEVBQUU7UUFDNUIsT0FBTyxDQUFDLENBQUE7S0FDVDtTQUFNLElBQUksTUFBTSxHQUFHLE1BQU0sRUFBRTtRQUMxQixPQUFPLENBQUMsQ0FBQTtLQUNUO0lBQ0QsT0FBTyxDQUFDLENBQUE7QUFDVixDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsSUFBTSw0QkFBNEIsR0FBRyxVQUMxQyxVQUFxQyxFQUNyQyxJQUFZLEVBQ1osS0FBYTtJQUViLDhDQUE4QztJQUM5QyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQzNCLHlEQUF5RDtJQUN6RCxJQUFNLGtCQUFrQixHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQzFDLFVBQUMsU0FBUyxJQUFLLE9BQUEsUUFBUSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsS0FBSyxLQUFLLEVBQXhDLENBQXdDLENBQ3hELENBQUE7SUFDRCxJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUE7SUFDbEIsSUFBSSxZQUFZLEdBQUcsQ0FBQyxDQUFBO0lBQ3BCLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxVQUFDLFNBQVMsRUFBRSxLQUFLO1FBQzFDLElBQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDckQsSUFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNqRCxJQUFNLFVBQVUsR0FBRyxDQUNqQiw4QkFDRSx1QkFBdUIsRUFBRTtnQkFDdkIsTUFBTSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLGNBQWMsQ0FBQzthQUNyRCxHQUNELENBQ0gsQ0FBQTtRQUNELElBQU0sYUFBYSxHQUFHLENBQ3BCLDhCQUFNLFNBQVMsRUFBQyxXQUFXLGFBQVUsS0FBSyxJQUN2QyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsRUFBRSxZQUFZLENBQUMsQ0FDeEMsQ0FDUixDQUFBO1FBQ0QsWUFBWSxHQUFHLFlBQVksQ0FBQTtRQUMzQixTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQzFCLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUE7SUFDL0IsQ0FBQyxDQUFDLENBQUE7SUFDRixJQUFNLFNBQVMsR0FBRyxDQUNoQiw4QkFDRSx1QkFBdUIsRUFBRTtZQUN2QixNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUM7U0FDckMsR0FDRCxDQUNILENBQUE7SUFDRCxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3pCLE9BQU8sb0JBQUMsVUFBVSxRQUFFLFNBQVMsQ0FBYyxDQUFBO0FBQzdDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAnQG11aS9tYXRlcmlhbC9UeXBvZ3JhcGh5J1xuaW1wb3J0IHsgQXR0cmlidXRlSGlnaGxpZ2h0IH0gZnJvbSAnLi4vLi4vLi4vanMvbW9kZWwvTGF6eVF1ZXJ5UmVzdWx0L0xhenlRdWVyeVJlc3VsdHMnXG5cbmNvbnN0IGNvbXBhcmF0b3IgPSAoYTogQXR0cmlidXRlSGlnaGxpZ2h0LCBiOiBBdHRyaWJ1dGVIaWdobGlnaHQpID0+IHtcbiAgY29uc3QgYUluZGV4ID0gcGFyc2VJbnQoYS5zdGFydEluZGV4KVxuICBjb25zdCBiSW5kZXggPSBwYXJzZUludChiLnN0YXJ0SW5kZXgpXG4gIGlmIChhSW5kZXggPCBiSW5kZXgpIHtcbiAgICByZXR1cm4gLTFcbiAgfSBlbHNlIGlmIChhSW5kZXggPT09IGJJbmRleCkge1xuICAgIHJldHVybiAwXG4gIH0gZWxzZSBpZiAoYUluZGV4ID4gYkluZGV4KSB7XG4gICAgcmV0dXJuIDFcbiAgfVxuICByZXR1cm4gMFxufVxuXG5leHBvcnQgY29uc3QgZGlzcGxheUhpZ2hsaWdodGVkQXR0ckluRnVsbCA9IChcbiAgaGlnaGxpZ2h0czogQXJyYXk8QXR0cmlidXRlSGlnaGxpZ2h0PixcbiAgdGV4dDogc3RyaW5nLFxuICBpbmRleDogbnVtYmVyXG4pID0+IHtcbiAgLy9zb3J0IHRoZXNlIGluIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IGFwcGVhclxuICBoaWdobGlnaHRzLnNvcnQoY29tcGFyYXRvcilcbiAgLy8gb25seSB1c2UgdGhlIGhpZ2hsaWdodHMgZnJvbSB0aGlzIHZhbHVlIGlmIG11bHRpdmFsdWVkXG4gIGNvbnN0IGZpbHRlcmVkSGlnaGxpZ2h0cyA9IGhpZ2hsaWdodHMuZmlsdGVyKFxuICAgIChoaWdobGlnaHQpID0+IHBhcnNlSW50KGhpZ2hsaWdodC52YWx1ZUluZGV4KSA9PT0gaW5kZXhcbiAgKVxuICBsZXQgdGV4dEFycmF5ID0gW11cbiAgbGV0IGN1cnJlbnRJbmRleCA9IDBcbiAgZmlsdGVyZWRIaWdobGlnaHRzLmZvckVhY2goKGhpZ2hsaWdodCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBoaWdobGlnaHRTdGFydCA9IHBhcnNlSW50KGhpZ2hsaWdodC5zdGFydEluZGV4KVxuICAgIGNvbnN0IGhpZ2hsaWdodEVuZCA9IHBhcnNlSW50KGhpZ2hsaWdodC5lbmRJbmRleClcbiAgICBjb25zdCBiZWZvcmVUZXh0ID0gKFxuICAgICAgPHNwYW5cbiAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgICBfX2h0bWw6IHRleHQuc3Vic3RyaW5nKGN1cnJlbnRJbmRleCwgaGlnaGxpZ2h0U3RhcnQpLFxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICApXG4gICAgY29uc3QgaGlnaGxpZ2h0VGV4dCA9IChcbiAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImhpZ2hsaWdodFwiIGRhdGEtaWQ9e2luZGV4fT5cbiAgICAgICAge3RleHQuc3Vic3RyaW5nKGhpZ2hsaWdodFN0YXJ0LCBoaWdobGlnaHRFbmQpfVxuICAgICAgPC9zcGFuPlxuICAgIClcbiAgICBjdXJyZW50SW5kZXggPSBoaWdobGlnaHRFbmRcbiAgICB0ZXh0QXJyYXkucHVzaChiZWZvcmVUZXh0KVxuICAgIHRleHRBcnJheS5wdXNoKGhpZ2hsaWdodFRleHQpXG4gIH0pXG4gIGNvbnN0IGFmdGVyVGV4dCA9IChcbiAgICA8c3BhblxuICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgX19odG1sOiB0ZXh0LnN1YnN0cmluZyhjdXJyZW50SW5kZXgpLFxuICAgICAgfX1cbiAgICAvPlxuICApXG4gIHRleHRBcnJheS5wdXNoKGFmdGVyVGV4dClcbiAgcmV0dXJuIDxUeXBvZ3JhcGh5Pnt0ZXh0QXJyYXl9PC9UeXBvZ3JhcGh5PlxufVxuIl19