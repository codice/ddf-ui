/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import React from 'react';
import MetacardActions from '../../../react-component/metacard-actions';
import MetacardQuality from '../../../react-component/metacard-quality';
import MetacardHistory from '../../../react-component/metacard-history';
import Summary from './summary';
import { MetacardPreviewReact } from '../../metacard-preview/metacard-preview.view';
export var TabNames = {
    Details: 'Details',
    Preview: 'Preview',
    History: 'History',
    Quality: 'Quality',
    Actions: 'Actions',
};
var Tabs = {
    Details: { content: Summary },
    Preview: {
        content: function (_a) {
            var result = _a.result;
            return React.createElement(MetacardPreviewReact, { result: result });
        },
    },
    History: { content: MetacardHistory },
    Quality: { content: MetacardQuality },
    Actions: { content: MetacardActions },
};
export default Tabs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy1tZXRhY2FyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3dlYmFwcC9jb21wb25lbnQvdGFicy9tZXRhY2FyZC90YWJzLW1ldGFjYXJkLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztJQWFJO0FBQ0osT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQ3pCLE9BQU8sZUFBZSxNQUFNLDJDQUEyQyxDQUFBO0FBQ3ZFLE9BQU8sZUFBZSxNQUFNLDJDQUEyQyxDQUFBO0FBQ3ZFLE9BQU8sZUFBZSxNQUFNLDJDQUEyQyxDQUFBO0FBQ3ZFLE9BQU8sT0FBTyxNQUFNLFdBQVcsQ0FBQTtBQUUvQixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQTtBQWNuRixNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUc7SUFDdEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsT0FBTyxFQUFFLFNBQVM7Q0FDbkIsQ0FBQTtBQUVELElBQU0sSUFBSSxHQUFHO0lBQ1gsT0FBTyxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRTtJQUM3QixPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsVUFBQyxFQUFVO2dCQUFSLE1BQU0sWUFBQTtZQUNoQixPQUFPLG9CQUFDLG9CQUFvQixJQUFDLE1BQU0sRUFBRSxNQUFNLEdBQUksQ0FBQTtRQUNqRCxDQUFDO0tBQ0Y7SUFDRCxPQUFPLEVBQUUsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFO0lBQ3JDLE9BQU8sRUFBRSxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUU7SUFDckMsT0FBTyxFQUFFLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRTtDQUd0QyxDQUFBO0FBRUQsZUFBZSxJQUFJLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgQ29kaWNlIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyXG4gKiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZVxuICogTGljZW5zZSwgb3IgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dFxuICogZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VXG4gKiBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiBBIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogaXMgZGlzdHJpYnV0ZWQgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0gYW5kIGNhbiBiZSBmb3VuZCBhdFxuICogPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9sZ3BsLmh0bWw+LlxuICpcbiAqKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBNZXRhY2FyZEFjdGlvbnMgZnJvbSAnLi4vLi4vLi4vcmVhY3QtY29tcG9uZW50L21ldGFjYXJkLWFjdGlvbnMnXG5pbXBvcnQgTWV0YWNhcmRRdWFsaXR5IGZyb20gJy4uLy4uLy4uL3JlYWN0LWNvbXBvbmVudC9tZXRhY2FyZC1xdWFsaXR5J1xuaW1wb3J0IE1ldGFjYXJkSGlzdG9yeSBmcm9tICcuLi8uLi8uLi9yZWFjdC1jb21wb25lbnQvbWV0YWNhcmQtaGlzdG9yeSdcbmltcG9ydCBTdW1tYXJ5IGZyb20gJy4vc3VtbWFyeSdcbmltcG9ydCB7IExhenlRdWVyeVJlc3VsdCB9IGZyb20gJy4uLy4uLy4uL2pzL21vZGVsL0xhenlRdWVyeVJlc3VsdC9MYXp5UXVlcnlSZXN1bHQnXG5pbXBvcnQgeyBNZXRhY2FyZFByZXZpZXdSZWFjdCB9IGZyb20gJy4uLy4uL21ldGFjYXJkLXByZXZpZXcvbWV0YWNhcmQtcHJldmlldy52aWV3J1xuXG5leHBvcnQgdHlwZSBUYWJDb250ZW50UHJvcHMgPSB7XG4gIHJlc3VsdDogTGF6eVF1ZXJ5UmVzdWx0XG4gIHNlbGVjdGlvbkludGVyZmFjZT86IGFueVxufVxuXG50eXBlIFRhYkRlZmluaXRpb24gPSB7XG4gIGNvbnRlbnQ6XG4gICAgfCAoKHsgcmVzdWx0IH06IFRhYkNvbnRlbnRQcm9wcykgPT4gUmVhY3QuUmVhY3ROb2RlIHwgYW55KVxuICAgIHwgUmVhY3QuQ29tcG9uZW50Q2xhc3M8VGFiQ29udGVudFByb3BzLCBhbnk+XG4gIGhlYWRlcj86ICh7IHJlc3VsdCB9OiBUYWJDb250ZW50UHJvcHMpID0+IFJlYWN0LlJlYWN0Tm9kZVxufVxuXG5leHBvcnQgY29uc3QgVGFiTmFtZXMgPSB7XG4gIERldGFpbHM6ICdEZXRhaWxzJyxcbiAgUHJldmlldzogJ1ByZXZpZXcnLFxuICBIaXN0b3J5OiAnSGlzdG9yeScsXG4gIFF1YWxpdHk6ICdRdWFsaXR5JyxcbiAgQWN0aW9uczogJ0FjdGlvbnMnLFxufVxuXG5jb25zdCBUYWJzID0ge1xuICBEZXRhaWxzOiB7IGNvbnRlbnQ6IFN1bW1hcnkgfSxcbiAgUHJldmlldzoge1xuICAgIGNvbnRlbnQ6ICh7IHJlc3VsdCB9KSA9PiB7XG4gICAgICByZXR1cm4gPE1ldGFjYXJkUHJldmlld1JlYWN0IHJlc3VsdD17cmVzdWx0fSAvPlxuICAgIH0sXG4gIH0sXG4gIEhpc3Rvcnk6IHsgY29udGVudDogTWV0YWNhcmRIaXN0b3J5IH0sXG4gIFF1YWxpdHk6IHsgY29udGVudDogTWV0YWNhcmRRdWFsaXR5IH0sXG4gIEFjdGlvbnM6IHsgY29udGVudDogTWV0YWNhcmRBY3Rpb25zIH0sXG59IGFzIHtcbiAgW2tleTogc3RyaW5nXTogVGFiRGVmaW5pdGlvblxufVxuXG5leHBvcnQgZGVmYXVsdCBUYWJzXG4iXX0=