import { jsx as _jsx } from "react/jsx-runtime";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import * as React from 'react';
import ThemeContainer from '../../react-component/theme';
import { IntlProvider } from 'react-intl';
import { Provider as ThemeProvider } from '../../component/theme/theme';
import { SnackProvider } from '../../component/snack/snack.provider';
import { DialogProvider } from '../../component/dialog';
import { useConfiguration } from '../../js/model/Startup/configuration.hooks';
var ProviderContainer = function (props) {
    var getI18n = useConfiguration().getI18n;
    return (_jsx(React.Fragment, { children: _jsx(ThemeContainer, { children: _jsx(IntlProvider, { locale: navigator.language, messages: getI18n(), children: _jsx(ThemeProvider, { children: _jsx(SnackProvider, { children: _jsx(DialogProvider, { children: props.children }) }) }) }) }) }));
};
export default ProviderContainer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXJzLmNvbnRhaW5lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3dlYmFwcC9leHRlbnNpb24tcG9pbnRzL3Byb3ZpZGVycy9wcm92aWRlcnMuY29udGFpbmVyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7SUFhSTtBQUNKLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBRTlCLE9BQU8sY0FBYyxNQUFNLDZCQUE2QixDQUFBO0FBQ3hELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDekMsT0FBTyxFQUFFLFFBQVEsSUFBSSxhQUFhLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQTtBQUN2RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0NBQXNDLENBQUE7QUFDcEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFBO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFBO0FBTTdFLElBQU0saUJBQWlCLEdBQUcsVUFBQyxLQUFZO0lBQzdCLElBQUEsT0FBTyxHQUFLLGdCQUFnQixFQUFFLFFBQXZCLENBQXVCO0lBQ3RDLE9BQU8sQ0FDTCxLQUFDLEtBQUssQ0FBQyxRQUFRLGNBQ2IsS0FBQyxjQUFjLGNBQ2IsS0FBQyxZQUFZLElBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxZQUMzRCxLQUFDLGFBQWEsY0FDWixLQUFDLGFBQWEsY0FDWixLQUFDLGNBQWMsY0FBRSxLQUFLLENBQUMsUUFBUSxHQUFrQixHQUNuQyxHQUNGLEdBQ0gsR0FDQSxHQUNGLENBQ2xCLENBQUE7QUFDSCxDQUFDLENBQUE7QUFFRCxlQUFlLGlCQUFpQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IFRoZW1lQ29udGFpbmVyIGZyb20gJy4uLy4uL3JlYWN0LWNvbXBvbmVudC90aGVtZSdcbmltcG9ydCB7IEludGxQcm92aWRlciB9IGZyb20gJ3JlYWN0LWludGwnXG5pbXBvcnQgeyBQcm92aWRlciBhcyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50L3RoZW1lL3RoZW1lJ1xuaW1wb3J0IHsgU25hY2tQcm92aWRlciB9IGZyb20gJy4uLy4uL2NvbXBvbmVudC9zbmFjay9zbmFjay5wcm92aWRlcidcbmltcG9ydCB7IERpYWxvZ1Byb3ZpZGVyIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50L2RpYWxvZydcbmltcG9ydCB7IHVzZUNvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi8uLi9qcy9tb2RlbC9TdGFydHVwL2NvbmZpZ3VyYXRpb24uaG9va3MnXG5cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlXG59XG5cbmNvbnN0IFByb3ZpZGVyQ29udGFpbmVyID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCB7IGdldEkxOG4gfSA9IHVzZUNvbmZpZ3VyYXRpb24oKVxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxUaGVtZUNvbnRhaW5lcj5cbiAgICAgICAgPEludGxQcm92aWRlciBsb2NhbGU9e25hdmlnYXRvci5sYW5ndWFnZX0gbWVzc2FnZXM9e2dldEkxOG4oKX0+XG4gICAgICAgICAgPFRoZW1lUHJvdmlkZXI+XG4gICAgICAgICAgICA8U25hY2tQcm92aWRlcj5cbiAgICAgICAgICAgICAgPERpYWxvZ1Byb3ZpZGVyPntwcm9wcy5jaGlsZHJlbn08L0RpYWxvZ1Byb3ZpZGVyPlxuICAgICAgICAgICAgPC9TbmFja1Byb3ZpZGVyPlxuICAgICAgICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgICAgICAgPC9JbnRsUHJvdmlkZXI+XG4gICAgICA8L1RoZW1lQ29udGFpbmVyPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvdmlkZXJDb250YWluZXJcbiJdfQ==