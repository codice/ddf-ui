/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import { __makeTemplateObject } from "tslib";
import { hot } from 'react-hot-loader';
import * as React from 'react';
import styled from 'styled-components';
import { readableColor } from 'polished';
var Header = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  text-align: left;\n  font-size: ", ";\n  font-weight: bolder;\n  opacity: 0.8;\n"], ["\n  text-align: left;\n  font-size: ", ";\n  font-weight: bolder;\n  opacity: 0.8;\n"])), function (props) { return props.theme.largeFontSize; });
var Divider = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  height: ", ";\n  margin: ", " 0px;\n  background: ", ";\n  opacity: 0.1;\n"], ["\n  height: ", ";\n  margin: ", " 0px;\n  background: ", ";\n  opacity: 0.1;\n"])), function (props) { return props.theme.borderRadius; }, function (props) { return props.theme.minimumSpacing; }, function (props) { return readableColor(props.theme.backgroundContent); });
var Actions = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  padding: 0px ", ";\n"], ["\n  padding: 0px ", ";\n"])), function (props) { return props.theme.largeSpacing; });
var OverlayActionLink = styled.a(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  margin-top: ", ";\n  cursor: pointer;\n  display: block;\n"], ["\n  margin-top: ", ";\n  cursor: pointer;\n  display: block;\n"])), function (props) { return props.theme.minimumSpacing; });
var render = function (props) {
    var hasMapActions = props.hasMapActions, overlayActions = props.overlayActions, overlayImage = props.overlayImage, currentOverlayUrl = props.currentOverlayUrl;
    if (!hasMapActions) {
        return null;
    }
    return (React.createElement(React.Fragment, null,
        React.createElement(Header, null, "Map:"),
        React.createElement(Divider, null),
        React.createElement(Actions, null, overlayActions.map(function (overlayAction) {
            return (React.createElement(OverlayActionLink, { "data-url": overlayAction.url, title: overlayAction.description, onClick: overlayImage, key: overlayAction.url },
                overlayAction.overlayText,
                overlayAction.url === currentOverlayUrl ? ' (remove)' : ''));
        })),
        React.createElement(Divider, null)));
};
export default hot(module)(render);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VudGF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL3JlYWN0LWNvbXBvbmVudC9tYXAtYWN0aW9ucy9wcmVzZW50YXRpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0lBYUk7O0FBRUosT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBQ3RDLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQzlCLE9BQU8sTUFBTSxNQUFNLG1CQUFtQixDQUFBO0FBQ3RDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxVQUFVLENBQUE7QUFleEMsSUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcseUpBQUEsc0NBRVYsRUFBb0MsOENBR2xELEtBSGMsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBekIsQ0FBeUIsQ0FHbEQsQ0FBQTtBQUVELElBQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxHQUFHLG1KQUFBLGNBQ2QsRUFBbUMsZUFDbkMsRUFBcUMsdUJBQ2pDLEVBQXVELHNCQUV0RSxLQUpXLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQXhCLENBQXdCLEVBQ25DLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQTFCLENBQTBCLEVBQ2pDLFVBQUMsS0FBSyxJQUFLLE9BQUEsYUFBYSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUMsRUFBNUMsQ0FBNEMsQ0FFdEUsQ0FBQTtBQUVELElBQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxHQUFHLDZGQUFBLG1CQUNULEVBQW1DLEtBQ25ELEtBRGdCLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQXhCLENBQXdCLENBQ25ELENBQUE7QUFFRCxJQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxDQUFDLG1JQUFBLGtCQUNsQixFQUFxQyw0Q0FHcEQsS0FIZSxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUExQixDQUEwQixDQUdwRCxDQUFBO0FBRUQsSUFBTSxNQUFNLEdBQUcsVUFBQyxLQUFZO0lBQ2xCLElBQUEsYUFBYSxHQUNuQixLQUFLLGNBRGMsRUFBRSxjQUFjLEdBQ25DLEtBQUssZUFEOEIsRUFBRSxZQUFZLEdBQ2pELEtBQUssYUFENEMsRUFBRSxpQkFBaUIsR0FDcEUsS0FBSyxrQkFEK0QsQ0FDL0Q7SUFFUCxJQUFJLENBQUMsYUFBYSxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFBO0tBQ1o7SUFDRCxPQUFPLENBQ0w7UUFDRSxvQkFBQyxNQUFNLGVBQWM7UUFDckIsb0JBQUMsT0FBTyxPQUFHO1FBQ1gsb0JBQUMsT0FBTyxRQUNMLGNBQWMsQ0FBQyxHQUFHLENBQUMsVUFBQyxhQUE0QjtZQUMvQyxPQUFPLENBQ0wsb0JBQUMsaUJBQWlCLGdCQUNOLGFBQWEsQ0FBQyxHQUFHLEVBQzNCLEtBQUssRUFBRSxhQUFhLENBQUMsV0FBVyxFQUNoQyxPQUFPLEVBQUUsWUFBWSxFQUNyQixHQUFHLEVBQUUsYUFBYSxDQUFDLEdBQUc7Z0JBRXJCLGFBQWEsQ0FBQyxXQUFXO2dCQUN6QixhQUFhLENBQUMsR0FBRyxLQUFLLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDekMsQ0FDckIsQ0FBQTtRQUNILENBQUMsQ0FBQyxDQUNNO1FBQ1Ysb0JBQUMsT0FBTyxPQUFHLENBQ1YsQ0FDSixDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRUQsZUFBZSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgQ29kaWNlIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyXG4gKiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZVxuICogTGljZW5zZSwgb3IgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dFxuICogZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VXG4gKiBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiBBIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogaXMgZGlzdHJpYnV0ZWQgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0gYW5kIGNhbiBiZSBmb3VuZCBhdFxuICogPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9sZ3BsLmh0bWw+LlxuICpcbiAqKi9cblxuaW1wb3J0IHsgaG90IH0gZnJvbSAncmVhY3QtaG90LWxvYWRlcidcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcbmltcG9ydCB7IHJlYWRhYmxlQ29sb3IgfSBmcm9tICdwb2xpc2hlZCdcblxudHlwZSBQcm9wcyA9IHtcbiAgb3ZlcmxheUFjdGlvbnM6IGFueVxuICBjdXJyZW50T3ZlcmxheVVybDogc3RyaW5nXG4gIG92ZXJsYXlJbWFnZTogKGV2ZW50OiBhbnkpID0+IHZvaWRcbiAgaGFzTWFwQWN0aW9uczogYW55XG59XG5cbnR5cGUgT3ZlcmxheUFjdGlvbiA9IHtcbiAgdXJsOiBzdHJpbmdcbiAgZGVzY3JpcHRpb246IHN0cmluZ1xuICBvdmVybGF5VGV4dDogc3RyaW5nXG59XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5kaXZgXG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmxhcmdlRm9udFNpemV9O1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBvcGFjaXR5OiAwLjg7XG5gXG5cbmNvbnN0IERpdmlkZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXN9O1xuICBtYXJnaW46ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtU3BhY2luZ30gMHB4O1xuICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gcmVhZGFibGVDb2xvcihwcm9wcy50aGVtZS5iYWNrZ3JvdW5kQ29udGVudCl9O1xuICBvcGFjaXR5OiAwLjE7XG5gXG5cbmNvbnN0IEFjdGlvbnMgPSBzdHlsZWQuZGl2YFxuICBwYWRkaW5nOiAwcHggJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmxhcmdlU3BhY2luZ307XG5gXG5cbmNvbnN0IE92ZXJsYXlBY3Rpb25MaW5rID0gc3R5bGVkLmFgXG4gIG1hcmdpbi10b3A6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtU3BhY2luZ307XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG5gXG5cbmNvbnN0IHJlbmRlciA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBoYXNNYXBBY3Rpb25zLCBvdmVybGF5QWN0aW9ucywgb3ZlcmxheUltYWdlLCBjdXJyZW50T3ZlcmxheVVybCB9ID1cbiAgICBwcm9wc1xuXG4gIGlmICghaGFzTWFwQWN0aW9ucykge1xuICAgIHJldHVybiBudWxsXG4gIH1cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWRlcj5NYXA6PC9IZWFkZXI+XG4gICAgICA8RGl2aWRlciAvPlxuICAgICAgPEFjdGlvbnM+XG4gICAgICAgIHtvdmVybGF5QWN0aW9ucy5tYXAoKG92ZXJsYXlBY3Rpb246IE92ZXJsYXlBY3Rpb24pID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPE92ZXJsYXlBY3Rpb25MaW5rXG4gICAgICAgICAgICAgIGRhdGEtdXJsPXtvdmVybGF5QWN0aW9uLnVybH1cbiAgICAgICAgICAgICAgdGl0bGU9e292ZXJsYXlBY3Rpb24uZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e292ZXJsYXlJbWFnZX1cbiAgICAgICAgICAgICAga2V5PXtvdmVybGF5QWN0aW9uLnVybH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge292ZXJsYXlBY3Rpb24ub3ZlcmxheVRleHR9XG4gICAgICAgICAgICAgIHtvdmVybGF5QWN0aW9uLnVybCA9PT0gY3VycmVudE92ZXJsYXlVcmwgPyAnIChyZW1vdmUpJyA6ICcnfVxuICAgICAgICAgICAgPC9PdmVybGF5QWN0aW9uTGluaz5cbiAgICAgICAgICApXG4gICAgICAgIH0pfVxuICAgICAgPC9BY3Rpb25zPlxuICAgICAgPERpdmlkZXIgLz5cbiAgICA8Lz5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBob3QobW9kdWxlKShyZW5kZXIpXG4iXX0=