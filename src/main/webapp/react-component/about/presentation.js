import { __makeTemplateObject } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import styled from 'styled-components';
import { CustomElement } from '../styles/mixins';
import Divider from '@mui/material/Divider';
var Root = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", " overflow: auto;\n  padding: ", " 0px;\n\n  .about-content {\n    margin: auto;\n    max-width: ", ";\n    padding: 0px\n      ", ";\n  }\n\n  .content-version,\n  .version-message {\n    padding: ", ";\n  }\n"], ["\n  ", " overflow: auto;\n  padding: ", " 0px;\n\n  .about-content {\n    margin: auto;\n    max-width: ", ";\n    padding: 0px\n      ", ";\n  }\n\n  .content-version,\n  .version-message {\n    padding: ", ";\n  }\n"])), CustomElement, function (props) { return props.theme.minimumSpacing; }, function (props) {
    return props.theme.screenBelow(props.theme.mediumScreenSize)
        ? '100%'
        : '1200px';
}, function (props) {
    return props.theme.screenBelow(props.theme.mediumScreenSize)
        ? '20px'
        : '100px';
}, function (props) { return props.theme.minimumSpacing; });
export default (function (props) {
    return (_jsx(Root, { children: _jsxs("div", { className: "about-content is-large-font", children: [_jsxs("div", { children: [_jsx("span", { "data-id": "branding-label", className: "is-bold", children: props.branding }), _jsxs("span", { "data-id": "product-label", children: [" ", props.product] })] }), _jsx(Divider, { orientation: "horizontal", variant: "fullWidth", className: "my-3" }), _jsxs("div", { className: "content-version", children: [_jsxs("div", { children: [_jsx("div", { className: "version-title", children: "Version" }), _jsx("div", { "data-id": "version-label", className: "version-message is-medium-font", children: props.version })] }), _jsx(Divider, { orientation: "horizontal", variant: "fullWidth", className: "my-3" }), _jsxs("div", { children: [_jsx("div", { className: "version-title", children: "Unique Identifier" }), _jsx("div", { "data-id": "unique-identifier-label", className: "version-message is-medium-font", children: "".concat(props.commitHash, " ").concat(props.isDirty ? 'with Changes' : '') })] }), _jsx(Divider, { orientation: "horizontal", variant: "fullWidth", className: "my-3" }), _jsxs("div", { children: [_jsx("div", { className: "version-title", children: "Release Date" }), _jsx("div", { "data-id": "release-date-label", className: "version-message is-medium-font", children: props.date })] })] })] }) }));
});
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VudGF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL3JlYWN0LWNvbXBvbmVudC9hYm91dC9wcmVzZW50YXRpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7SUFhSTtBQUVKLE9BQU8sTUFBTSxNQUFNLG1CQUFtQixDQUFBO0FBQ3RDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQUVoRCxPQUFPLE9BQU8sTUFBTSx1QkFBdUIsQ0FBQTtBQVkzQyxJQUFNLElBQUksR0FBRyxNQUFNLENBQUMsR0FBRyw4UkFBQSxNQUNuQixFQUFhLCtCQUNKLEVBQXFDLGlFQUlqQyxFQUlaLDZCQUVHLEVBR1csb0VBS0osRUFBcUMsVUFFbkQsS0FyQkcsYUFBYSxFQUNKLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQTFCLENBQTBCLEVBSWpDLFVBQUMsS0FBSztJQUNqQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7UUFDMUQsQ0FBQyxDQUFDLE1BQU07UUFDUixDQUFDLENBQUMsUUFBUSxDQUFBO0FBQ2QsQ0FBQyxFQUVHLFVBQUMsS0FBSztJQUNOLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQztRQUNuRCxDQUFDLENBQUMsTUFBTTtRQUNSLENBQUMsQ0FBQyxPQUFPO0FBRlgsQ0FFVyxFQUtKLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQTFCLENBQTBCLENBRW5ELENBQUE7QUFFRCxnQkFBZSxVQUFDLEtBQVk7SUFDMUIsT0FBTyxDQUNMLEtBQUMsSUFBSSxjQUNILGVBQUssU0FBUyxFQUFDLDZCQUE2QixhQUMxQywwQkFDRSwwQkFBYyxnQkFBZ0IsRUFBQyxTQUFTLEVBQUMsU0FBUyxZQUMvQyxLQUFLLENBQUMsUUFBUSxHQUNWLEVBQ1AsMkJBQWMsZUFBZSxrQkFBRyxLQUFLLENBQUMsT0FBTyxJQUFRLElBQ2pELEVBQ04sS0FBQyxPQUFPLElBQ04sV0FBVyxFQUFDLFlBQVksRUFDeEIsT0FBTyxFQUFDLFdBQVcsRUFDbkIsU0FBUyxFQUFDLE1BQU0sR0FDaEIsRUFDRixlQUFLLFNBQVMsRUFBQyxpQkFBaUIsYUFDOUIsMEJBQ0UsY0FBSyxTQUFTLEVBQUMsZUFBZSx3QkFBYyxFQUM1Qyx5QkFDVSxlQUFlLEVBQ3ZCLFNBQVMsRUFBQyxnQ0FBZ0MsWUFFekMsS0FBSyxDQUFDLE9BQU8sR0FDVixJQUNGLEVBQ04sS0FBQyxPQUFPLElBQ04sV0FBVyxFQUFDLFlBQVksRUFDeEIsT0FBTyxFQUFDLFdBQVcsRUFDbkIsU0FBUyxFQUFDLE1BQU0sR0FDaEIsRUFDRiwwQkFDRSxjQUFLLFNBQVMsRUFBQyxlQUFlLGtDQUF3QixFQUN0RCx5QkFDVSx5QkFBeUIsRUFDakMsU0FBUyxFQUFDLGdDQUFnQyxZQUV6QyxVQUFHLEtBQUssQ0FBQyxVQUFVLGNBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUUsR0FDekQsSUFDRixFQUNOLEtBQUMsT0FBTyxJQUNOLFdBQVcsRUFBQyxZQUFZLEVBQ3hCLE9BQU8sRUFBQyxXQUFXLEVBQ25CLFNBQVMsRUFBQyxNQUFNLEdBQ2hCLEVBQ0YsMEJBQ0UsY0FBSyxTQUFTLEVBQUMsZUFBZSw2QkFBbUIsRUFDakQseUJBQ1Usb0JBQW9CLEVBQzVCLFNBQVMsRUFBQyxnQ0FBZ0MsWUFFekMsS0FBSyxDQUFDLElBQUksR0FDUCxJQUNGLElBQ0YsSUFDRixHQUNELENBQ1IsQ0FBQTtBQUNILENBQUMsRUFBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBDb2RpY2UgRm91bmRhdGlvblxuICpcbiAqIFRoaXMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXJcbiAqIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlXG4gKiBMaWNlbnNlLCBvciBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0XG4gKiBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlVcbiAqIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuIEEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBpcyBkaXN0cmlidXRlZCBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbSBhbmQgY2FuIGJlIGZvdW5kIGF0XG4gKiA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2xncGwuaHRtbD4uXG4gKlxuICoqL1xuXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgQ3VzdG9tRWxlbWVudCB9IGZyb20gJy4uL3N0eWxlcy9taXhpbnMnXG5cbmltcG9ydCBEaXZpZGVyIGZyb20gJ0BtdWkvbWF0ZXJpYWwvRGl2aWRlcidcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgYnJhbmRpbmc6IHN0cmluZ1xuICBwcm9kdWN0OiBzdHJpbmdcbiAgdmVyc2lvbjogc3RyaW5nXG4gIGNvbW1pdEhhc2g6IHN0cmluZ1xuICBjb21taXREYXRlOiBzdHJpbmdcbiAgaXNEaXJ0eTogYm9vbGVhblxuICBkYXRlOiBzdHJpbmdcbn1cblxuY29uc3QgUm9vdCA9IHN0eWxlZC5kaXZgXG4gICR7Q3VzdG9tRWxlbWVudH0gb3ZlcmZsb3c6IGF1dG87XG4gIHBhZGRpbmc6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtU3BhY2luZ30gMHB4O1xuXG4gIC5hYm91dC1jb250ZW50IHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgbWF4LXdpZHRoOiAkeyhwcm9wcykgPT4ge1xuICAgICAgcmV0dXJuIHByb3BzLnRoZW1lLnNjcmVlbkJlbG93KHByb3BzLnRoZW1lLm1lZGl1bVNjcmVlblNpemUpXG4gICAgICAgID8gJzEwMCUnXG4gICAgICAgIDogJzEyMDBweCdcbiAgICB9fTtcbiAgICBwYWRkaW5nOiAwcHhcbiAgICAgICR7KHByb3BzKSA9PlxuICAgICAgICBwcm9wcy50aGVtZS5zY3JlZW5CZWxvdyhwcm9wcy50aGVtZS5tZWRpdW1TY3JlZW5TaXplKVxuICAgICAgICAgID8gJzIwcHgnXG4gICAgICAgICAgOiAnMTAwcHgnfTtcbiAgfVxuXG4gIC5jb250ZW50LXZlcnNpb24sXG4gIC52ZXJzaW9uLW1lc3NhZ2Uge1xuICAgIHBhZGRpbmc6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtU3BhY2luZ307XG4gIH1cbmBcblxuZXhwb3J0IGRlZmF1bHQgKHByb3BzOiBQcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxSb290PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJhYm91dC1jb250ZW50IGlzLWxhcmdlLWZvbnRcIj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8c3BhbiBkYXRhLWlkPVwiYnJhbmRpbmctbGFiZWxcIiBjbGFzc05hbWU9XCJpcy1ib2xkXCI+XG4gICAgICAgICAgICB7cHJvcHMuYnJhbmRpbmd9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGRhdGEtaWQ9XCJwcm9kdWN0LWxhYmVsXCI+IHtwcm9wcy5wcm9kdWN0fTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxEaXZpZGVyXG4gICAgICAgICAgb3JpZW50YXRpb249XCJob3Jpem9udGFsXCJcbiAgICAgICAgICB2YXJpYW50PVwiZnVsbFdpZHRoXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJteS0zXCJcbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50LXZlcnNpb25cIj5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2ZXJzaW9uLXRpdGxlXCI+VmVyc2lvbjwvZGl2PlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBkYXRhLWlkPVwidmVyc2lvbi1sYWJlbFwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInZlcnNpb24tbWVzc2FnZSBpcy1tZWRpdW0tZm9udFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtwcm9wcy52ZXJzaW9ufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPERpdmlkZXJcbiAgICAgICAgICAgIG9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiXG4gICAgICAgICAgICB2YXJpYW50PVwiZnVsbFdpZHRoXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm15LTNcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmVyc2lvbi10aXRsZVwiPlVuaXF1ZSBJZGVudGlmaWVyPC9kaXY+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGRhdGEtaWQ9XCJ1bmlxdWUtaWRlbnRpZmllci1sYWJlbFwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInZlcnNpb24tbWVzc2FnZSBpcy1tZWRpdW0tZm9udFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtgJHtwcm9wcy5jb21taXRIYXNofSAke3Byb3BzLmlzRGlydHkgPyAnd2l0aCBDaGFuZ2VzJyA6ICcnfWB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8RGl2aWRlclxuICAgICAgICAgICAgb3JpZW50YXRpb249XCJob3Jpem9udGFsXCJcbiAgICAgICAgICAgIHZhcmlhbnQ9XCJmdWxsV2lkdGhcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwibXktM1wiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2ZXJzaW9uLXRpdGxlXCI+UmVsZWFzZSBEYXRlPC9kaXY+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGRhdGEtaWQ9XCJyZWxlYXNlLWRhdGUtbGFiZWxcIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ2ZXJzaW9uLW1lc3NhZ2UgaXMtbWVkaXVtLWZvbnRcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7cHJvcHMuZGF0ZX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvUm9vdD5cbiAgKVxufVxuIl19