import { __makeTemplateObject } from "tslib";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import * as React from 'react';
import styled from 'styled-components';
import { CustomElement } from '../styles/mixins';
import { hot } from 'react-hot-loader';
import Divider from '@mui/material/Divider';
var Root = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", " overflow: auto;\n  padding: ", " 0px;\n\n  .about-content {\n    margin: auto;\n    max-width: ", ";\n    padding: 0px\n      ", ";\n  }\n\n  .content-version,\n  .version-message {\n    padding: ", ";\n  }\n"], ["\n  ", " overflow: auto;\n  padding: ", " 0px;\n\n  .about-content {\n    margin: auto;\n    max-width: ", ";\n    padding: 0px\n      ", ";\n  }\n\n  .content-version,\n  .version-message {\n    padding: ", ";\n  }\n"])), CustomElement, function (props) { return props.theme.minimumSpacing; }, function (props) {
    return props.theme.screenBelow(props.theme.mediumScreenSize)
        ? '100%'
        : '1200px';
}, function (props) {
    return props.theme.screenBelow(props.theme.mediumScreenSize)
        ? '20px'
        : '100px';
}, function (props) { return props.theme.minimumSpacing; });
export default hot(module)(function (props) {
    return (React.createElement(Root, null,
        React.createElement("div", { className: "about-content is-large-font" },
            React.createElement("div", null,
                React.createElement("span", { "data-id": "branding-label", className: "is-bold" }, props.branding),
                React.createElement("span", { "data-id": "product-label" },
                    " ",
                    props.product)),
            React.createElement(Divider, { orientation: "horizontal", variant: "fullWidth", className: "my-3" }),
            React.createElement("div", { className: "content-version" },
                React.createElement("div", null,
                    React.createElement("div", { className: "version-title" }, "Version"),
                    React.createElement("div", { "data-id": "version-label", className: "version-message is-medium-font" }, props.version)),
                React.createElement(Divider, { orientation: "horizontal", variant: "fullWidth", className: "my-3" }),
                React.createElement("div", null,
                    React.createElement("div", { className: "version-title" }, "Unique Identifier"),
                    React.createElement("div", { "data-id": "unique-identifier-label", className: "version-message is-medium-font" }, "".concat(props.commitHash, " ").concat(props.isDirty ? 'with Changes' : ''))),
                React.createElement(Divider, { orientation: "horizontal", variant: "fullWidth", className: "my-3" }),
                React.createElement("div", null,
                    React.createElement("div", { className: "version-title" }, "Release Date"),
                    React.createElement("div", { "data-id": "release-date-label", className: "version-message is-medium-font" }, props.date))))));
});
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VudGF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL3JlYWN0LWNvbXBvbmVudC9hYm91dC9wcmVzZW50YXRpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFJO0FBQ0osT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUE7QUFDOUIsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUE7QUFDdEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBQ2hELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQUN0QyxPQUFPLE9BQU8sTUFBTSx1QkFBdUIsQ0FBQTtBQVkzQyxJQUFNLElBQUksR0FBRyxNQUFNLENBQUMsR0FBRyw4UkFBQSxNQUNuQixFQUFhLCtCQUNKLEVBQXFDLGlFQUlqQyxFQUlaLDZCQUVHLEVBR1csb0VBS0osRUFBcUMsVUFFbkQsS0FyQkcsYUFBYSxFQUNKLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQTFCLENBQTBCLEVBSWpDLFVBQUMsS0FBSztJQUNqQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7UUFDMUQsQ0FBQyxDQUFDLE1BQU07UUFDUixDQUFDLENBQUMsUUFBUSxDQUFBO0FBQ2QsQ0FBQyxFQUVHLFVBQUMsS0FBSztJQUNOLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQztRQUNuRCxDQUFDLENBQUMsTUFBTTtRQUNSLENBQUMsQ0FBQyxPQUFPO0FBRlgsQ0FFVyxFQUtKLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQTFCLENBQTBCLENBRW5ELENBQUE7QUFFRCxlQUFlLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxVQUFDLEtBQVk7SUFDdEMsT0FBTyxDQUNMLG9CQUFDLElBQUk7UUFDSCw2QkFBSyxTQUFTLEVBQUMsNkJBQTZCO1lBQzFDO2dCQUNFLHlDQUFjLGdCQUFnQixFQUFDLFNBQVMsRUFBQyxTQUFTLElBQy9DLEtBQUssQ0FBQyxRQUFRLENBQ1Y7Z0JBQ1AseUNBQWMsZUFBZTs7b0JBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBUSxDQUNqRDtZQUNOLG9CQUFDLE9BQU8sSUFDTixXQUFXLEVBQUMsWUFBWSxFQUN4QixPQUFPLEVBQUMsV0FBVyxFQUNuQixTQUFTLEVBQUMsTUFBTSxHQUNoQjtZQUNGLDZCQUFLLFNBQVMsRUFBQyxpQkFBaUI7Z0JBQzlCO29CQUNFLDZCQUFLLFNBQVMsRUFBQyxlQUFlLGNBQWM7b0JBQzVDLHdDQUNVLGVBQWUsRUFDdkIsU0FBUyxFQUFDLGdDQUFnQyxJQUV6QyxLQUFLLENBQUMsT0FBTyxDQUNWLENBQ0Y7Z0JBQ04sb0JBQUMsT0FBTyxJQUNOLFdBQVcsRUFBQyxZQUFZLEVBQ3hCLE9BQU8sRUFBQyxXQUFXLEVBQ25CLFNBQVMsRUFBQyxNQUFNLEdBQ2hCO2dCQUNGO29CQUNFLDZCQUFLLFNBQVMsRUFBQyxlQUFlLHdCQUF3QjtvQkFDdEQsd0NBQ1UseUJBQXlCLEVBQ2pDLFNBQVMsRUFBQyxnQ0FBZ0MsSUFFekMsVUFBRyxLQUFLLENBQUMsVUFBVSxjQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFFLENBQ3pELENBQ0Y7Z0JBQ04sb0JBQUMsT0FBTyxJQUNOLFdBQVcsRUFBQyxZQUFZLEVBQ3hCLE9BQU8sRUFBQyxXQUFXLEVBQ25CLFNBQVMsRUFBQyxNQUFNLEdBQ2hCO2dCQUNGO29CQUNFLDZCQUFLLFNBQVMsRUFBQyxlQUFlLG1CQUFtQjtvQkFDakQsd0NBQ1Usb0JBQW9CLEVBQzVCLFNBQVMsRUFBQyxnQ0FBZ0MsSUFFekMsS0FBSyxDQUFDLElBQUksQ0FDUCxDQUNGLENBQ0YsQ0FDRixDQUNELENBQ1IsQ0FBQTtBQUNILENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5pbXBvcnQgeyBDdXN0b21FbGVtZW50IH0gZnJvbSAnLi4vc3R5bGVzL21peGlucydcbmltcG9ydCB7IGhvdCB9IGZyb20gJ3JlYWN0LWhvdC1sb2FkZXInXG5pbXBvcnQgRGl2aWRlciBmcm9tICdAbXVpL21hdGVyaWFsL0RpdmlkZXInXG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIGJyYW5kaW5nOiBzdHJpbmdcbiAgcHJvZHVjdDogc3RyaW5nXG4gIHZlcnNpb246IHN0cmluZ1xuICBjb21taXRIYXNoOiBzdHJpbmdcbiAgY29tbWl0RGF0ZTogc3RyaW5nXG4gIGlzRGlydHk6IGJvb2xlYW5cbiAgZGF0ZTogc3RyaW5nXG59XG5cbmNvbnN0IFJvb3QgPSBzdHlsZWQuZGl2YFxuICAke0N1c3RvbUVsZW1lbnR9IG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bVNwYWNpbmd9IDBweDtcblxuICAuYWJvdXQtY29udGVudCB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1heC13aWR0aDogJHsocHJvcHMpID0+IHtcbiAgICAgIHJldHVybiBwcm9wcy50aGVtZS5zY3JlZW5CZWxvdyhwcm9wcy50aGVtZS5tZWRpdW1TY3JlZW5TaXplKVxuICAgICAgICA/ICcxMDAlJ1xuICAgICAgICA6ICcxMjAwcHgnXG4gICAgfX07XG4gICAgcGFkZGluZzogMHB4XG4gICAgICAkeyhwcm9wcykgPT5cbiAgICAgICAgcHJvcHMudGhlbWUuc2NyZWVuQmVsb3cocHJvcHMudGhlbWUubWVkaXVtU2NyZWVuU2l6ZSlcbiAgICAgICAgICA/ICcyMHB4J1xuICAgICAgICAgIDogJzEwMHB4J307XG4gIH1cblxuICAuY29udGVudC12ZXJzaW9uLFxuICAudmVyc2lvbi1tZXNzYWdlIHtcbiAgICBwYWRkaW5nOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bVNwYWNpbmd9O1xuICB9XG5gXG5cbmV4cG9ydCBkZWZhdWx0IGhvdChtb2R1bGUpKChwcm9wczogUHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Um9vdD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJvdXQtY29udGVudCBpcy1sYXJnZS1mb250XCI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPHNwYW4gZGF0YS1pZD1cImJyYW5kaW5nLWxhYmVsXCIgY2xhc3NOYW1lPVwiaXMtYm9sZFwiPlxuICAgICAgICAgICAge3Byb3BzLmJyYW5kaW5nfVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBkYXRhLWlkPVwicHJvZHVjdC1sYWJlbFwiPiB7cHJvcHMucHJvZHVjdH08L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8RGl2aWRlclxuICAgICAgICAgIG9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiXG4gICAgICAgICAgdmFyaWFudD1cImZ1bGxXaWR0aFwiXG4gICAgICAgICAgY2xhc3NOYW1lPVwibXktM1wiXG4gICAgICAgIC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudC12ZXJzaW9uXCI+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmVyc2lvbi10aXRsZVwiPlZlcnNpb248L2Rpdj5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgZGF0YS1pZD1cInZlcnNpb24tbGFiZWxcIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ2ZXJzaW9uLW1lc3NhZ2UgaXMtbWVkaXVtLWZvbnRcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7cHJvcHMudmVyc2lvbn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxEaXZpZGVyXG4gICAgICAgICAgICBvcmllbnRhdGlvbj1cImhvcml6b250YWxcIlxuICAgICAgICAgICAgdmFyaWFudD1cImZ1bGxXaWR0aFwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJteS0zXCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInZlcnNpb24tdGl0bGVcIj5VbmlxdWUgSWRlbnRpZmllcjwvZGl2PlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBkYXRhLWlkPVwidW5pcXVlLWlkZW50aWZpZXItbGFiZWxcIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ2ZXJzaW9uLW1lc3NhZ2UgaXMtbWVkaXVtLWZvbnRcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7YCR7cHJvcHMuY29tbWl0SGFzaH0gJHtwcm9wcy5pc0RpcnR5ID8gJ3dpdGggQ2hhbmdlcycgOiAnJ31gfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPERpdmlkZXJcbiAgICAgICAgICAgIG9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiXG4gICAgICAgICAgICB2YXJpYW50PVwiZnVsbFdpZHRoXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm15LTNcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmVyc2lvbi10aXRsZVwiPlJlbGVhc2UgRGF0ZTwvZGl2PlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBkYXRhLWlkPVwicmVsZWFzZS1kYXRlLWxhYmVsXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidmVyc2lvbi1tZXNzYWdlIGlzLW1lZGl1bS1mb250XCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Byb3BzLmRhdGV9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L1Jvb3Q+XG4gIClcbn0pXG4iXX0=