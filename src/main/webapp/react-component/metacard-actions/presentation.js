import { __makeTemplateObject } from "tslib";
import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import styled from 'styled-components';
import { readableColor } from 'polished';
import MapActions from '../map-actions';
var Root = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  overflow: auto;\n  height: 100%;\n  padding: 0px ", ";\n"], ["\n  overflow: auto;\n  height: 100%;\n  padding: 0px ", ";\n"])), function (props) { return props.theme.largeSpacing; });
var Header = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  text-align: left;\n  font-size: ", ";\n  font-weight: bolder;\n  opacity: 0.8;\n"], ["\n  text-align: left;\n  font-size: ", ";\n  font-weight: bolder;\n  opacity: 0.8;\n"])), function (props) { return props.theme.largeFontSize; });
var MapActionsDiv = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  margin-top: ", ";\n"], ["\n  margin-top: ", ";\n"])), function (props) { return props.theme.minimumSpacing; });
var Divider = styled.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  height: ", ";\n  margin: ", " 0px;\n  background: ", ";\n  opacity: 0.1;\n"], ["\n  height: ", ";\n  margin: ", " 0px;\n  background: ", ";\n  opacity: 0.1;\n"])), function (props) { return props.theme.borderRadius; }, function (props) { return props.theme.minimumSpacing; }, function (props) { return readableColor(props.theme.backgroundContent); });
var Actions = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  padding: 0px ", ";\n"], ["\n  padding: 0px ", ";\n"])), function (props) { return props.theme.largeSpacing; });
var ActionLink = styled.a(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  margin-top: ", ";\n  cursor: pointer;\n  display: block;\n"], ["\n  margin-top: ", ";\n  cursor: pointer;\n  display: block;\n"])), function (props) { return props.theme.minimumSpacing; });
var ExportActions = function (props) {
    var exportActions = props.exportActions;
    return (_jsxs(_Fragment, { children: [_jsx(Header, { children: "Export as:" }), _jsx(Divider, {}), _jsx(Actions, { "data-id": "export-actions-container", children: exportActions.map(function (exportAction) {
                    return (_jsx(ActionLink, { href: exportAction.url, target: "_blank", children: exportAction.title }, exportAction.url));
                }) })] }));
};
var OtherActions = function (props) {
    var otherActions = props.otherActions;
    if (otherActions.length === 0) {
        return null;
    }
    return (_jsxs(_Fragment, { children: [_jsx(Header, { children: "Various:" }), _jsx(Divider, {}), _jsx(Actions, { "data-id": "various-actions-container", children: otherActions.map(function (otherAction) {
                    return (_jsx(ActionLink, { href: otherAction.url, target: "_blank", children: otherAction.title }, otherAction.url));
                }) }), _jsx(Divider, {})] }));
};
var render = function (props) {
    var exportActions = props.exportActions, otherActions = props.otherActions, model = props.model;
    return (_jsxs(Root, { children: [_jsx(Divider, {}), _jsx(ExportActions, { exportActions: exportActions }), _jsx(Divider, {}), _jsx(MapActionsDiv, { children: _jsx(MapActions, { model: model }) }), _jsx(OtherActions, { otherActions: otherActions })] }));
};
export default render;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VudGF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL3JlYWN0LWNvbXBvbmVudC9tZXRhY2FyZC1hY3Rpb25zL3ByZXNlbnRhdGlvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFJO0FBRUosT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUE7QUFDdEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFVBQVUsQ0FBQTtBQUN4QyxPQUFPLFVBQVUsTUFBTSxnQkFBZ0IsQ0FBQTtBQVN2QyxJQUFNLElBQUksR0FBRyxNQUFNLENBQUMsR0FBRyxpSUFBQSx1REFHTixFQUFtQyxLQUNuRCxLQURnQixVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUF4QixDQUF3QixDQUNuRCxDQUFBO0FBQ0QsSUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcseUpBQUEsc0NBRVYsRUFBb0MsOENBR2xELEtBSGMsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBekIsQ0FBeUIsQ0FHbEQsQ0FBQTtBQUVELElBQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxHQUFHLDRGQUFBLGtCQUNoQixFQUFxQyxLQUNwRCxLQURlLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQTFCLENBQTBCLENBQ3BELENBQUE7QUFDRCxJQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsR0FBRyxtSkFBQSxjQUNkLEVBQW1DLGVBQ25DLEVBQXFDLHVCQUNqQyxFQUF1RCxzQkFFdEUsS0FKVyxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUF4QixDQUF3QixFQUNuQyxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUExQixDQUEwQixFQUNqQyxVQUFDLEtBQUssSUFBSyxPQUFBLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDLEVBQTVDLENBQTRDLENBRXRFLENBQUE7QUFFRCxJQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsR0FBRyw2RkFBQSxtQkFDVCxFQUFtQyxLQUNuRCxLQURnQixVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUF4QixDQUF3QixDQUNuRCxDQUFBO0FBRUQsSUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLENBQUMsbUlBQUEsa0JBQ1gsRUFBcUMsNENBR3BELEtBSGUsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBMUIsQ0FBMEIsQ0FHcEQsQ0FBQTtBQUVELElBQU0sYUFBYSxHQUFHLFVBQUMsS0FBVTtJQUMvQixJQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFBO0lBQ3pDLE9BQU8sQ0FDTCw4QkFDRSxLQUFDLE1BQU0sNkJBQW9CLEVBQzNCLEtBQUMsT0FBTyxLQUFHLEVBQ1gsS0FBQyxPQUFPLGVBQVMsMEJBQTBCLFlBQ3hDLGFBQWEsQ0FBQyxHQUFHLENBQUMsVUFBQyxZQUFpQjtvQkFDbkMsT0FBTyxDQUNMLEtBQUMsVUFBVSxJQUNULElBQUksRUFBRSxZQUFZLENBQUMsR0FBRyxFQUN0QixNQUFNLEVBQUMsUUFBUSxZQUdkLFlBQVksQ0FBQyxLQUFLLElBRmQsWUFBWSxDQUFDLEdBQUcsQ0FHVixDQUNkLENBQUE7Z0JBQ0gsQ0FBQyxDQUFDLEdBQ00sSUFDVCxDQUNKLENBQUE7QUFDSCxDQUFDLENBQUE7QUFFRCxJQUFNLFlBQVksR0FBRyxVQUFDLEtBQVU7SUFDOUIsSUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLFlBQVksQ0FBQTtJQUN2QyxJQUFJLFlBQVksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLENBQUM7UUFDOUIsT0FBTyxJQUFJLENBQUE7SUFDYixDQUFDO0lBQ0QsT0FBTyxDQUNMLDhCQUNFLEtBQUMsTUFBTSwyQkFBa0IsRUFDekIsS0FBQyxPQUFPLEtBQUcsRUFDWCxLQUFDLE9BQU8sZUFBUywyQkFBMkIsWUFDekMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxVQUFDLFdBQWdCO29CQUNqQyxPQUFPLENBQ0wsS0FBQyxVQUFVLElBQ1QsSUFBSSxFQUFFLFdBQVcsQ0FBQyxHQUFHLEVBQ3JCLE1BQU0sRUFBQyxRQUFRLFlBR2QsV0FBVyxDQUFDLEtBQUssSUFGYixXQUFXLENBQUMsR0FBRyxDQUdULENBQ2QsQ0FBQTtnQkFDSCxDQUFDLENBQUMsR0FDTSxFQUNWLEtBQUMsT0FBTyxLQUFHLElBQ1YsQ0FDSixDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRUQsSUFBTSxNQUFNLEdBQUcsVUFBQyxLQUFZO0lBQ2xCLElBQUEsYUFBYSxHQUEwQixLQUFLLGNBQS9CLEVBQUUsWUFBWSxHQUFZLEtBQUssYUFBakIsRUFBRSxLQUFLLEdBQUssS0FBSyxNQUFWLENBQVU7SUFDcEQsT0FBTyxDQUNMLE1BQUMsSUFBSSxlQUNILEtBQUMsT0FBTyxLQUFHLEVBQ1gsS0FBQyxhQUFhLElBQUMsYUFBYSxFQUFFLGFBQWEsR0FBSSxFQUMvQyxLQUFDLE9BQU8sS0FBRyxFQUNYLEtBQUMsYUFBYSxjQUNaLEtBQUMsVUFBVSxJQUFDLEtBQUssRUFBRSxLQUFLLEdBQUksR0FDZCxFQUNoQixLQUFDLFlBQVksSUFBQyxZQUFZLEVBQUUsWUFBWSxHQUFJLElBQ3ZDLENBQ1IsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELGVBQWUsTUFBTSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5cbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5pbXBvcnQgeyByZWFkYWJsZUNvbG9yIH0gZnJvbSAncG9saXNoZWQnXG5pbXBvcnQgTWFwQWN0aW9ucyBmcm9tICcuLi9tYXAtYWN0aW9ucydcbmltcG9ydCB7IExhenlRdWVyeVJlc3VsdCB9IGZyb20gJy4uLy4uL2pzL21vZGVsL0xhenlRdWVyeVJlc3VsdC9MYXp5UXVlcnlSZXN1bHQnXG5cbnR5cGUgUHJvcHMgPSB7XG4gIG1vZGVsOiBMYXp5UXVlcnlSZXN1bHRcbiAgZXhwb3J0QWN0aW9uczogYW55XG4gIG90aGVyQWN0aW9uczogYW55XG59XG5cbmNvbnN0IFJvb3QgPSBzdHlsZWQuZGl2YFxuICBvdmVyZmxvdzogYXV0bztcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAwcHggJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmxhcmdlU3BhY2luZ307XG5gXG5jb25zdCBIZWFkZXIgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5sYXJnZUZvbnRTaXplfTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgb3BhY2l0eTogMC44O1xuYFxuXG5jb25zdCBNYXBBY3Rpb25zRGl2ID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLXRvcDogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLm1pbmltdW1TcGFjaW5nfTtcbmBcbmNvbnN0IERpdmlkZXIgPSBzdHlsZWQuZGl2YFxuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXN9O1xuICBtYXJnaW46ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtU3BhY2luZ30gMHB4O1xuICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gcmVhZGFibGVDb2xvcihwcm9wcy50aGVtZS5iYWNrZ3JvdW5kQ29udGVudCl9O1xuICBvcGFjaXR5OiAwLjE7XG5gXG5cbmNvbnN0IEFjdGlvbnMgPSBzdHlsZWQuZGl2YFxuICBwYWRkaW5nOiAwcHggJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmxhcmdlU3BhY2luZ307XG5gXG5cbmNvbnN0IEFjdGlvbkxpbmsgPSBzdHlsZWQuYWBcbiAgbWFyZ2luLXRvcDogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLm1pbmltdW1TcGFjaW5nfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBibG9jaztcbmBcblxuY29uc3QgRXhwb3J0QWN0aW9ucyA9IChwcm9wczogYW55KSA9PiB7XG4gIGNvbnN0IGV4cG9ydEFjdGlvbnMgPSBwcm9wcy5leHBvcnRBY3Rpb25zXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkZXI+RXhwb3J0IGFzOjwvSGVhZGVyPlxuICAgICAgPERpdmlkZXIgLz5cbiAgICAgIDxBY3Rpb25zIGRhdGEtaWQ9XCJleHBvcnQtYWN0aW9ucy1jb250YWluZXJcIj5cbiAgICAgICAge2V4cG9ydEFjdGlvbnMubWFwKChleHBvcnRBY3Rpb246IGFueSkgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QWN0aW9uTGlua1xuICAgICAgICAgICAgICBocmVmPXtleHBvcnRBY3Rpb24udXJsfVxuICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICBrZXk9e2V4cG9ydEFjdGlvbi51cmx9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtleHBvcnRBY3Rpb24udGl0bGV9XG4gICAgICAgICAgICA8L0FjdGlvbkxpbms+XG4gICAgICAgICAgKVxuICAgICAgICB9KX1cbiAgICAgIDwvQWN0aW9ucz5cbiAgICA8Lz5cbiAgKVxufVxuXG5jb25zdCBPdGhlckFjdGlvbnMgPSAocHJvcHM6IGFueSkgPT4ge1xuICBjb25zdCBvdGhlckFjdGlvbnMgPSBwcm9wcy5vdGhlckFjdGlvbnNcbiAgaWYgKG90aGVyQWN0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkZXI+VmFyaW91czo8L0hlYWRlcj5cbiAgICAgIDxEaXZpZGVyIC8+XG4gICAgICA8QWN0aW9ucyBkYXRhLWlkPVwidmFyaW91cy1hY3Rpb25zLWNvbnRhaW5lclwiPlxuICAgICAgICB7b3RoZXJBY3Rpb25zLm1hcCgob3RoZXJBY3Rpb246IGFueSkgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QWN0aW9uTGlua1xuICAgICAgICAgICAgICBocmVmPXtvdGhlckFjdGlvbi51cmx9XG4gICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgIGtleT17b3RoZXJBY3Rpb24udXJsfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7b3RoZXJBY3Rpb24udGl0bGV9XG4gICAgICAgICAgICA8L0FjdGlvbkxpbms+XG4gICAgICAgICAgKVxuICAgICAgICB9KX1cbiAgICAgIDwvQWN0aW9ucz5cbiAgICAgIDxEaXZpZGVyIC8+XG4gICAgPC8+XG4gIClcbn1cblxuY29uc3QgcmVuZGVyID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCB7IGV4cG9ydEFjdGlvbnMsIG90aGVyQWN0aW9ucywgbW9kZWwgfSA9IHByb3BzXG4gIHJldHVybiAoXG4gICAgPFJvb3Q+XG4gICAgICA8RGl2aWRlciAvPlxuICAgICAgPEV4cG9ydEFjdGlvbnMgZXhwb3J0QWN0aW9ucz17ZXhwb3J0QWN0aW9uc30gLz5cbiAgICAgIDxEaXZpZGVyIC8+XG4gICAgICA8TWFwQWN0aW9uc0Rpdj5cbiAgICAgICAgPE1hcEFjdGlvbnMgbW9kZWw9e21vZGVsfSAvPlxuICAgICAgPC9NYXBBY3Rpb25zRGl2PlxuICAgICAgPE90aGVyQWN0aW9ucyBvdGhlckFjdGlvbnM9e290aGVyQWN0aW9uc30gLz5cbiAgICA8L1Jvb3Q+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVuZGVyXG4iXX0=