import { __makeTemplateObject } from "tslib";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import * as React from 'react';
import styled from 'styled-components';
import { hot } from 'react-hot-loader';
var Root = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  width: 100%;\n  height: auto;\n  white-space: nowrap;\n  padding: ", ";\n  overflow: hidden;\n\n  .source-name,\n  .source-available {\n    white-space: normal;\n    display: inline-block;\n    vertical-align: top;\n    font-size: ", ";\n    line-height: ", ";\n  }\n\n  .source-name {\n    padding: 0px ", ";\n    max-width: calc(100% - ", ");\n    word-break: break-all;\n  }\n\n  .source-actions {\n    display: block;\n    padding-left: calc(2 * ", ");\n  }\n\n  .source-action > button {\n    width: 100%;\n    text-align: left;\n    padding: 0px ", ";\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .source-app {\n    display: none;\n  }\n\n  .source-available {\n    width: ", ";\n    text-align: center;\n  }\n\n  .is-available,\n  .is-not-available {\n    display: none;\n  }\n\n  .is-available {\n    display: ", ";\n    color: ", ";\n  }\n\n  .is-not-available {\n    display: ", ";\n    color: ", ";\n  }\n"], ["\n  width: 100%;\n  height: auto;\n  white-space: nowrap;\n  padding: ", ";\n  overflow: hidden;\n\n  .source-name,\n  .source-available {\n    white-space: normal;\n    display: inline-block;\n    vertical-align: top;\n    font-size: ", ";\n    line-height: ", ";\n  }\n\n  .source-name {\n    padding: 0px ", ";\n    max-width: calc(100% - ", ");\n    word-break: break-all;\n  }\n\n  .source-actions {\n    display: block;\n    padding-left: calc(2 * ", ");\n  }\n\n  .source-action > button {\n    width: 100%;\n    text-align: left;\n    padding: 0px ", ";\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .source-app {\n    display: none;\n  }\n\n  .source-available {\n    width: ", ";\n    text-align: center;\n  }\n\n  .is-available,\n  .is-not-available {\n    display: none;\n  }\n\n  .is-available {\n    display: ", ";\n    color: ", ";\n  }\n\n  .is-not-available {\n    display: ", ";\n    color: ", ";\n  }\n"])), function (props) { return props.theme.minimumSpacing; }, function (props) { return props.theme.largeFontSize; }, function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumSpacing; }, function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumSpacing; }, function (_a) {
    var theme = _a.theme;
    return theme.minimumButtonSize;
}, function (props) { return (props.available ? 'inline' : 'none'); }, function (props) { return props.theme.positiveColor; }, function (props) { return (props.available ? 'none' : 'inline'); }, function (props) { return props.theme.warningColor; });
export default hot(module)(function (_a) {
    var id = _a.id, available = _a.available;
    return (React.createElement(Root, { available: available },
        React.createElement("div", { className: "source-available" },
            React.createElement("span", { className: "is-available fa fa-check" }),
            React.createElement("span", { className: "is-not-available fa fa-bolt" })),
        React.createElement("div", { className: "source-name", title: id }, id)));
});
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLWl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWFpbi93ZWJhcHAvcmVhY3QtY29tcG9uZW50L3NvdXJjZS1pdGVtL3NvdXJjZS1pdGVtLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7SUFhSTtBQUNKLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQzlCLE9BQU8sTUFBTSxNQUFNLG1CQUFtQixDQUFBO0FBQ3RDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQU10QyxJQUFNLElBQUksR0FBRyxNQUFNLENBQUMsR0FBRywrK0JBQVcsd0VBSXJCLEVBQXFDLG1LQVFqQyxFQUFvQyxzQkFDbEMsRUFBd0MsK0NBSXhDLEVBQXFDLGdDQUMzQixFQUF3Qyw4R0FNeEMsRUFBd0Msb0dBTWxELEVBQXFDLCtJQVUzQyxFQUFzQyx5SUFVcEMsRUFBZ0QsZ0JBQ2xELEVBQW9DLGdEQUlsQyxFQUFnRCxnQkFDbEQsRUFBbUMsVUFFL0MsS0F0RFksVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBMUIsQ0FBMEIsRUFRakMsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBekIsQ0FBeUIsRUFDbEMsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUE3QixDQUE2QixFQUl4QyxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUExQixDQUEwQixFQUMzQixVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEVBQTdCLENBQTZCLEVBTXhDLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsRUFBN0IsQ0FBNkIsRUFNbEQsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBMUIsQ0FBMEIsRUFVM0MsVUFBQyxFQUFTO1FBQVAsS0FBSyxXQUFBO0lBQU8sT0FBQSxLQUFLLENBQUMsaUJBQWlCO0FBQXZCLENBQXVCLEVBVXBDLFVBQUMsS0FBSyxJQUFLLE9BQUEsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFyQyxDQUFxQyxFQUNsRCxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUF6QixDQUF5QixFQUlsQyxVQUFDLEtBQUssSUFBSyxPQUFBLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBckMsQ0FBcUMsRUFDbEQsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBeEIsQ0FBd0IsQ0FFL0MsQ0FBQTtBQWNELGVBQWUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFVBQUMsRUFBd0I7UUFBdEIsRUFBRSxRQUFBLEVBQUUsU0FBUyxlQUFBO0lBQ3pDLE9BQU8sQ0FDTCxvQkFBQyxJQUFJLElBQUMsU0FBUyxFQUFFLFNBQVM7UUFDeEIsNkJBQUssU0FBUyxFQUFDLGtCQUFrQjtZQUMvQiw4QkFBTSxTQUFTLEVBQUMsMEJBQTBCLEdBQUc7WUFDN0MsOEJBQU0sU0FBUyxFQUFDLDZCQUE2QixHQUFHLENBQzVDO1FBQ04sNkJBQUssU0FBUyxFQUFDLGFBQWEsRUFBQyxLQUFLLEVBQUUsRUFBRSxJQUNuQyxFQUFFLENBQ0MsQ0FDRCxDQUNSLENBQUE7QUFDSCxDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBDb2RpY2UgRm91bmRhdGlvblxuICpcbiAqIFRoaXMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXJcbiAqIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlXG4gKiBMaWNlbnNlLCBvciBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0XG4gKiBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlVcbiAqIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuIEEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBpcyBkaXN0cmlidXRlZCBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbSBhbmQgY2FuIGJlIGZvdW5kIGF0XG4gKiA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2xncGwuaHRtbD4uXG4gKlxuICoqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgaG90IH0gZnJvbSAncmVhY3QtaG90LWxvYWRlcidcblxudHlwZSBSb290UHJvcHMgPSB7XG4gIGF2YWlsYWJsZTogYm9vbGVhblxufVxuXG5jb25zdCBSb290ID0gc3R5bGVkLmRpdjxSb290UHJvcHM+YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBwYWRkaW5nOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bVNwYWNpbmd9O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIC5zb3VyY2UtbmFtZSxcbiAgLnNvdXJjZS1hdmFpbGFibGUge1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubGFyZ2VGb250U2l6ZX07XG4gICAgbGluZS1oZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtQnV0dG9uU2l6ZX07XG4gIH1cblxuICAuc291cmNlLW5hbWUge1xuICAgIHBhZGRpbmc6IDBweCAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bVNwYWNpbmd9O1xuICAgIG1heC13aWR0aDogY2FsYygxMDAlIC0gJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLm1pbmltdW1CdXR0b25TaXplfSk7XG4gICAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICB9XG5cbiAgLnNvdXJjZS1hY3Rpb25zIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLWxlZnQ6IGNhbGMoMiAqICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtQnV0dG9uU2l6ZX0pO1xuICB9XG5cbiAgLnNvdXJjZS1hY3Rpb24gPiBidXR0b24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogMHB4ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtU3BhY2luZ307XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgfVxuXG4gIC5zb3VyY2UtYXBwIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLnNvdXJjZS1hdmFpbGFibGUge1xuICAgIHdpZHRoOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLm1pbmltdW1CdXR0b25TaXplfTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuaXMtYXZhaWxhYmxlLFxuICAuaXMtbm90LWF2YWlsYWJsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5pcy1hdmFpbGFibGUge1xuICAgIGRpc3BsYXk6ICR7KHByb3BzKSA9PiAocHJvcHMuYXZhaWxhYmxlID8gJ2lubGluZScgOiAnbm9uZScpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLnBvc2l0aXZlQ29sb3J9O1xuICB9XG5cbiAgLmlzLW5vdC1hdmFpbGFibGUge1xuICAgIGRpc3BsYXk6ICR7KHByb3BzKSA9PiAocHJvcHMuYXZhaWxhYmxlID8gJ25vbmUnIDogJ2lubGluZScpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLndhcm5pbmdDb2xvcn07XG4gIH1cbmBcblxudHlwZSBTb3VyY2VBY3Rpb24gPSB7XG4gIHRpdGxlOiBzdHJpbmdcbiAgZGVzY3JpcHRpb246IHN0cmluZ1xuICB1cmw6IHN0cmluZ1xuICBpZDogc3RyaW5nXG59XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNvdXJjZUFjdGlvbnM/OiBTb3VyY2VBY3Rpb25bXVxuICBpZDogc3RyaW5nXG59ICYgUm9vdFByb3BzXG5cbmV4cG9ydCBkZWZhdWx0IGhvdChtb2R1bGUpKCh7IGlkLCBhdmFpbGFibGUgfTogUHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Um9vdCBhdmFpbGFibGU9e2F2YWlsYWJsZX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInNvdXJjZS1hdmFpbGFibGVcIj5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaXMtYXZhaWxhYmxlIGZhIGZhLWNoZWNrXCIgLz5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaXMtbm90LWF2YWlsYWJsZSBmYSBmYS1ib2x0XCIgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzb3VyY2UtbmFtZVwiIHRpdGxlPXtpZH0+XG4gICAgICAgIHtpZH1cbiAgICAgIDwvZGl2PlxuICAgIDwvUm9vdD5cbiAgKVxufSlcbiJdfQ==