import { __read } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import FormControl from '@mui/material/FormControl';
import FormControlLabel from '@mui/material/FormControlLabel';
import RadioGroup from '@mui/material/RadioGroup';
import Radio from '@mui/material/Radio';
import Typography from '@mui/material/Typography';
import { TypedUserInstance } from '../../component/singletons/TypedUser';
import user from '../../component/singletons/user-instance';
var coordinateFormatOptions = [
    { label: 'Degrees, Minutes, Seconds (DMS) (Lat/Lon)', value: 'degrees' },
    { label: 'Decimal (Lat/Lon)', value: 'decimal' },
    { label: 'MGRS', value: 'mgrs' },
    { label: 'UTM/UPS (Lat/Lon)', value: 'utm' },
    { label: 'Well Known Text (Lon/Lat)', value: 'wkt' },
];
var CoordinateSettings = function () {
    var _a = __read(useState(TypedUserInstance.getCoordinateFormat()), 2), coordFormat = _a[0], setCoordFormat = _a[1];
    var updateCoordFormat = function (coordinateFormat) {
        var preferences = user.get('user').get('preferences');
        setCoordFormat(coordinateFormat);
        preferences.set({ coordinateFormat: coordinateFormat });
        preferences.savePreferences();
    };
    return (_jsxs(FormControl, { children: [_jsx(Typography, { variant: "h6", children: "Coordinate System (CS)" }), _jsx(RadioGroup, { value: coordFormat, onChange: function (e) { return updateCoordFormat(e.target.value); }, children: coordinateFormatOptions.map(function (format) { return (_jsx(FormControlLabel, { value: format.value, control: _jsx(Radio, { size: "small", color: "primary" }), label: _jsx("div", { className: "text-sm", children: format.label }) })); }) })] }));
};
export default CoordinateSettings;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29vcmRpbmF0ZS1zZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3dlYmFwcC9yZWFjdC1jb21wb25lbnQvbWFwLXVzZXItc2V0dGluZ3MvY29vcmRpbmF0ZS1zZXR0aW5ncy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sT0FBTyxDQUFBO0FBQ2hDLE9BQU8sV0FBVyxNQUFNLDJCQUEyQixDQUFBO0FBQ25ELE9BQU8sZ0JBQWdCLE1BQU0sZ0NBQWdDLENBQUE7QUFDN0QsT0FBTyxVQUFVLE1BQU0sMEJBQTBCLENBQUE7QUFDakQsT0FBTyxLQUFLLE1BQU0scUJBQXFCLENBQUE7QUFDdkMsT0FBTyxVQUFVLE1BQU0sMEJBQTBCLENBQUE7QUFDakQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0NBQXNDLENBQUE7QUFDeEUsT0FBTyxJQUFJLE1BQU0sMENBQTBDLENBQUE7QUFFM0QsSUFBTSx1QkFBdUIsR0FBRztJQUM5QixFQUFFLEtBQUssRUFBRSwyQ0FBMkMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFO0lBQ3hFLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUU7SUFDaEQsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUU7SUFDaEMsRUFBRSxLQUFLLEVBQUUsbUJBQW1CLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRTtJQUM1QyxFQUFFLEtBQUssRUFBRSwyQkFBMkIsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFO0NBQ3JELENBQUE7QUFFRCxJQUFNLGtCQUFrQixHQUFHO0lBQ25CLElBQUEsS0FBQSxPQUFnQyxRQUFRLENBQzVDLGlCQUFpQixDQUFDLG1CQUFtQixFQUFFLENBQ3hDLElBQUEsRUFGTSxXQUFXLFFBQUEsRUFBRSxjQUFjLFFBRWpDLENBQUE7SUFFRCxJQUFNLGlCQUFpQixHQUFHLFVBQUMsZ0JBQXdCO1FBQ2pELElBQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBQ3ZELGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO1FBQ2hDLFdBQVcsQ0FBQyxHQUFHLENBQUMsRUFBRSxnQkFBZ0Isa0JBQUEsRUFBRSxDQUFDLENBQUE7UUFDckMsV0FBVyxDQUFDLGVBQWUsRUFBRSxDQUFBO0lBQy9CLENBQUMsQ0FBQTtJQUVELE9BQU8sQ0FDTCxNQUFDLFdBQVcsZUFDVixLQUFDLFVBQVUsSUFBQyxPQUFPLEVBQUMsSUFBSSx1Q0FBb0MsRUFDNUQsS0FBQyxVQUFVLElBQ1QsS0FBSyxFQUFFLFdBQVcsRUFDbEIsUUFBUSxFQUFFLFVBQUMsQ0FBQyxJQUFLLE9BQUEsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBakMsQ0FBaUMsWUFFakQsdUJBQXVCLENBQUMsR0FBRyxDQUFDLFVBQUMsTUFBTSxJQUFLLE9BQUEsQ0FDdkMsS0FBQyxnQkFBZ0IsSUFDZixLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFDbkIsT0FBTyxFQUFFLEtBQUMsS0FBSyxJQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLFNBQVMsR0FBRyxFQUMvQyxLQUFLLEVBQUUsY0FBSyxTQUFTLEVBQUMsU0FBUyxZQUFFLE1BQU0sQ0FBQyxLQUFLLEdBQU8sR0FDcEQsQ0FDSCxFQU53QyxDQU14QyxDQUFDLEdBQ1MsSUFDRCxDQUNmLENBQUE7QUFDSCxDQUFDLENBQUE7QUFFRCxlQUFlLGtCQUFrQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBGb3JtQ29udHJvbCBmcm9tICdAbXVpL21hdGVyaWFsL0Zvcm1Db250cm9sJ1xuaW1wb3J0IEZvcm1Db250cm9sTGFiZWwgZnJvbSAnQG11aS9tYXRlcmlhbC9Gb3JtQ29udHJvbExhYmVsJ1xuaW1wb3J0IFJhZGlvR3JvdXAgZnJvbSAnQG11aS9tYXRlcmlhbC9SYWRpb0dyb3VwJ1xuaW1wb3J0IFJhZGlvIGZyb20gJ0BtdWkvbWF0ZXJpYWwvUmFkaW8nXG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICdAbXVpL21hdGVyaWFsL1R5cG9ncmFwaHknXG5pbXBvcnQgeyBUeXBlZFVzZXJJbnN0YW5jZSB9IGZyb20gJy4uLy4uL2NvbXBvbmVudC9zaW5nbGV0b25zL1R5cGVkVXNlcidcbmltcG9ydCB1c2VyIGZyb20gJy4uLy4uL2NvbXBvbmVudC9zaW5nbGV0b25zL3VzZXItaW5zdGFuY2UnXG5cbmNvbnN0IGNvb3JkaW5hdGVGb3JtYXRPcHRpb25zID0gW1xuICB7IGxhYmVsOiAnRGVncmVlcywgTWludXRlcywgU2Vjb25kcyAoRE1TKSAoTGF0L0xvbiknLCB2YWx1ZTogJ2RlZ3JlZXMnIH0sXG4gIHsgbGFiZWw6ICdEZWNpbWFsIChMYXQvTG9uKScsIHZhbHVlOiAnZGVjaW1hbCcgfSxcbiAgeyBsYWJlbDogJ01HUlMnLCB2YWx1ZTogJ21ncnMnIH0sXG4gIHsgbGFiZWw6ICdVVE0vVVBTIChMYXQvTG9uKScsIHZhbHVlOiAndXRtJyB9LFxuICB7IGxhYmVsOiAnV2VsbCBLbm93biBUZXh0IChMb24vTGF0KScsIHZhbHVlOiAnd2t0JyB9LFxuXVxuXG5jb25zdCBDb29yZGluYXRlU2V0dGluZ3MgPSAoKSA9PiB7XG4gIGNvbnN0IFtjb29yZEZvcm1hdCwgc2V0Q29vcmRGb3JtYXRdID0gdXNlU3RhdGUoXG4gICAgVHlwZWRVc2VySW5zdGFuY2UuZ2V0Q29vcmRpbmF0ZUZvcm1hdCgpXG4gIClcblxuICBjb25zdCB1cGRhdGVDb29yZEZvcm1hdCA9IChjb29yZGluYXRlRm9ybWF0OiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBwcmVmZXJlbmNlcyA9IHVzZXIuZ2V0KCd1c2VyJykuZ2V0KCdwcmVmZXJlbmNlcycpXG4gICAgc2V0Q29vcmRGb3JtYXQoY29vcmRpbmF0ZUZvcm1hdClcbiAgICBwcmVmZXJlbmNlcy5zZXQoeyBjb29yZGluYXRlRm9ybWF0IH0pXG4gICAgcHJlZmVyZW5jZXMuc2F2ZVByZWZlcmVuY2VzKClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPEZvcm1Db250cm9sPlxuICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImg2XCI+Q29vcmRpbmF0ZSBTeXN0ZW0gKENTKTwvVHlwb2dyYXBoeT5cbiAgICAgIDxSYWRpb0dyb3VwXG4gICAgICAgIHZhbHVlPXtjb29yZEZvcm1hdH1cbiAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB1cGRhdGVDb29yZEZvcm1hdChlLnRhcmdldC52YWx1ZSl9XG4gICAgICA+XG4gICAgICAgIHtjb29yZGluYXRlRm9ybWF0T3B0aW9ucy5tYXAoKGZvcm1hdCkgPT4gKFxuICAgICAgICAgIDxGb3JtQ29udHJvbExhYmVsXG4gICAgICAgICAgICB2YWx1ZT17Zm9ybWF0LnZhbHVlfVxuICAgICAgICAgICAgY29udHJvbD17PFJhZGlvIHNpemU9XCJzbWFsbFwiIGNvbG9yPVwicHJpbWFyeVwiIC8+fVxuICAgICAgICAgICAgbGFiZWw9ezxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbVwiPntmb3JtYXQubGFiZWx9PC9kaXY+fVxuICAgICAgICAgIC8+XG4gICAgICAgICkpfVxuICAgICAgPC9SYWRpb0dyb3VwPlxuICAgIDwvRm9ybUNvbnRyb2w+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29vcmRpbmF0ZVNldHRpbmdzXG4iXX0=