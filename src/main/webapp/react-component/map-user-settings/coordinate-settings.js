import { __read } from "tslib";
import * as React from 'react';
import { useState } from 'react';
import FormControl from '@mui/material/FormControl';
import FormControlLabel from '@mui/material/FormControlLabel';
import RadioGroup from '@mui/material/RadioGroup';
import Radio from '@mui/material/Radio';
import Typography from '@mui/material/Typography';
import { TypedUserInstance } from '../../component/singletons/TypedUser';
import user from '../../component/singletons/user-instance';
var coordinateFormatOptions = [
    { label: 'Degrees, Minutes, Seconds (DMS) (Lat/Lon)', value: 'degrees' },
    { label: 'Decimal (Lat/Lon)', value: 'decimal' },
    { label: 'MGRS', value: 'mgrs' },
    { label: 'UTM/UPS (Lat/Lon)', value: 'utm' },
    { label: 'Well Known Text (Lon/Lat)', value: 'wkt' },
];
var CoordinateSettings = function () {
    var _a = __read(useState(TypedUserInstance.getCoordinateFormat()), 2), coordFormat = _a[0], setCoordFormat = _a[1];
    var updateCoordFormat = function (coordinateFormat) {
        var preferences = user.get('user').get('preferences');
        setCoordFormat(coordinateFormat);
        preferences.set({ coordinateFormat: coordinateFormat });
        preferences.savePreferences();
    };
    return (React.createElement(FormControl, null,
        React.createElement(Typography, { variant: "h6" }, "Coordinate System (CS)"),
        React.createElement(RadioGroup, { value: coordFormat, onChange: function (e) { return updateCoordFormat(e.target.value); } }, coordinateFormatOptions.map(function (format) { return (React.createElement(FormControlLabel, { value: format.value, control: React.createElement(Radio, { size: "small", color: "primary" }), label: React.createElement("div", { className: "text-sm" }, format.label) })); }))));
};
export default CoordinateSettings;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29vcmRpbmF0ZS1zZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3dlYmFwcC9yZWFjdC1jb21wb25lbnQvbWFwLXVzZXItc2V0dGluZ3MvY29vcmRpbmF0ZS1zZXR0aW5ncy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQzlCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxPQUFPLENBQUE7QUFDaEMsT0FBTyxXQUFXLE1BQU0sMkJBQTJCLENBQUE7QUFDbkQsT0FBTyxnQkFBZ0IsTUFBTSxnQ0FBZ0MsQ0FBQTtBQUM3RCxPQUFPLFVBQVUsTUFBTSwwQkFBMEIsQ0FBQTtBQUNqRCxPQUFPLEtBQUssTUFBTSxxQkFBcUIsQ0FBQTtBQUN2QyxPQUFPLFVBQVUsTUFBTSwwQkFBMEIsQ0FBQTtBQUNqRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQTtBQUN4RSxPQUFPLElBQUksTUFBTSwwQ0FBMEMsQ0FBQTtBQUUzRCxJQUFNLHVCQUF1QixHQUFHO0lBQzlCLEVBQUUsS0FBSyxFQUFFLDJDQUEyQyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUU7SUFDeEUsRUFBRSxLQUFLLEVBQUUsbUJBQW1CLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtJQUNoRCxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtJQUNoQyxFQUFFLEtBQUssRUFBRSxtQkFBbUIsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFO0lBQzVDLEVBQUUsS0FBSyxFQUFFLDJCQUEyQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUU7Q0FDckQsQ0FBQTtBQUVELElBQU0sa0JBQWtCLEdBQUc7SUFDbkIsSUFBQSxLQUFBLE9BQWdDLFFBQVEsQ0FDNUMsaUJBQWlCLENBQUMsbUJBQW1CLEVBQUUsQ0FDeEMsSUFBQSxFQUZNLFdBQVcsUUFBQSxFQUFFLGNBQWMsUUFFakMsQ0FBQTtJQUVELElBQU0saUJBQWlCLEdBQUcsVUFBQyxnQkFBd0I7UUFDakQsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUE7UUFDdkQsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQUE7UUFDaEMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxFQUFFLGdCQUFnQixrQkFBQSxFQUFFLENBQUMsQ0FBQTtRQUNyQyxXQUFXLENBQUMsZUFBZSxFQUFFLENBQUE7SUFDL0IsQ0FBQyxDQUFBO0lBRUQsT0FBTyxDQUNMLG9CQUFDLFdBQVc7UUFDVixvQkFBQyxVQUFVLElBQUMsT0FBTyxFQUFDLElBQUksNkJBQW9DO1FBQzVELG9CQUFDLFVBQVUsSUFDVCxLQUFLLEVBQUUsV0FBVyxFQUNsQixRQUFRLEVBQUUsVUFBQyxDQUFDLElBQUssT0FBQSxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxJQUVqRCx1QkFBdUIsQ0FBQyxHQUFHLENBQUMsVUFBQyxNQUFNLElBQUssT0FBQSxDQUN2QyxvQkFBQyxnQkFBZ0IsSUFDZixLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFDbkIsT0FBTyxFQUFFLG9CQUFDLEtBQUssSUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEtBQUssRUFBQyxTQUFTLEdBQUcsRUFDL0MsS0FBSyxFQUFFLDZCQUFLLFNBQVMsRUFBQyxTQUFTLElBQUUsTUFBTSxDQUFDLEtBQUssQ0FBTyxHQUNwRCxDQUNILEVBTndDLENBTXhDLENBQUMsQ0FDUyxDQUNELENBQ2YsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELGVBQWUsa0JBQWtCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgRm9ybUNvbnRyb2wgZnJvbSAnQG11aS9tYXRlcmlhbC9Gb3JtQ29udHJvbCdcbmltcG9ydCBGb3JtQ29udHJvbExhYmVsIGZyb20gJ0BtdWkvbWF0ZXJpYWwvRm9ybUNvbnRyb2xMYWJlbCdcbmltcG9ydCBSYWRpb0dyb3VwIGZyb20gJ0BtdWkvbWF0ZXJpYWwvUmFkaW9Hcm91cCdcbmltcG9ydCBSYWRpbyBmcm9tICdAbXVpL21hdGVyaWFsL1JhZGlvJ1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAnQG11aS9tYXRlcmlhbC9UeXBvZ3JhcGh5J1xuaW1wb3J0IHsgVHlwZWRVc2VySW5zdGFuY2UgfSBmcm9tICcuLi8uLi9jb21wb25lbnQvc2luZ2xldG9ucy9UeXBlZFVzZXInXG5pbXBvcnQgdXNlciBmcm9tICcuLi8uLi9jb21wb25lbnQvc2luZ2xldG9ucy91c2VyLWluc3RhbmNlJ1xuXG5jb25zdCBjb29yZGluYXRlRm9ybWF0T3B0aW9ucyA9IFtcbiAgeyBsYWJlbDogJ0RlZ3JlZXMsIE1pbnV0ZXMsIFNlY29uZHMgKERNUykgKExhdC9Mb24pJywgdmFsdWU6ICdkZWdyZWVzJyB9LFxuICB7IGxhYmVsOiAnRGVjaW1hbCAoTGF0L0xvbiknLCB2YWx1ZTogJ2RlY2ltYWwnIH0sXG4gIHsgbGFiZWw6ICdNR1JTJywgdmFsdWU6ICdtZ3JzJyB9LFxuICB7IGxhYmVsOiAnVVRNL1VQUyAoTGF0L0xvbiknLCB2YWx1ZTogJ3V0bScgfSxcbiAgeyBsYWJlbDogJ1dlbGwgS25vd24gVGV4dCAoTG9uL0xhdCknLCB2YWx1ZTogJ3drdCcgfSxcbl1cblxuY29uc3QgQ29vcmRpbmF0ZVNldHRpbmdzID0gKCkgPT4ge1xuICBjb25zdCBbY29vcmRGb3JtYXQsIHNldENvb3JkRm9ybWF0XSA9IHVzZVN0YXRlKFxuICAgIFR5cGVkVXNlckluc3RhbmNlLmdldENvb3JkaW5hdGVGb3JtYXQoKVxuICApXG5cbiAgY29uc3QgdXBkYXRlQ29vcmRGb3JtYXQgPSAoY29vcmRpbmF0ZUZvcm1hdDogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcHJlZmVyZW5jZXMgPSB1c2VyLmdldCgndXNlcicpLmdldCgncHJlZmVyZW5jZXMnKVxuICAgIHNldENvb3JkRm9ybWF0KGNvb3JkaW5hdGVGb3JtYXQpXG4gICAgcHJlZmVyZW5jZXMuc2V0KHsgY29vcmRpbmF0ZUZvcm1hdCB9KVxuICAgIHByZWZlcmVuY2VzLnNhdmVQcmVmZXJlbmNlcygpXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxGb3JtQ29udHJvbD5cbiAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNlwiPkNvb3JkaW5hdGUgU3lzdGVtIChDUyk8L1R5cG9ncmFwaHk+XG4gICAgICA8UmFkaW9Hcm91cFxuICAgICAgICB2YWx1ZT17Y29vcmRGb3JtYXR9XG4gICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gdXBkYXRlQ29vcmRGb3JtYXQoZS50YXJnZXQudmFsdWUpfVxuICAgICAgPlxuICAgICAgICB7Y29vcmRpbmF0ZUZvcm1hdE9wdGlvbnMubWFwKChmb3JtYXQpID0+IChcbiAgICAgICAgICA8Rm9ybUNvbnRyb2xMYWJlbFxuICAgICAgICAgICAgdmFsdWU9e2Zvcm1hdC52YWx1ZX1cbiAgICAgICAgICAgIGNvbnRyb2w9ezxSYWRpbyBzaXplPVwic21hbGxcIiBjb2xvcj1cInByaW1hcnlcIiAvPn1cbiAgICAgICAgICAgIGxhYmVsPXs8ZGl2IGNsYXNzTmFtZT1cInRleHQtc21cIj57Zm9ybWF0LmxhYmVsfTwvZGl2Pn1cbiAgICAgICAgICAvPlxuICAgICAgICApKX1cbiAgICAgIDwvUmFkaW9Hcm91cD5cbiAgICA8L0Zvcm1Db250cm9sPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IENvb3JkaW5hdGVTZXR0aW5nc1xuIl19