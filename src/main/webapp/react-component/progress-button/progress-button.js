import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import LinearProgress from '@mui/material/LinearProgress';
import Button from '@mui/material/Button';
import CircularProgress from '@mui/material/CircularProgress';
var ProgressButton = function (props) {
    var children = props.children, style = props.style, disabled = props.disabled, loading = props.loading, variant = props.variant, color = props.color, size = props.size, progressVariant = props.progressVariant, onClick = props.onClick, buttonProps = props.buttonProps, linearProgressProps = props.linearProgressProps, circularProgressProps = props.circularProgressProps, className = props.className, dataId = props.dataId;
    var Loading = function () {
        return progressVariant === 'circular' ? (_jsx(CircularProgress, __assign({ size: 24, className: "absolute" }, circularProgressProps))) : (_jsx(LinearProgress, __assign({ className: "absolute w-full h-full opacity-25" }, linearProgressProps)));
    };
    return (_jsxs(Button, __assign({ "data-id": dataId, style: style, variant: variant || 'contained', color: color || 'primary', size: size, className: "relative ".concat(className), disabled: loading || disabled, onClick: onClick }, buttonProps, { children: [children, loading && _jsx(Loading, {})] })));
};
export default ProgressButton;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtYnV0dG9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL3JlYWN0LWNvbXBvbmVudC9wcm9ncmVzcy1idXR0b24vcHJvZ3Jlc3MtYnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQWVBLE9BQU8sY0FFTixNQUFNLDhCQUE4QixDQUFBO0FBQ3JDLE9BQU8sTUFBdUIsTUFBTSxzQkFBc0IsQ0FBQTtBQUMxRCxPQUFPLGdCQUVOLE1BQU0sZ0NBQWdDLENBQUE7QUFtQnZDLElBQU0sY0FBYyxHQUFHLFVBQUMsS0FBWTtJQUVoQyxJQUFBLFFBQVEsR0FjTixLQUFLLFNBZEMsRUFDUixLQUFLLEdBYUgsS0FBSyxNQWJGLEVBQ0wsUUFBUSxHQVlOLEtBQUssU0FaQyxFQUNSLE9BQU8sR0FXTCxLQUFLLFFBWEEsRUFDUCxPQUFPLEdBVUwsS0FBSyxRQVZBLEVBQ1AsS0FBSyxHQVNILEtBQUssTUFURixFQUNMLElBQUksR0FRRixLQUFLLEtBUkgsRUFDSixlQUFlLEdBT2IsS0FBSyxnQkFQUSxFQUNmLE9BQU8sR0FNTCxLQUFLLFFBTkEsRUFDUCxXQUFXLEdBS1QsS0FBSyxZQUxJLEVBQ1gsbUJBQW1CLEdBSWpCLEtBQUssb0JBSlksRUFDbkIscUJBQXFCLEdBR25CLEtBQUssc0JBSGMsRUFDckIsU0FBUyxHQUVQLEtBQUssVUFGRSxFQUNULE1BQU0sR0FDSixLQUFLLE9BREQsQ0FDQztJQUVULElBQU0sT0FBTyxHQUFHO1FBQ2QsT0FBTyxlQUFlLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUN0QyxLQUFDLGdCQUFnQixhQUNmLElBQUksRUFBRSxFQUFFLEVBQ1IsU0FBUyxFQUFDLFVBQVUsSUFDaEIscUJBQXFCLEVBQ3pCLENBQ0gsQ0FBQyxDQUFDLENBQUMsQ0FDRixLQUFDLGNBQWMsYUFDYixTQUFTLEVBQUMsbUNBQW1DLElBQ3pDLG1CQUFtQixFQUN2QixDQUNILENBQUE7SUFDSCxDQUFDLENBQUE7SUFFRCxPQUFPLENBQ0wsTUFBQyxNQUFNLHdCQUNJLE1BQU0sRUFDZixLQUFLLEVBQUUsS0FBSyxFQUNaLE9BQU8sRUFBRSxPQUFPLElBQUksV0FBVyxFQUMvQixLQUFLLEVBQUUsS0FBSyxJQUFJLFNBQVMsRUFDekIsSUFBSSxFQUFFLElBQUksRUFDVixTQUFTLEVBQUUsbUJBQVksU0FBUyxDQUFFLEVBQ2xDLFFBQVEsRUFBRSxPQUFPLElBQUksUUFBUSxFQUM3QixPQUFPLEVBQUUsT0FBTyxJQUNaLFdBQVcsZUFFZCxRQUFRLEVBQ1IsT0FBTyxJQUFJLEtBQUMsT0FBTyxLQUFHLEtBQ2hCLENBQ1YsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELGVBQWUsY0FBYyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBMaW5lYXJQcm9ncmVzcywge1xuICBMaW5lYXJQcm9ncmVzc1Byb3BzLFxufSBmcm9tICdAbXVpL21hdGVyaWFsL0xpbmVhclByb2dyZXNzJ1xuaW1wb3J0IEJ1dHRvbiwgeyBCdXR0b25Qcm9wcyB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwvQnV0dG9uJ1xuaW1wb3J0IENpcmN1bGFyUHJvZ3Jlc3MsIHtcbiAgQ2lyY3VsYXJQcm9ncmVzc1Byb3BzLFxufSBmcm9tICdAbXVpL21hdGVyaWFsL0NpcmN1bGFyUHJvZ3Jlc3MnXG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbiAgc3R5bGU/OiBSZWFjdC5DU1NQcm9wZXJ0aWVzXG4gIGRpc2FibGVkPzogYm9vbGVhblxuICBsb2FkaW5nPzogYm9vbGVhblxuICB2YXJpYW50PzogQnV0dG9uUHJvcHNbJ3ZhcmlhbnQnXVxuICBjb2xvcj86IEJ1dHRvblByb3BzWydjb2xvciddXG4gIHNpemU/OiBCdXR0b25Qcm9wc1snc2l6ZSddXG4gIHByb2dyZXNzVmFyaWFudD86ICdjaXJjdWxhcicgfCAnbGluZWFyJ1xuICBvbkNsaWNrPzogUmVhY3QuTW91c2VFdmVudEhhbmRsZXI8SFRNTEJ1dHRvbkVsZW1lbnQ+XG4gIGJ1dHRvblByb3BzPzogQnV0dG9uUHJvcHNcbiAgbGluZWFyUHJvZ3Jlc3NQcm9wcz86IExpbmVhclByb2dyZXNzUHJvcHNcbiAgY2lyY3VsYXJQcm9ncmVzc1Byb3BzPzogQ2lyY3VsYXJQcm9ncmVzc1Byb3BzXG4gIGNsYXNzTmFtZT86IHN0cmluZ1xuICBkYXRhSWQ/OiBzdHJpbmdcbn1cblxuY29uc3QgUHJvZ3Jlc3NCdXR0b24gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjaGlsZHJlbixcbiAgICBzdHlsZSxcbiAgICBkaXNhYmxlZCxcbiAgICBsb2FkaW5nLFxuICAgIHZhcmlhbnQsXG4gICAgY29sb3IsXG4gICAgc2l6ZSxcbiAgICBwcm9ncmVzc1ZhcmlhbnQsXG4gICAgb25DbGljayxcbiAgICBidXR0b25Qcm9wcyxcbiAgICBsaW5lYXJQcm9ncmVzc1Byb3BzLFxuICAgIGNpcmN1bGFyUHJvZ3Jlc3NQcm9wcyxcbiAgICBjbGFzc05hbWUsXG4gICAgZGF0YUlkLFxuICB9ID0gcHJvcHNcblxuICBjb25zdCBMb2FkaW5nID0gKCkgPT4ge1xuICAgIHJldHVybiBwcm9ncmVzc1ZhcmlhbnQgPT09ICdjaXJjdWxhcicgPyAoXG4gICAgICA8Q2lyY3VsYXJQcm9ncmVzc1xuICAgICAgICBzaXplPXsyNH1cbiAgICAgICAgY2xhc3NOYW1lPVwiYWJzb2x1dGVcIlxuICAgICAgICB7Li4uY2lyY3VsYXJQcm9ncmVzc1Byb3BzfVxuICAgICAgLz5cbiAgICApIDogKFxuICAgICAgPExpbmVhclByb2dyZXNzXG4gICAgICAgIGNsYXNzTmFtZT1cImFic29sdXRlIHctZnVsbCBoLWZ1bGwgb3BhY2l0eS0yNVwiXG4gICAgICAgIHsuLi5saW5lYXJQcm9ncmVzc1Byb3BzfVxuICAgICAgLz5cbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxCdXR0b25cbiAgICAgIGRhdGEtaWQ9e2RhdGFJZH1cbiAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgIHZhcmlhbnQ9e3ZhcmlhbnQgfHwgJ2NvbnRhaW5lZCd9XG4gICAgICBjb2xvcj17Y29sb3IgfHwgJ3ByaW1hcnknfVxuICAgICAgc2l6ZT17c2l6ZX1cbiAgICAgIGNsYXNzTmFtZT17YHJlbGF0aXZlICR7Y2xhc3NOYW1lfWB9XG4gICAgICBkaXNhYmxlZD17bG9hZGluZyB8fCBkaXNhYmxlZH1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICB7Li4uYnV0dG9uUHJvcHN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgICAge2xvYWRpbmcgJiYgPExvYWRpbmcgLz59XG4gICAgPC9CdXR0b24+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvZ3Jlc3NCdXR0b25cbiJdfQ==