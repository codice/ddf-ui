import { __makeTemplateObject } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/* Copyright (c) Connexta, LLC */
import styled from 'styled-components';
import { Grid } from '@mui/material';
import Tooltip from '@mui/material/Tooltip/Tooltip';
import { transparentize } from 'polished';
var ColorSwatch = styled.button(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  height: 1.5rem;\n  width: 1.5rem;\n  min-width: 1.5rem;\n  margin: 0.2rem;\n  border-radius: 4px;\n  background-color: ", ";\n"], ["\n  height: 1.5rem;\n  width: 1.5rem;\n  min-width: 1.5rem;\n  margin: 0.2rem;\n  border-radius: 4px;\n  background-color: ", ";\n"])), function (props) { return props.color; });
export var ColorSquare = styled(ColorSwatch)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  height: ", ";\n  width: ", ";\n  min-width: ", ";\n  background-clip: padding-box;\n  &:enabled {\n    border: 0.12rem solid\n      ", ";\n  }\n  &:enabled:hover {\n    border: 0.15rem solid\n      ", ";\n  }\n"], ["\n  height: ", ";\n  width: ", ";\n  min-width: ", ";\n  background-clip: padding-box;\n  &:enabled {\n    border: 0.12rem solid\n      ", ";\n  }\n  &:enabled:hover {\n    border: 0.15rem solid\n      ", ";\n  }\n"])), function (props) { return props.size; }, function (props) { return props.size; }, function (props) { return props.size; }, function (props) { return transparentize(0.5, props.palette.text.primary); }, function (props) { return transparentize(0.1, props.palette.text.primary); });
var ColorGrid = styled(Grid)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  padding: 0.5rem;\n"], ["\n  padding: 0.5rem;\n"])));
var ColorPaletteItem = function (_a) {
    var title = _a.title, colorValue = _a.colorValue, setColor = _a.setColor;
    return (_jsx(Tooltip, { title: title || '', disableInteractive: true, children: _jsx(ColorSwatch, { color: colorValue, onClick: function () { return setColor(colorValue); } }) }));
};
export var locationColors = {
    purple: '#8E79DD',
    yellow: '#EECC66',
    cyan: '#33BBEE',
    red: '#961E00',
    green: '#117733',
    blue: '#0022FF',
    violet: '#AA4499',
    orange: '#EE7733',
    teal: '#44AA99',
    grey: '#BBBBBB',
    black: '#000000',
    white: '#FFFFFF',
};
// a color that is not similar looking to the ones above
export var contrastingColor = '#996600';
export var LocationColorSelector = function (_a) {
    var setColor = _a.setColor;
    return (_jsxs(ColorGrid, { container: true, direction: "column", justifyContent: "center", alignItems: "flex-start", children: [_jsxs(Grid, { item: true, children: [_jsx(ColorPaletteItem, { title: 'White', colorValue: locationColors.white, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Grey', colorValue: locationColors.grey, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Black', colorValue: locationColors.black, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Yellow', colorValue: locationColors.yellow, setColor: setColor })] }), _jsxs(Grid, { item: true, children: [_jsx(ColorPaletteItem, { title: 'Red', colorValue: locationColors.red, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Green', colorValue: locationColors.green, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Blue', colorValue: locationColors.blue, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Orange', colorValue: locationColors.orange, setColor: setColor })] }), _jsxs(Grid, { item: true, children: [_jsx(ColorPaletteItem, { title: 'Cyan', colorValue: locationColors.cyan, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Violet', colorValue: locationColors.violet, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Teal', colorValue: locationColors.teal, setColor: setColor }), _jsx(ColorPaletteItem, { title: 'Purple', colorValue: locationColors.purple, setColor: setColor })] })] }));
};
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYXRpb24tY29sb3Itc2VsZWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWFpbi93ZWJhcHAvcmVhY3QtY29tcG9uZW50L2xvY2F0aW9uL2xvY2F0aW9uLWNvbG9yLXNlbGVjdG9yLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFpQztBQUVqQyxPQUFPLE1BQU0sTUFBTSxtQkFBbUIsQ0FBQTtBQUN0QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBQ3BDLE9BQU8sT0FBTyxNQUFNLCtCQUErQixDQUFBO0FBQ25ELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxVQUFVLENBQUE7QUFFekMsSUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLE1BQU0sdU1BQUEsNkhBTVgsRUFBMkIsS0FDaEQsS0FEcUIsVUFBQyxLQUFVLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxFQUFYLENBQVcsQ0FDaEQsQ0FBQTtBQUVELE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLDJSQUFBLGNBQ2xDLEVBQTBCLGNBQzNCLEVBQTBCLGtCQUN0QixFQUEwQixzRkFJakMsRUFBK0QsZ0VBSS9ELEVBQStELFVBRXRFLEtBWlcsVUFBQyxLQUFVLElBQUssT0FBQSxLQUFLLENBQUMsSUFBSSxFQUFWLENBQVUsRUFDM0IsVUFBQyxLQUFVLElBQUssT0FBQSxLQUFLLENBQUMsSUFBSSxFQUFWLENBQVUsRUFDdEIsVUFBQyxLQUFVLElBQUssT0FBQSxLQUFLLENBQUMsSUFBSSxFQUFWLENBQVUsRUFJakMsVUFBQyxLQUFVLElBQUssT0FBQSxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUEvQyxDQUErQyxFQUkvRCxVQUFDLEtBQVUsSUFBSyxPQUFBLGNBQWMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxD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QUksRUFDL0IsUUFBUSxFQUFFLFFBQVEsR0FDbEIsRUFDRixLQUFDLGdCQUFnQixJQUNmLEtBQUssRUFBRSxRQUFRLEVBQ2YsVUFBVSxFQUFFLGNBQWMsQ0FBQyxNQUFNLEVBQ2pDLFFBQVEsRUFBRSxRQUFRLEdBQ2xCLEVBQ0YsS0FBQyxnQkFBZ0IsSUFDZixLQUFLLEVBQUUsTUFBTSxFQUNiLFVBQVUsRUFBRSxjQUFjLENBQUMsSUFBSSxFQUMvQixRQUFRLEVBQUUsUUFBUSxHQUNsQixFQUNGLEtBQUMsZ0JBQWdCLElBQ2YsS0FBSyxFQUFFLFFBQVEsRUFDZixVQUFVLEVBQUUsY0FBYyxDQUFDLE1BQU0sRUFDakMsUUFBUSxFQUFFLFFBQVEsR0FDbEIsSUFDRyxJQUNHLENBQ2IsQ0FBQTtBQUNILENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAoYykgQ29ubmV4dGEsIExMQyAqL1xuXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgR3JpZCB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnXG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAbXVpL21hdGVyaWFsL1Rvb2x0aXAvVG9vbHRpcCdcbmltcG9ydCB7IHRyYW5zcGFyZW50aXplIH0gZnJvbSAncG9saXNoZWQnXG5cbmNvbnN0IENvbG9yU3dhdGNoID0gc3R5bGVkLmJ1dHRvbmBcbiAgaGVpZ2h0OiAxLjVyZW07XG4gIHdpZHRoOiAxLjVyZW07XG4gIG1pbi13aWR0aDogMS41cmVtO1xuICBtYXJnaW46IDAuMnJlbTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wczogYW55KSA9PiBwcm9wcy5jb2xvcn07XG5gXG5cbmV4cG9ydCBjb25zdCBDb2xvclNxdWFyZSA9IHN0eWxlZChDb2xvclN3YXRjaClgXG4gIGhlaWdodDogJHsocHJvcHM6IGFueSkgPT4gcHJvcHMuc2l6ZX07XG4gIHdpZHRoOiAkeyhwcm9wczogYW55KSA9PiBwcm9wcy5zaXplfTtcbiAgbWluLXdpZHRoOiAkeyhwcm9wczogYW55KSA9PiBwcm9wcy5zaXplfTtcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbiAgJjplbmFibGVkIHtcbiAgICBib3JkZXI6IDAuMTJyZW0gc29saWRcbiAgICAgICR7KHByb3BzOiBhbnkpID0+IHRyYW5zcGFyZW50aXplKDAuNSwgcHJvcHMucGFsZXR0ZS50ZXh0LnByaW1hcnkpfTtcbiAgfVxuICAmOmVuYWJsZWQ6aG92ZXIge1xuICAgIGJvcmRlcjogMC4xNXJlbSBzb2xpZFxuICAgICAgJHsocHJvcHM6IGFueSkgPT4gdHJhbnNwYXJlbnRpemUoMC4xLCBwcm9wcy5wYWxldHRlLnRleHQucHJpbWFyeSl9O1xuICB9XG5gXG5cbmNvbnN0IENvbG9yR3JpZCA9IHN0eWxlZChHcmlkKWBcbiAgcGFkZGluZzogMC41cmVtO1xuYFxuXG50eXBlIExvY2F0aW9uQ29sb3JTZWxlY3RvclByb3BzID0ge1xuICBzZXRDb2xvcjogKGNvbG9yOiBzdHJpbmcpID0+IHZvaWRcbn1cblxudHlwZSBDb2xvclN3YXRjaFByb3BzID0ge1xuICBjb2xvclZhbHVlOiBzdHJpbmdcbiAgdGl0bGU/OiBzdHJpbmdcbn0gJiBMb2NhdGlvbkNvbG9yU2VsZWN0b3JQcm9wc1xuXG5jb25zdCBDb2xvclBhbGV0dGVJdGVtID0gKHtcbiAgdGl0bGUsXG4gIGNvbG9yVmFsdWUsXG4gIHNldENvbG9yLFxufTogQ29sb3JTd2F0Y2hQcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxUb29sdGlwIHRpdGxlPXt0aXRsZSB8fCAnJ30gZGlzYWJsZUludGVyYWN0aXZlPlxuICAgICAgPENvbG9yU3dhdGNoIGNvbG9yPXtjb2xvclZhbHVlfSBvbkNsaWNrPXsoKSA9PiBzZXRDb2xvcihjb2xvclZhbHVlKX0gLz5cbiAgICA8L1Rvb2x0aXA+XG4gIClcbn1cblxuZXhwb3J0IGNvbnN0IGxvY2F0aW9uQ29sb3JzID0ge1xuICBwdXJwbGU6ICcjOEU3OUREJyxcbiAgeWVsbG93OiAnI0VFQ0M2NicsXG4gIGN5YW46ICcjMzNCQkVFJyxcbiAgcmVkOiAnIzk2MUUwMCcsXG4gIGdyZWVuOiAnIzExNzczMycsXG4gIGJsdWU6ICcjMDAyMkZGJyxcbiAgdmlvbGV0OiAnI0FBNDQ5OScsXG4gIG9yYW5nZTogJyNFRTc3MzMnLFxuICB0ZWFsOiAnIzQ0QUE5OScsXG4gIGdyZXk6ICcjQkJCQkJCJyxcbiAgYmxhY2s6ICcjMDAwMDAwJyxcbiAgd2hpdGU6ICcjRkZGRkZGJyxcbn1cblxuLy8gYSBjb2xvciB0aGF0IGlzIG5vdCBzaW1pbGFyIGxvb2tpbmcgdG8gdGhlIG9uZXMgYWJvdmVcbmV4cG9ydCBjb25zdCBjb250cmFzdGluZ0NvbG9yID0gJyM5OTY2MDAnXG5cbmV4cG9ydCBjb25zdCBMb2NhdGlvbkNvbG9yU2VsZWN0b3IgPSAoe1xuICBzZXRDb2xvcixcbn06IExvY2F0aW9uQ29sb3JTZWxlY3RvclByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbG9yR3JpZFxuICAgICAgY29udGFpbmVyXG4gICAgICBkaXJlY3Rpb249XCJjb2x1bW5cIlxuICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgYWxpZ25JdGVtcz1cImZsZXgtc3RhcnRcIlxuICAgID5cbiAgICAgIDxHcmlkIGl0ZW0+XG4gICAgICAgIDxDb2xvclBhbGV0dGVJdGVtXG4gICAgICAgICAgdGl0bGU9eydXaGl0ZSd9XG4gICAgICAgICAgY29sb3JWYWx1ZT17bG9jYXRpb25Db2xvcnMud2hpdGV9XG4gICAgICAgICAgc2V0Q29sb3I9e3NldENvbG9yfVxuICAgICAgICAvPlxuICAgICAgICA8Q29sb3JQYWxldHRlSXRlbVxuICAgICAgICAgIHRpdGxlPXsnR3JleSd9XG4gICAgICAgICAgY29sb3JWYWx1ZT17bG9jYXRpb25Db2xvcnMuZ3JleX1cbiAgICAgICAgICBzZXRDb2xvcj17c2V0Q29sb3J9XG4gICAgICAgIC8+XG4gICAgICAgIDxDb2xvclBhbGV0dGVJdGVtXG4gICAgICAgICAgdGl0bGU9eydCbGFjayd9XG4gICAgICAgICAgY29sb3JWYWx1ZT17bG9jYXRpb25Db2xvcnMuYmxhY2t9XG4gICAgICAgICAgc2V0Q29sb3I9e3NldENvbG9yfVxuICAgICAgICAvPlxuICAgICAgICA8Q29sb3JQYWxldHRlSXRlbVxuICAgICAgICAgIHRpdGxlPXsnWWVsbG93J31cbiAgICAgICAgICBjb2xvclZhbHVlPXtsb2NhdGlvbkNvbG9ycy55ZWxsb3d9XG4gICAgICAgICAgc2V0Q29sb3I9e3NldENvbG9yfVxuICAgICAgICAvPlxuICAgICAgPC9HcmlkPlxuICAgICAgPEdyaWQgaXRlbT5cbiAgICAgICAgPENvbG9yUGFsZXR0ZUl0ZW1cbiAgICAgICAgICB0aXRsZT17J1JlZCd9XG4gICAgICAgICAgY29sb3JWYWx1ZT17bG9jYXRpb25Db2xvcnMucmVkfVxuICAgICAgICAgIHNldENvbG9yPXtzZXRDb2xvcn1cbiAgICAgICAgLz5cbiAgICAgICAgPENvbG9yUGFsZXR0ZUl0ZW1cbiAgICAgICAgICB0aXRsZT17J0dyZWVuJ31cbiAgICAgICAgICBjb2xvclZhbHVlPXtsb2NhdGlvbkNvbG9ycy5ncmVlbn1cbiAgICAgICAgICBzZXRDb2xvcj17c2V0Q29sb3J9XG4gICAgICAgIC8+XG4gICAgICAgIDxDb2xvclBhbGV0dGVJdGVtXG4gICAgICAgICAgdGl0bGU9eydCbHVlJ31cbiAgICAgICAgICBjb2xvclZhbHVlPXtsb2NhdGlvbkNvbG9ycy5ibHVlfVxuICAgICAgICAgIHNldENvbG9yPXtzZXRDb2xvcn1cbiAgICAgICAgLz5cbiAgICAgICAgPENvbG9yUGFsZXR0ZUl0ZW1cbiAgICAgICAgICB0aXRsZT17J09yYW5nZSd9XG4gICAgICAgICAgY29sb3JWYWx1ZT17bG9jYXRpb25Db2xvcnMub3JhbmdlfVxuICAgICAgICAgIHNldENvbG9yPXtzZXRDb2xvcn1cbiAgICAgICAgLz5cbiAgICAgIDwvR3JpZD5cbiAgICAgIDxHcmlkIGl0ZW0+XG4gICAgICAgIDxDb2xvclBhbGV0dGVJdGVtXG4gICAgICAgICAgdGl0bGU9eydDeWFuJ31cbiAgICAgICAgICBjb2xvclZhbHVlPXtsb2NhdGlvbkNvbG9ycy5jeWFufVxuICAgICAgICAgIHNldENvbG9yPXtzZXRDb2xvcn1cbiAgICAgICAgLz5cbiAgICAgICAgPENvbG9yUGFsZXR0ZUl0ZW1cbiAgICAgICAgICB0aXRsZT17J1Zpb2xldCd9XG4gICAgICAgICAgY29sb3JWYWx1ZT17bG9jYXRpb25Db2xvcnMudmlvbGV0fVxuICAgICAgICAgIHNldENvbG9yPXtzZXRDb2xvcn1cbiAgICAgICAgLz5cbiAgICAgICAgPENvbG9yUGFsZXR0ZUl0ZW1cbiAgICAgICAgICB0aXRsZT17J1RlYWwnfVxuICAgICAgICAgIGNvbG9yVmFsdWU9e2xvY2F0aW9uQ29sb3JzLnRlYWx9XG4gICAgICAgICAgc2V0Q29sb3I9e3NldENvbG9yfVxuICAgICAgICAvPlxuICAgICAgICA8Q29sb3JQYWxldHRlSXRlbVxuICAgICAgICAgIHRpdGxlPXsnUHVycGxlJ31cbiAgICAgICAgICBjb2xvclZhbHVlPXtsb2NhdGlvbkNvbG9ycy5wdXJwbGV9XG4gICAgICAgICAgc2V0Q29sb3I9e3NldENvbG9yfVxuICAgICAgICAvPlxuICAgICAgPC9HcmlkPlxuICAgIDwvQ29sb3JHcmlkPlxuICApXG59XG4iXX0=