import { __makeTemplateObject } from "tslib";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import * as React from 'react';
import styled from 'styled-components';
import { hot } from 'react-hot-loader';
// @ts-expect-error ts-migrate(7016) FIXME: Could not find a declaration file for module 'mt-g... Remove this comment to see the full error message
import mtgeo from 'mt-geo';
var Root = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  padding: ", ";\n  position: relative;\n\n  &.example-label,\n  &.example-value {\n    width: 50%;\n    display: inline-block;\n    vertical-align: middle;\n    position: relative;\n  }\n\n  &.example-label {\n    text-align: right;\n  }\n"], ["\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  padding: ", ";\n  position: relative;\n\n  &.example-label,\n  &.example-value {\n    width: 50%;\n    display: inline-block;\n    vertical-align: middle;\n    position: relative;\n  }\n\n  &.example-label {\n    text-align: right;\n  }\n"])), function (props) { return props.theme.minimumSpacing; });
var Label = styled.label(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  .example-label & {\n    vertical-align: middle;\n    cursor: auto;\n    font-weight: bolder;\n    max-width: calc(100% - ", ");\n    margin: 0px;\n    line-height: 1.4;\n    padding: ", " 0px;\n    min-height: ", ";\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-wrap: normal;\n    white-space: normal;\n  }\n"], ["\n  .example-label & {\n    vertical-align: middle;\n    cursor: auto;\n    font-weight: bolder;\n    max-width: calc(100% - ", ");\n    margin: 0px;\n    line-height: 1.4;\n    padding: ", " 0px;\n    min-height: ", ";\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-wrap: normal;\n    white-space: normal;\n  }\n"])), function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumSpacing; }, function (props) { return props.theme.minimumButtonSize; });
var exampleLat = '14.94', exampleLon = '-11.875';
var defaultExamples = {
    degrees: "".concat(mtgeo.toLat(exampleLat), " ").concat(mtgeo.toLon(exampleLon)),
    decimal: "".concat(exampleLat, " ").concat(exampleLon),
    mgrs: '4Q FL 23009 12331',
    utm: '14N 1925mE 1513mN',
    wkt: 'POINT (50 40)',
};
var render = function (props) {
    var selected = props.selected, _a = props.examples, examples = _a === void 0 ? defaultExamples : _a;
    var example = examples[selected];
    if (typeof example === 'undefined') {
        console.warn("Unrecognized coordinate format value [".concat(selected, "]"));
    }
    return (React.createElement(Root, null,
        React.createElement("div", { className: "example-label" },
            React.createElement(Label, null, "Example Coordinates")),
        React.createElement("div", { className: "example-value" },
            React.createElement("span", null, example))));
};
export default hot(module)(render);
export var testComponent = render;
var templateObject_1, templateObject_2;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZS1jb29yZGluYXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYWluL3dlYmFwcC9yZWFjdC1jb21wb25lbnQvbWFwLXNldHRpbmdzL2V4YW1wbGUtY29vcmRpbmF0ZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFJO0FBQ0osT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUE7QUFDOUIsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUE7QUFDdEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBQ3RDLG1KQUFtSjtBQUNuSixPQUFPLEtBQUssTUFBTSxRQUFRLENBQUE7QUFPMUIsSUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLEdBQUcsa1hBQUEsMEVBSVYsRUFBcUMsbU9BY2pELEtBZFksVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBMUIsQ0FBMEIsQ0FjakQsQ0FBQTtBQUVELElBQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLDhZQUFBLCtIQUtHLEVBQXdDLDREQUd0RCxFQUFxQyx5QkFDbEMsRUFBd0MsaUhBTXpELEtBVjRCLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsRUFBN0IsQ0FBNkIsRUFHdEQsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBMUIsQ0FBMEIsRUFDbEMsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUE3QixDQUE2QixDQU16RCxDQUFBO0FBQ0QsSUFBTSxVQUFVLEdBQUcsT0FBTyxFQUN4QixVQUFVLEdBQUcsU0FBUyxDQUFBO0FBQ3hCLElBQU0sZUFBZSxHQUFHO0lBQ3RCLE9BQU8sRUFBRSxVQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLGNBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBRTtJQUNoRSxPQUFPLEVBQUUsVUFBRyxVQUFVLGNBQUksVUFBVSxDQUFFO0lBQ3RDLElBQUksRUFBRSxtQkFBbUI7SUFDekIsR0FBRyxFQUFFLG1CQUFtQjtJQUN4QixHQUFHLEVBQUUsZUFBZTtDQUdyQixDQUFBO0FBRUQsSUFBTSxNQUFNLEdBQUcsVUFBQyxLQUFZO0lBQ2xCLElBQUEsUUFBUSxHQUFpQyxLQUFLLFNBQXRDLEVBQUUsS0FBK0IsS0FBSyxTQUFWLEVBQTFCLFFBQVEsbUJBQUcsZUFBZSxLQUFBLENBQVU7SUFDdEQsSUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0lBQ2xDLElBQUksT0FBTyxPQUFPLEtBQUssV0FBVyxFQUFFO1FBQ2xDLE9BQU8sQ0FBQyxJQUFJLENBQUMsZ0RBQXlDLFFBQVEsTUFBRyxDQUFDLENBQUE7S0FDbkU7SUFDRCxPQUFPLENBQ0wsb0JBQUMsSUFBSTtRQUNILDZCQUFLLFNBQVMsRUFBQyxlQUFlO1lBQzVCLG9CQUFDLEtBQUssOEJBQTRCLENBQzlCO1FBQ04sNkJBQUssU0FBUyxFQUFDLGVBQWU7WUFDNUIsa0NBQU8sT0FBTyxDQUFRLENBQ2xCLENBQ0QsQ0FDUixDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRUQsZUFBZSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUE7QUFDbEMsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBDb2RpY2UgRm91bmRhdGlvblxuICpcbiAqIFRoaXMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXJcbiAqIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlXG4gKiBMaWNlbnNlLCBvciBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0XG4gKiBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlVcbiAqIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuIEEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBpcyBkaXN0cmlidXRlZCBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbSBhbmQgY2FuIGJlIGZvdW5kIGF0XG4gKiA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2xncGwuaHRtbD4uXG4gKlxuICoqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgaG90IH0gZnJvbSAncmVhY3QtaG90LWxvYWRlcidcbi8vIEB0cy1leHBlY3QtZXJyb3IgdHMtbWlncmF0ZSg3MDE2KSBGSVhNRTogQ291bGQgbm90IGZpbmQgYSBkZWNsYXJhdGlvbiBmaWxlIGZvciBtb2R1bGUgJ210LWcuLi4gUmVtb3ZlIHRoaXMgY29tbWVudCB0byBzZWUgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZVxuaW1wb3J0IG10Z2VvIGZyb20gJ210LWdlbydcblxudHlwZSBQcm9wcyA9IHtcbiAgc2VsZWN0ZWQ6IHN0cmluZ1xuICBleGFtcGxlcz86IHsgW2luZGV4OiBzdHJpbmddOiBzdHJpbmcgfVxufVxuXG5jb25zdCBSb290ID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBwYWRkaW5nOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bVNwYWNpbmd9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJi5leGFtcGxlLWxhYmVsLFxuICAmLmV4YW1wbGUtdmFsdWUge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgJi5leGFtcGxlLWxhYmVsIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuYFxuXG5jb25zdCBMYWJlbCA9IHN0eWxlZC5sYWJlbGBcbiAgLmV4YW1wbGUtbGFiZWwgJiB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBjdXJzb3I6IGF1dG87XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtQnV0dG9uU2l6ZX0pO1xuICAgIG1hcmdpbjogMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgcGFkZGluZzogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLm1pbmltdW1TcGFjaW5nfSAwcHg7XG4gICAgbWluLWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLm1pbmltdW1CdXR0b25TaXplfTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdvcmQtd3JhcDogbm9ybWFsO1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIH1cbmBcbmNvbnN0IGV4YW1wbGVMYXQgPSAnMTQuOTQnLFxuICBleGFtcGxlTG9uID0gJy0xMS44NzUnXG5jb25zdCBkZWZhdWx0RXhhbXBsZXMgPSB7XG4gIGRlZ3JlZXM6IGAke210Z2VvLnRvTGF0KGV4YW1wbGVMYXQpfSAke210Z2VvLnRvTG9uKGV4YW1wbGVMb24pfWAsXG4gIGRlY2ltYWw6IGAke2V4YW1wbGVMYXR9ICR7ZXhhbXBsZUxvbn1gLFxuICBtZ3JzOiAnNFEgRkwgMjMwMDkgMTIzMzEnLFxuICB1dG06ICcxNE4gMTkyNW1FIDE1MTNtTicsXG4gIHdrdDogJ1BPSU5UICg1MCA0MCknLFxufSBhcyB7XG4gIFtpbmRleDogc3RyaW5nXTogc3RyaW5nXG59XG5cbmNvbnN0IHJlbmRlciA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBzZWxlY3RlZCwgZXhhbXBsZXMgPSBkZWZhdWx0RXhhbXBsZXMgfSA9IHByb3BzXG4gIGNvbnN0IGV4YW1wbGUgPSBleGFtcGxlc1tzZWxlY3RlZF1cbiAgaWYgKHR5cGVvZiBleGFtcGxlID09PSAndW5kZWZpbmVkJykge1xuICAgIGNvbnNvbGUud2FybihgVW5yZWNvZ25pemVkIGNvb3JkaW5hdGUgZm9ybWF0IHZhbHVlIFske3NlbGVjdGVkfV1gKVxuICB9XG4gIHJldHVybiAoXG4gICAgPFJvb3Q+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImV4YW1wbGUtbGFiZWxcIj5cbiAgICAgICAgPExhYmVsPkV4YW1wbGUgQ29vcmRpbmF0ZXM8L0xhYmVsPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImV4YW1wbGUtdmFsdWVcIj5cbiAgICAgICAgPHNwYW4+e2V4YW1wbGV9PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9Sb290PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IGhvdChtb2R1bGUpKHJlbmRlcilcbmV4cG9ydCBjb25zdCB0ZXN0Q29tcG9uZW50ID0gcmVuZGVyXG4iXX0=