import { jsx as _jsx } from "react/jsx-runtime";
import { MetacardInteraction } from './metacard-interactions';
import { useDialog } from '../../component/dialog';
import { TypedUserInstance } from '../../component/singletons/TypedUser';
import { MetacardOverwrite } from '../../component/metacard-overwrite/metacard-overwrite.view';
export var OverwriteAction = function (props) {
    if (!props.model || props.model.length !== 1) {
        return null;
    }
    var result = props.model[0];
    if (result.isDeleted() ||
        result.isRevision() ||
        result.isRemote() ||
        !TypedUserInstance.canWrite(result)) {
        return null;
    }
    var dialogContext = useDialog();
    return (_jsx(MetacardInteraction, { onClick: function () {
            props.onClose();
            if (props.model) {
                dialogContext.setProps({
                    children: (_jsx(MetacardOverwrite, { title: 'Overwrite', lazyResult: result })),
                    open: true,
                });
            }
        }, icon: "fa fa-files-o", text: 'Overwrite', help: "This will overwrite the item content. To restore a previous content, you can click on 'File' in the toolbar, and then click 'Restore Archived Items'." }));
};
export default OverwriteAction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcndyaXRlLWludGVyYWN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL3JlYWN0LWNvbXBvbmVudC9tZXRhY2FyZC1pbnRlcmFjdGlvbnMvb3ZlcndyaXRlLWludGVyYWN0aW9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBZ0JBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFBO0FBRTdELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQTtBQUNsRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQTtBQUN4RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQTtBQUU5RixNQUFNLENBQUMsSUFBTSxlQUFlLEdBQUcsVUFBQyxLQUErQjtJQUM3RCxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUM3QyxPQUFPLElBQUksQ0FBQTtJQUNiLENBQUM7SUFFRCxJQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBRTdCLElBQ0UsTUFBTSxDQUFDLFNBQVMsRUFBRTtRQUNsQixNQUFNLENBQUMsVUFBVSxFQUFFO1FBQ25CLE1BQU0sQ0FBQyxRQUFRLEVBQUU7UUFDakIsQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQ25DLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQTtJQUNiLENBQUM7SUFFRCxJQUFNLGFBQWEsR0FBRyxTQUFTLEVBQUUsQ0FBQTtJQUNqQyxPQUFPLENBQ0wsS0FBQyxtQkFBbUIsSUFDbEIsT0FBTyxFQUFFO1lBQ1AsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFBO1lBQ2YsSUFBSSxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ2hCLGFBQWEsQ0FBQyxRQUFRLENBQUM7b0JBQ3JCLFFBQVEsRUFBRSxDQUNSLEtBQUMsaUJBQWlCLElBQUMsS0FBSyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsTUFBTSxHQUFJLENBQzlEO29CQUNELElBQUksRUFBRSxJQUFJO2lCQUNYLENBQUMsQ0FBQTtZQUNKLENBQUM7UUFDSCxDQUFDLEVBQ0QsSUFBSSxFQUFDLGVBQWUsRUFDcEIsSUFBSSxFQUFFLFdBQVcsRUFDakIsSUFBSSxFQUFDLHVKQUF1SixHQUM1SixDQUNILENBQUE7QUFDSCxDQUFDLENBQUE7QUFFRCxlQUFlLGVBQWUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBDb2RpY2UgRm91bmRhdGlvblxuICpcbiAqIFRoaXMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXJcbiAqIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlXG4gKiBMaWNlbnNlLCBvciBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0XG4gKiBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlVcbiAqIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuIEEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBpcyBkaXN0cmlidXRlZCBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbSBhbmQgY2FuIGJlIGZvdW5kIGF0XG4gKiA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2xncGwuaHRtbD4uXG4gKlxuICoqL1xuXG5pbXBvcnQgeyBNZXRhY2FyZEludGVyYWN0aW9uUHJvcHMgfSBmcm9tICcuJ1xuaW1wb3J0IHsgTWV0YWNhcmRJbnRlcmFjdGlvbiB9IGZyb20gJy4vbWV0YWNhcmQtaW50ZXJhY3Rpb25zJ1xuXG5pbXBvcnQgeyB1c2VEaWFsb2cgfSBmcm9tICcuLi8uLi9jb21wb25lbnQvZGlhbG9nJ1xuaW1wb3J0IHsgVHlwZWRVc2VySW5zdGFuY2UgfSBmcm9tICcuLi8uLi9jb21wb25lbnQvc2luZ2xldG9ucy9UeXBlZFVzZXInXG5pbXBvcnQgeyBNZXRhY2FyZE92ZXJ3cml0ZSB9IGZyb20gJy4uLy4uL2NvbXBvbmVudC9tZXRhY2FyZC1vdmVyd3JpdGUvbWV0YWNhcmQtb3ZlcndyaXRlLnZpZXcnXG5cbmV4cG9ydCBjb25zdCBPdmVyd3JpdGVBY3Rpb24gPSAocHJvcHM6IE1ldGFjYXJkSW50ZXJhY3Rpb25Qcm9wcykgPT4ge1xuICBpZiAoIXByb3BzLm1vZGVsIHx8IHByb3BzLm1vZGVsLmxlbmd0aCAhPT0gMSkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBjb25zdCByZXN1bHQgPSBwcm9wcy5tb2RlbFswXVxuXG4gIGlmIChcbiAgICByZXN1bHQuaXNEZWxldGVkKCkgfHxcbiAgICByZXN1bHQuaXNSZXZpc2lvbigpIHx8XG4gICAgcmVzdWx0LmlzUmVtb3RlKCkgfHxcbiAgICAhVHlwZWRVc2VySW5zdGFuY2UuY2FuV3JpdGUocmVzdWx0KVxuICApIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG5cbiAgY29uc3QgZGlhbG9nQ29udGV4dCA9IHVzZURpYWxvZygpXG4gIHJldHVybiAoXG4gICAgPE1ldGFjYXJkSW50ZXJhY3Rpb25cbiAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgcHJvcHMub25DbG9zZSgpXG4gICAgICAgIGlmIChwcm9wcy5tb2RlbCkge1xuICAgICAgICAgIGRpYWxvZ0NvbnRleHQuc2V0UHJvcHMoe1xuICAgICAgICAgICAgY2hpbGRyZW46IChcbiAgICAgICAgICAgICAgPE1ldGFjYXJkT3ZlcndyaXRlIHRpdGxlPXsnT3ZlcndyaXRlJ30gbGF6eVJlc3VsdD17cmVzdWx0fSAvPlxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIG9wZW46IHRydWUsXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfX1cbiAgICAgIGljb249XCJmYSBmYS1maWxlcy1vXCJcbiAgICAgIHRleHQ9eydPdmVyd3JpdGUnfVxuICAgICAgaGVscD1cIlRoaXMgd2lsbCBvdmVyd3JpdGUgdGhlIGl0ZW0gY29udGVudC4gVG8gcmVzdG9yZSBhIHByZXZpb3VzIGNvbnRlbnQsIHlvdSBjYW4gY2xpY2sgb24gJ0ZpbGUnIGluIHRoZSB0b29sYmFyLCBhbmQgdGhlbiBjbGljayAnUmVzdG9yZSBBcmNoaXZlZCBJdGVtcycuXCJcbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IE92ZXJ3cml0ZUFjdGlvblxuIl19