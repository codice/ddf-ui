import { jsx as _jsx } from "react/jsx-runtime";
import { MetacardInteraction } from './metacard-interactions';
import { StartupDataStore } from '../../js/model/Startup/startup';
import { useDialog } from '../../component/dialog';
import { useDownloadComponent } from '../../component/download/download';
var isDownloadable = function (model) {
    return model.some(function (result) { return result.getDownloadUrl(); });
};
var DownloadProduct = function (_a) {
    var model = _a.model;
    var setProps = useDialog().setProps;
    var DownloadComponent = useDownloadComponent();
    if (!model || model.length === 0) {
        return null;
    }
    if (!isDownloadable(model)) {
        return null;
    }
    return (_jsx(MetacardInteraction, { text: "Download", help: "Downloads the result's associated product directly to your machine.", icon: "fa fa-download", onClick: function () {
            setProps({
                open: true,
                children: _jsx(DownloadComponent, { lazyResults: model }),
            });
        }, children: isRemoteResourceCached(model) && (_jsx("span", { "data-help": "Displayed if the remote resource has been cached locally.", className: "download-cached", children: "Local" })) }));
};
var isRemoteResourceCached = function (model) {
    if (!model || model.length <= 0)
        return false;
    return (model[0].isResourceLocal &&
        model[0].plain.metacard.properties['source-id'] !==
            StartupDataStore.Sources.localSourceId);
};
export default DownloadProduct;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG93bmxvYWQtaW50ZXJhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWFpbi93ZWJhcHAvcmVhY3QtY29tcG9uZW50L21ldGFjYXJkLWludGVyYWN0aW9ucy9kb3dubG9hZC1pbnRlcmFjdGlvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQWdCQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQTtBQUc3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQTtBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sd0JBQXdCLENBQUE7QUFDbEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sbUNBQW1DLENBQUE7QUFFeEUsSUFBTSxjQUFjLEdBQUcsVUFBQyxLQUF3QjtJQUM5QyxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBQyxNQUFNLElBQUssT0FBQSxNQUFNLENBQUMsY0FBYyxFQUFFLEVBQXZCLENBQXVCLENBQUMsQ0FBQTtBQUN4RCxDQUFDLENBQUE7QUFFRCxJQUFNLGVBQWUsR0FBRyxVQUFDLEVBQW1DO1FBQWpDLEtBQUssV0FBQTtJQUN0QixJQUFBLFFBQVEsR0FBSyxTQUFTLEVBQUUsU0FBaEIsQ0FBZ0I7SUFDaEMsSUFBTSxpQkFBaUIsR0FBRyxvQkFBb0IsRUFBRSxDQUFBO0lBQ2hELElBQUksQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUNqQyxPQUFPLElBQUksQ0FBQTtJQUNiLENBQUM7SUFDRCxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7UUFDM0IsT0FBTyxJQUFJLENBQUE7SUFDYixDQUFDO0lBQ0QsT0FBTyxDQUNMLEtBQUMsbUJBQW1CLElBQ2xCLElBQUksRUFBQyxVQUFVLEVBQ2YsSUFBSSxFQUFDLHFFQUFxRSxFQUMxRSxJQUFJLEVBQUMsZ0JBQWdCLEVBQ3JCLE9BQU8sRUFBRTtZQUNQLFFBQVEsQ0FBQztnQkFDUCxJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsS0FBQyxpQkFBaUIsSUFBQyxXQUFXLEVBQUUsS0FBSyxHQUFJO2FBQ3BELENBQUMsQ0FBQTtRQUNKLENBQUMsWUFFQSxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUNoQyw0QkFDWSwyREFBMkQsRUFDckUsU0FBUyxFQUFDLGlCQUFpQixzQkFHdEIsQ0FDUixHQUNtQixDQUN2QixDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRUQsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQXdCO0lBQ3RELElBQUksQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDO1FBQUUsT0FBTyxLQUFLLENBQUE7SUFFN0MsT0FBTyxDQUNMLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlO1FBQ3hCLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUM7WUFDN0MsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FDekMsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELGVBQWUsZUFBZSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5cbmltcG9ydCB7IE1ldGFjYXJkSW50ZXJhY3Rpb25Qcm9wcyB9IGZyb20gJy4nXG5pbXBvcnQgeyBNZXRhY2FyZEludGVyYWN0aW9uIH0gZnJvbSAnLi9tZXRhY2FyZC1pbnRlcmFjdGlvbnMnXG5cbmltcG9ydCB7IExhenlRdWVyeVJlc3VsdCB9IGZyb20gJy4uLy4uL2pzL21vZGVsL0xhenlRdWVyeVJlc3VsdC9MYXp5UXVlcnlSZXN1bHQnXG5pbXBvcnQgeyBTdGFydHVwRGF0YVN0b3JlIH0gZnJvbSAnLi4vLi4vanMvbW9kZWwvU3RhcnR1cC9zdGFydHVwJ1xuaW1wb3J0IHsgdXNlRGlhbG9nIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50L2RpYWxvZydcbmltcG9ydCB7IHVzZURvd25sb2FkQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50L2Rvd25sb2FkL2Rvd25sb2FkJ1xuXG5jb25zdCBpc0Rvd25sb2FkYWJsZSA9IChtb2RlbDogTGF6eVF1ZXJ5UmVzdWx0W10pOiBib29sZWFuID0+IHtcbiAgcmV0dXJuIG1vZGVsLnNvbWUoKHJlc3VsdCkgPT4gcmVzdWx0LmdldERvd25sb2FkVXJsKCkpXG59XG5cbmNvbnN0IERvd25sb2FkUHJvZHVjdCA9ICh7IG1vZGVsIH06IE1ldGFjYXJkSW50ZXJhY3Rpb25Qcm9wcykgPT4ge1xuICBjb25zdCB7IHNldFByb3BzIH0gPSB1c2VEaWFsb2coKVxuICBjb25zdCBEb3dubG9hZENvbXBvbmVudCA9IHVzZURvd25sb2FkQ29tcG9uZW50KClcbiAgaWYgKCFtb2RlbCB8fCBtb2RlbC5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGlmICghaXNEb3dubG9hZGFibGUobW9kZWwpKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuICByZXR1cm4gKFxuICAgIDxNZXRhY2FyZEludGVyYWN0aW9uXG4gICAgICB0ZXh0PVwiRG93bmxvYWRcIlxuICAgICAgaGVscD1cIkRvd25sb2FkcyB0aGUgcmVzdWx0J3MgYXNzb2NpYXRlZCBwcm9kdWN0IGRpcmVjdGx5IHRvIHlvdXIgbWFjaGluZS5cIlxuICAgICAgaWNvbj1cImZhIGZhLWRvd25sb2FkXCJcbiAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgc2V0UHJvcHMoe1xuICAgICAgICAgIG9wZW46IHRydWUsXG4gICAgICAgICAgY2hpbGRyZW46IDxEb3dubG9hZENvbXBvbmVudCBsYXp5UmVzdWx0cz17bW9kZWx9IC8+LFxuICAgICAgICB9KVxuICAgICAgfX1cbiAgICA+XG4gICAgICB7aXNSZW1vdGVSZXNvdXJjZUNhY2hlZChtb2RlbCkgJiYgKFxuICAgICAgICA8c3BhblxuICAgICAgICAgIGRhdGEtaGVscD1cIkRpc3BsYXllZCBpZiB0aGUgcmVtb3RlIHJlc291cmNlIGhhcyBiZWVuIGNhY2hlZCBsb2NhbGx5LlwiXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZG93bmxvYWQtY2FjaGVkXCJcbiAgICAgICAgPlxuICAgICAgICAgIExvY2FsXG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICl9XG4gICAgPC9NZXRhY2FyZEludGVyYWN0aW9uPlxuICApXG59XG5cbmNvbnN0IGlzUmVtb3RlUmVzb3VyY2VDYWNoZWQgPSAobW9kZWw6IExhenlRdWVyeVJlc3VsdFtdKTogYm9vbGVhbiA9PiB7XG4gIGlmICghbW9kZWwgfHwgbW9kZWwubGVuZ3RoIDw9IDApIHJldHVybiBmYWxzZVxuXG4gIHJldHVybiAoXG4gICAgbW9kZWxbMF0uaXNSZXNvdXJjZUxvY2FsICYmXG4gICAgbW9kZWxbMF0ucGxhaW4ubWV0YWNhcmQucHJvcGVydGllc1snc291cmNlLWlkJ10gIT09XG4gICAgICBTdGFydHVwRGF0YVN0b3JlLlNvdXJjZXMubG9jYWxTb3VyY2VJZFxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IERvd25sb2FkUHJvZHVjdFxuIl19