import { __makeTemplateObject } from "tslib";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import * as React from 'react';
import styled from 'styled-components';
import MuiDivider from '@mui/material/Divider';
export var Divider = function () {
    return (React.createElement(MuiDivider, { variant: "fullWidth", orientation: "horizontal", className: "my-3" }));
};
var InteractionIcon = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  text-align: center;\n  width: ", ";\n  display: inline-block;\n  line-height: ", ";\n  height: ", ";\n"], ["\n  text-align: center;\n  width: ", ";\n  display: inline-block;\n  line-height: ", ";\n  height: ", ";\n"])), function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumButtonSize; });
var InteractionText = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  line-height: ", ";\n  height: ", ";\n  display: inline-block;\n"], ["\n  line-height: ", ";\n  height: ", ";\n  display: inline-block;\n"])), function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumButtonSize; });
var Interaction = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  line-height: ", ";\n  height: ", ";\n  white-space: nowrap;\n  padding: ", ";\n  cursor: pointer;\n  overflow: hidden;\n"], ["\n  line-height: ", ";\n  height: ", ";\n  white-space: nowrap;\n  padding: ", ";\n  cursor: pointer;\n  overflow: hidden;\n"])), function (props) { return props.theme.minimumButtonSize; }, function (props) { return props.theme.minimumButtonSize; }, function (props) { return "0px ".concat(props.theme.minimumSpacing); });
export var MetacardInteraction = function (props) {
    return (React.createElement(Interaction, { "data-id": "interaction-container", "data-help": props.help, onClick: function () { return props.onClick(props); } },
        React.createElement(InteractionIcon, { className: props.icon }),
        React.createElement(InteractionText, null, props.text),
        props.children));
};
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWNhcmQtaW50ZXJhY3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21haW4vd2ViYXBwL3JlYWN0LWNvbXBvbmVudC9tZXRhY2FyZC1pbnRlcmFjdGlvbnMvbWV0YWNhcmQtaW50ZXJhY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7SUFhSTtBQUNKLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQzlCLE9BQU8sTUFBTSxNQUFNLG1CQUFtQixDQUFBO0FBQ3RDLE9BQU8sVUFBVSxNQUFNLHVCQUF1QixDQUFBO0FBRTlDLE1BQU0sQ0FBQyxJQUFNLE9BQU8sR0FBRztJQUNyQixPQUFPLENBQ0wsb0JBQUMsVUFBVSxJQUFDLE9BQU8sRUFBQyxXQUFXLEVBQUMsV0FBVyxFQUFDLFlBQVksRUFBQyxTQUFTLEVBQUMsTUFBTSxHQUFHLENBQzdFLENBQUE7QUFDSCxDQUFDLENBQUE7QUFFRCxJQUFNLGVBQWUsR0FBRyxNQUFNLENBQUMsR0FBRywrS0FBQSxvQ0FFdkIsRUFBd0MsOENBRWxDLEVBQXdDLGVBQzdDLEVBQXdDLEtBQ25ELEtBSlUsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUE3QixDQUE2QixFQUVsQyxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEVBQTdCLENBQTZCLEVBQzdDLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsRUFBN0IsQ0FBNkIsQ0FDbkQsQ0FBQTtBQUVELElBQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxHQUFHLHdJQUFBLG1CQUNqQixFQUF3QyxlQUM3QyxFQUF3QywrQkFFbkQsS0FIZ0IsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUE3QixDQUE2QixFQUM3QyxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEVBQTdCLENBQTZCLENBRW5ELENBQUE7QUFFRCxJQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsR0FBRyxpTUFBQSxtQkFDYixFQUF3QyxlQUM3QyxFQUF3Qyx3Q0FFdkMsRUFBOEMsOENBRzFELEtBTmdCLFVBQUMsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsRUFBN0IsQ0FBNkIsRUFDN0MsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUE3QixDQUE2QixFQUV2QyxVQUFDLEtBQUssSUFBSyxPQUFBLGNBQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUUsRUFBbkMsQ0FBbUMsQ0FHMUQsQ0FBQTtBQVVELE1BQU0sQ0FBQyxJQUFNLG1CQUFtQixHQUFHLFVBQUMsS0FBK0I7SUFDakUsT0FBTyxDQUNMLG9CQUFDLFdBQVcsZUFDRix1QkFBdUIsZUFDcEIsS0FBSyxDQUFDLElBQUksRUFDckIsT0FBTyxFQUFFLGNBQU0sT0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFwQixDQUFvQjtRQUVuQyxvQkFBQyxlQUFlLElBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxJQUFJLEdBQUk7UUFDMUMsb0JBQUMsZUFBZSxRQUFFLEtBQUssQ0FBQyxJQUFJLENBQW1CO1FBQzlDLEtBQUssQ0FBQyxRQUFRLENBQ0gsQ0FDZixDQUFBO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5pbXBvcnQgTXVpRGl2aWRlciBmcm9tICdAbXVpL21hdGVyaWFsL0RpdmlkZXInXG5cbmV4cG9ydCBjb25zdCBEaXZpZGVyID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxNdWlEaXZpZGVyIHZhcmlhbnQ9XCJmdWxsV2lkdGhcIiBvcmllbnRhdGlvbj1cImhvcml6b250YWxcIiBjbGFzc05hbWU9XCJteS0zXCIgLz5cbiAgKVxufVxuXG5jb25zdCBJbnRlcmFjdGlvbkljb24gPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bUJ1dHRvblNpemV9O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bUJ1dHRvblNpemV9O1xuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtQnV0dG9uU2l6ZX07XG5gXG5cbmNvbnN0IEludGVyYWN0aW9uVGV4dCA9IHN0eWxlZC5kaXZgXG4gIGxpbmUtaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bUJ1dHRvblNpemV9O1xuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5taW5pbXVtQnV0dG9uU2l6ZX07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbmBcblxuY29uc3QgSW50ZXJhY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBsaW5lLWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLm1pbmltdW1CdXR0b25TaXplfTtcbiAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUubWluaW11bUJ1dHRvblNpemV9O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBwYWRkaW5nOiAkeyhwcm9wcykgPT4gYDBweCAke3Byb3BzLnRoZW1lLm1pbmltdW1TcGFjaW5nfWB9O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5gXG5cbnR5cGUgTWV0YWNhcmRJbnRlcmFjdGlvblByb3BzID0ge1xuICBoZWxwOiBzdHJpbmdcbiAgaWNvbjogc3RyaW5nXG4gIHRleHQ6IHN0cmluZ1xuICBvbkNsaWNrOiAocHJvcHM6IGFueSkgPT4gdm9pZFxuICBjaGlsZHJlbj86IGFueVxufVxuXG5leHBvcnQgY29uc3QgTWV0YWNhcmRJbnRlcmFjdGlvbiA9IChwcm9wczogTWV0YWNhcmRJbnRlcmFjdGlvblByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEludGVyYWN0aW9uXG4gICAgICBkYXRhLWlkPVwiaW50ZXJhY3Rpb24tY29udGFpbmVyXCJcbiAgICAgIGRhdGEtaGVscD17cHJvcHMuaGVscH1cbiAgICAgIG9uQ2xpY2s9eygpID0+IHByb3BzLm9uQ2xpY2socHJvcHMpfVxuICAgID5cbiAgICAgIDxJbnRlcmFjdGlvbkljb24gY2xhc3NOYW1lPXtwcm9wcy5pY29ufSAvPlxuICAgICAgPEludGVyYWN0aW9uVGV4dD57cHJvcHMudGV4dH08L0ludGVyYWN0aW9uVGV4dD5cbiAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICA8L0ludGVyYWN0aW9uPlxuICApXG59XG4iXX0=