import { __assign } from "tslib";
import { jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
import { Divider } from './metacard-interactions';
import ExtensionPoints from '../../extension-points';
var MetacardInteractions = function (props) {
    return (_jsx(_Fragment, { children: ExtensionPoints.metacardInteractions.map(function (Component, i) {
            var componentName = Component.toString();
            var key = componentName + '-' + i;
            return _jsx(Component, __assign({}, props), key);
        }) }));
};
var Component = MetacardInteractions;
export default Component;
export { Divider };
export { MetacardInteraction } from './metacard-interactions';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWFpbi93ZWJhcHAvcmVhY3QtY29tcG9uZW50L21ldGFjYXJkLWludGVyYWN0aW9ucy9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFJO0FBRUosT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHlCQUF5QixDQUFBO0FBQ2pELE9BQU8sZUFBZSxNQUFNLHdCQUF3QixDQUFBO0FBZ0JwRCxJQUFNLG9CQUFvQixHQUFHLFVBQUMsS0FBK0I7SUFDM0QsT0FBTyxDQUNMLDRCQUNHLGVBQWUsQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsVUFBQyxTQUFTLEVBQUUsQ0FBQztZQUNyRCxJQUFNLGFBQWEsR0FBRyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUE7WUFDMUMsSUFBTSxHQUFHLEdBQUcsYUFBYSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUE7WUFDbkMsT0FBTyxLQUFDLFNBQVMsZUFBZSxLQUFLLEdBQWQsR0FBRyxDQUFlLENBQUE7UUFDM0MsQ0FBQyxDQUFDLEdBQ0QsQ0FDSixDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRUQsSUFBTSxTQUFTLEdBQUcsb0JBQW9CLENBQUE7QUFFdEMsZUFBZSxTQUFTLENBQUE7QUFFeEIsT0FBTyxFQUFFLE9BQU8sRUFBRSxDQUFBO0FBRWxCLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIENvZGljZSBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlclxuICogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGVcbiAqIExpY2Vuc2UsIG9yIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXRcbiAqIGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVVxuICogTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4gQSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGlzIGRpc3RyaWJ1dGVkIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtIGFuZCBjYW4gYmUgZm91bmQgYXRcbiAqIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC5odG1sPi5cbiAqXG4gKiovXG5cbmltcG9ydCB7IERpdmlkZXIgfSBmcm9tICcuL21ldGFjYXJkLWludGVyYWN0aW9ucydcbmltcG9ydCBFeHRlbnNpb25Qb2ludHMgZnJvbSAnLi4vLi4vZXh0ZW5zaW9uLXBvaW50cydcbmltcG9ydCB7IExhenlRdWVyeVJlc3VsdCB9IGZyb20gJy4uLy4uL2pzL21vZGVsL0xhenlRdWVyeVJlc3VsdC9MYXp5UXVlcnlSZXN1bHQnXG5cbmV4cG9ydCB0eXBlIE1ldGFjYXJkSW50ZXJhY3Rpb25Qcm9wcyA9IHtcbiAgbW9kZWw/OiBMYXp5UXVlcnlSZXN1bHRbXVxuICBvbkNsb3NlOiAoKSA9PiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFJlc3VsdCA9IHtcbiAgZ2V0OiAoa2V5OiBhbnkpID0+IGFueVxuICBpc1Jlc291cmNlOiAoKSA9PiBib29sZWFuXG4gIGlzUmV2aXNpb246ICgpID0+IGJvb2xlYW5cbiAgaXNEZWxldGVkOiAoKSA9PiBib29sZWFuXG4gIGlzUmVtb3RlOiAoKSA9PiBib29sZWFuXG59XG5cbmNvbnN0IE1ldGFjYXJkSW50ZXJhY3Rpb25zID0gKHByb3BzOiBNZXRhY2FyZEludGVyYWN0aW9uUHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge0V4dGVuc2lvblBvaW50cy5tZXRhY2FyZEludGVyYWN0aW9ucy5tYXAoKENvbXBvbmVudCwgaSkgPT4ge1xuICAgICAgICBjb25zdCBjb21wb25lbnROYW1lID0gQ29tcG9uZW50LnRvU3RyaW5nKClcbiAgICAgICAgY29uc3Qga2V5ID0gY29tcG9uZW50TmFtZSArICctJyArIGlcbiAgICAgICAgcmV0dXJuIDxDb21wb25lbnQga2V5PXtrZXl9IHsuLi5wcm9wc30gLz5cbiAgICAgIH0pfVxuICAgIDwvPlxuICApXG59XG5cbmNvbnN0IENvbXBvbmVudCA9IE1ldGFjYXJkSW50ZXJhY3Rpb25zXG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudFxuXG5leHBvcnQgeyBEaXZpZGVyIH1cblxuZXhwb3J0IHsgTWV0YWNhcmRJbnRlcmFjdGlvbiB9IGZyb20gJy4vbWV0YWNhcmQtaW50ZXJhY3Rpb25zJ1xuIl19